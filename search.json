[{"path":[]},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ggobi.github.io/ggally/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":[]},{"path":[]},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_autopoint","dir":"Articles","previous_headings":"Bivariate plots > with 2x continuous variables","what":"ggally_autopoint()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_autopoint(tips, aes(x = total_bill, y = tip)) ggally_autopoint(tips, aes(x = total_bill, y = tip, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_cor","dir":"Articles","previous_headings":"Bivariate plots > with 2x continuous variables","what":"ggally_cor()","title":"ggally_*(): List of available high-level plots","text":"See also ggally_statistic().","code":"ggally_cor(tips, aes(x = total_bill, y = tip)) ggally_cor(tips, aes(x = total_bill, y = tip, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_density","dir":"Articles","previous_headings":"Bivariate plots > with 2x continuous variables","what":"ggally_density()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_density(tips, aes(x = total_bill, y = tip)) ggally_density(tips, aes(x = total_bill, y = tip, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_points","dir":"Articles","previous_headings":"Bivariate plots > with 2x continuous variables","what":"ggally_points()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_points(tips, aes(x = total_bill, y = tip)) ggally_points(tips, aes(x = total_bill, y = tip, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_smooth-ggally_smooth_lm-ggally_smooth_loess","dir":"Articles","previous_headings":"Bivariate plots > with 2x continuous variables","what":"ggally_smooth(), ggally_smooth_lm() & ggally_smooth_loess()","title":"ggally_*(): List of available high-level plots","text":"See also ggally_smooth() options.","code":"ggally_smooth_lm(tips, aes(x = total_bill, y = tip)) ggally_smooth_lm(tips, aes(x = total_bill, y = tip, colour = time)) ggally_smooth_loess(tips, aes(x = total_bill, y = tip)) ggally_smooth_loess(tips, aes(x = total_bill, y = tip, colour = time))"},{"path":[]},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_colbar","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_colbar()","title":"ggally_*(): List of available high-level plots","text":"Note: colour aesthetic taken account.","code":"ggally_colbar(tips, aes(x = day, y = smoker))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_autopoint-1","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_autopoint()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_autopoint(tips, aes(x = day, y = smoker)) ggally_autopoint(tips, aes(x = day, y = smoker, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_count","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_count()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_count(tips, aes(x = day, y = smoker)) ggally_count(tips, aes(x = day, y = smoker, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_cross","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_cross()","title":"ggally_*(): List of available high-level plots","text":"Note: colour aesthetic taken account corresponds x y.","code":"ggally_cross(tips, aes(x = day, y = smoker)) ggally_cross(tips, aes(x = day, y = smoker, colour = time)) ggally_cross(tips, aes(x = day, y = smoker, colour = smoker))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_crosstable","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_crosstable()","title":"ggally_*(): List of available high-level plots","text":"Note: colour aesthetic taken account.","code":"ggally_crosstable(tips, aes(x = day, y = smoker)) ggally_crosstable(tips, aes(x = day, y = smoker), cells = \"col.prop\", fill = \"std.resid\")"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_facetbar","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_facetbar()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_facetbar(tips, aes(x = day, y = smoker)) ggally_facetbar(tips, aes(x = day, y = smoker, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_ratio","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_ratio()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_ratio(tips, aes(x = day, y = smoker)) ggally_ratio(tips, aes(x = day, y = smoker, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_rowbar","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_rowbar()","title":"ggally_*(): List of available high-level plots","text":"Note: colour aesthetic taken account.","code":"ggally_rowbar(tips, aes(x = day, y = smoker))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_table","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_table()","title":"ggally_*(): List of available high-level plots","text":"Note: colour aesthetic taken account corresponds x y.","code":"ggally_table(tips, aes(x = day, y = smoker)) ggally_table(tips, aes(x = day, y = smoker, colour = time)) ggally_table(tips, aes(x = day, y = smoker, colour = smoker))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_trends","dir":"Articles","previous_headings":"Bivariate plots > with 2x discrete variables","what":"ggally_trends()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_trends(tips, aes(x = day, y = smoker)) ggally_trends(tips, aes(x = day, y = smoker, colour = time))"},{"path":[]},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_autopoint-2","dir":"Articles","previous_headings":"Bivariate plots > with 1x continuous and 1x discrete variables","what":"ggally_autopoint()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_autopoint(tips, aes(x = total_bill, y = day)) ggally_autopoint(tips, aes(x = total_bill, y = day, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_box-ggally_box_no_facet","dir":"Articles","previous_headings":"Bivariate plots > with 1x continuous and 1x discrete variables","what":"ggally_box() & ggally_box_no_facet()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_box(tips, aes(x = total_bill, y = day)) ggally_box(tips, aes(x = total_bill, y = day, colour = time)) ggally_box_no_facet(tips, aes(x = total_bill, y = day)) ggally_box_no_facet(tips, aes(x = total_bill, y = day, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_denstrip","dir":"Articles","previous_headings":"Bivariate plots > with 1x continuous and 1x discrete variables","what":"ggally_denstrip()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_denstrip(tips, aes(x = total_bill, y = day)) #> `stat_bin()` using `bins = 30`. Pick better value with #> `binwidth`. #> Warning: Removed 45 rows containing missing values or values outside the scale #> range (`geom_bar()`). ggally_denstrip(tips, aes(x = total_bill, y = day, colour = time)) #> `stat_bin()` using `bins = 30`. Pick better value with #> `binwidth`. #> Warning: Removed 45 rows containing missing values or values outside the scale #> range (`geom_bar()`)."},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_dot-ggally_dot_no_facet","dir":"Articles","previous_headings":"Bivariate plots > with 1x continuous and 1x discrete variables","what":"ggally_dot() & ggally_dot_no_facet()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_dot(tips, aes(x = total_bill, y = day)) ggally_dot(tips, aes(x = total_bill, y = day, colour = time)) ggally_dot_no_facet(tips, aes(x = total_bill, y = day)) ggally_dot_no_facet(tips, aes(x = total_bill, y = day, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_facetdensitystrip","dir":"Articles","previous_headings":"Bivariate plots > with 1x continuous and 1x discrete variables","what":"ggally_facetdensitystrip()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_facetdensitystrip(tips, aes(x = total_bill, y = day)) ggally_facetdensitystrip(tips, aes(x = total_bill, y = day, colour = time)) #> Warning: Groups with fewer than two data points have been #> dropped. #> Warning: Removed 1 row containing missing values or values outside the scale #> range (`geom_line()`)."},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_facethist","dir":"Articles","previous_headings":"Bivariate plots > with 1x continuous and 1x discrete variables","what":"ggally_facethist()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_facethist(tips, aes(x = total_bill, y = day)) #> `stat_bin()` using `bins = 30`. Pick better value with #> `binwidth`. ggally_facethist(tips, aes(x = total_bill, y = day, colour = time)) #> `stat_bin()` using `bins = 30`. Pick better value with #> `binwidth`."},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_summarise_by","dir":"Articles","previous_headings":"Bivariate plots > with 1x continuous and 1x discrete variables","what":"ggally_summarise_by()","title":"ggally_*(): List of available high-level plots","text":"Note: colour aesthetic kept corresponding discrete axis.","code":"ggally_summarise_by(tips, aes(x = total_bill, y = day)) ggally_summarise_by(tips, aes(x = total_bill, y = day, colour = day))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_trends-1","dir":"Articles","previous_headings":"Bivariate plots > with 1x continuous and 1x discrete variables","what":"ggally_trends()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_trends(tips, aes(y = total_bill, x = day)) ggally_trends(tips, aes(y = total_bill, x = day, colour = time))"},{"path":[]},{"path":[]},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_autopointdiag","dir":"Articles","previous_headings":"Diagonal plots > with 1x continuous variable","what":"ggally_autopointDiag()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_autopointDiag(tips, aes(x = total_bill)) ggally_autopointDiag(tips, aes(x = total_bill, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_bardiag","dir":"Articles","previous_headings":"Diagonal plots > with 1x continuous variable","what":"ggally_barDiag()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_barDiag(tips, aes(x = total_bill)) #> `stat_bin()` using `bins = 30`. Pick better value with #> `binwidth`. ggally_barDiag(tips, aes(x = total_bill, colour = time)) #> `stat_bin()` using `bins = 30`. Pick better value with #> `binwidth`."},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_densitydiag","dir":"Articles","previous_headings":"Diagonal plots > with 1x continuous variable","what":"ggally_densityDiag()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_densityDiag(tips, aes(x = total_bill)) ggally_densityDiag(tips, aes(x = total_bill, colour = time))"},{"path":[]},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_autopointdiag-1","dir":"Articles","previous_headings":"Diagonal plots > with 1x discrete variable","what":"ggally_autopointDiag()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_autopointDiag(tips, aes(x = day)) ggally_autopointDiag(tips, aes(x = day, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_bardiag-1","dir":"Articles","previous_headings":"Diagonal plots > with 1x discrete variable","what":"ggally_barDiag()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_barDiag(tips, aes(x = day)) ggally_barDiag(tips, aes(x = day, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_countdiag","dir":"Articles","previous_headings":"Diagonal plots > with 1x discrete variable","what":"ggally_countDiag()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_countDiag(tips, aes(x = day)) ggally_countDiag(tips, aes(x = day, colour = time))"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"ggally_densitydiag-1","dir":"Articles","previous_headings":"Diagonal plots > with 1x discrete variable","what":"ggally_densityDiag()","title":"ggally_*(): List of available high-level plots","text":"","code":"ggally_densityDiag(tips, aes(x = day)) ggally_densityDiag(tips, aes(x = day, colour = time)) #> Warning: Groups with fewer than two data points have been #> dropped. #> Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; #> returning -Inf"},{"path":"https://ggobi.github.io/ggally/articles/ggally_plots.html","id":"additional-plots","dir":"Articles","previous_headings":"","what":"Additional plots","title":"ggally_*(): List of available high-level plots","text":"ggally_statistic() ggally_text() display custom text ggally_blank() ggally_blankDiag() blank plot ggally_na() ggally_naDiag() display large NA","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"ggallyggbivariate","dir":"Articles","previous_headings":"","what":"GGally::ggbivariate()","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"purpose function easily plot visualization bivariate relation one outcome several explanatory variables.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"basic-example","dir":"Articles","previous_headings":"GGally::ggbivariate()","what":"Basic example","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"Simply indicate outcome explanatory variables. discrete continuous.   explanatory variables provided, take available variables outcome.","code":"data(tips) ggbivariate(tips, outcome = \"smoker\", explanatory = c(\"day\", \"time\", \"sex\", \"tip\")) ggbivariate(tips, outcome = \"total_bill\", explanatory = c(\"day\", \"time\", \"sex\", \"tip\")) ggbivariate(tips, \"smoker\")"},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"customize-plot-title-and-legend-title","dir":"Articles","previous_headings":"GGally::ggbivariate()","what":"Customize plot title and legend title","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"","code":"ggbivariate(   tips, \"smoker\", c(\"day\", \"time\", \"sex\", \"tip\"),   title = \"Custom title\" ) +   labs(fill = \"Smoker ?\")"},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"customize-fill-colour-scale","dir":"Articles","previous_headings":"GGally::ggbivariate()","what":"Customize fill colour scale","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"","code":"ggbivariate(tips, \"smoker\", c(\"day\", \"time\", \"sex\", \"tip\")) +   scale_fill_brewer(type = \"qual\")"},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"customize-labels","dir":"Articles","previous_headings":"GGally::ggbivariate()","what":"Customize labels","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"","code":"ggbivariate(   tips, \"smoker\", c(\"day\", \"time\", \"sex\", \"tip\"),   rowbar_args = list(     colour = \"white\",     size = 4,     fontface = \"bold\",     label_format = scales::label_percent(accurary = 1)   ) )"},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"choose-the-sub-plot-from-which-to-get-the-legend","dir":"Articles","previous_headings":"GGally::ggbivariate()","what":"Choose the sub-plot from which to get the legend","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"","code":"ggbivariate(tips, \"smoker\") ggbivariate(tips, \"smoker\", legend = 3)"},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"change-theme","dir":"Articles","previous_headings":"GGally::ggbivariate()","what":"Change theme","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"","code":"ggbivariate(tips, \"smoker\") + theme_light()"},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"use-mapping-to-indicate-weights","dir":"Articles","previous_headings":"GGally::ggbivariate()","what":"Use mapping to indicate weights","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"","code":"d <- as.data.frame(Titanic) ggbivariate(d, \"Survived\", mapping = aes(weight = Freq))"},{"path":"https://ggobi.github.io/ggally/articles/ggbivariate.html","id":"use-types-to-customize-types-of-subplots","dir":"Articles","previous_headings":"GGally::ggbivariate()","what":"Use types to customize types of subplots","title":"ggbivariate(): Plot an outcome with several potential explanatory variables","text":"customization options, directly use ggduo() (see also vig_ggally(\"ggduo\")).","code":"ggbivariate(   tips,   outcome = \"smoker\",   explanatory = c(\"day\", \"time\", \"sex\", \"tip\"),   types = list(comboVertical = \"autopoint\") )"},{"path":"https://ggobi.github.io/ggally/articles/ggcoef.html","id":"ggallyggcoef","dir":"Articles","previous_headings":"","what":"GGally::ggcoef()","title":"ggcoef(): Model coefficients","text":"purpose function quickly plot coefficients model. updated improved version, see GGally::ggcoef_model() corresponding vignette.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggcoef.html","id":"quick-coefficients-plot","dir":"Articles","previous_headings":"GGally::ggcoef()","what":"Quick coefficients plot","title":"ggcoef(): Model coefficients","text":"work automatically, function requires broom package. Simply call ggcoef() model object. result stats::lm, stats::glm model covered broom broom::tidy method1.  case logistic regression (model coefficients usually exponentiated), simply indicated exponentiate = TRUE. Note logarithmic scale used x-axis.","code":"reg <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data = iris) ggcoef(reg) d <- as.data.frame(Titanic) log.reg <- glm(Survived ~ Sex + Age + Class, family = binomial, data = d, weights = d$Freq) ggcoef(log.reg, exponentiate = TRUE)"},{"path":"https://ggobi.github.io/ggally/articles/ggcoef.html","id":"customizing-the-plot","dir":"Articles","previous_headings":"GGally::ggcoef()","what":"Customizing the plot","title":"ggcoef(): Model coefficients","text":"can use conf.int, vline exclude_intercept display confidence intervals error bars, vertical line x = 0 (x = 1 coefficients exponentiated) intercept.  See help page ggcoef() full list arguments used personalize error bars vertical line plotted.  Additional parameters passed [ggplot2::geom_point()].  Finally, can also customize aesthetic mapping points.","code":"ggcoef(reg, vline = FALSE, conf.int = FALSE, exclude_intercept = TRUE) ggcoef(   log.reg,   exponentiate = TRUE,   vline_color = \"red\",   vline_linetype = \"solid\",   errorbar_color = \"blue\",   errorbar_height = .25 ) ggcoef(log.reg, exponentiate = TRUE, color = \"purple\", size = 5, shape = 18) library(ggplot2) ggcoef(log.reg, exponentiate = TRUE, mapping = aes(x = estimate, y = term, size = p.value)) +   scale_size_continuous(trans = \"reverse\")"},{"path":"https://ggobi.github.io/ggally/articles/ggcoef.html","id":"custom-data-frame","dir":"Articles","previous_headings":"GGally::ggcoef()","what":"Custom data frame","title":"ggcoef(): Model coefficients","text":"can also pass custom data frame [ggcoef()]. following variables expected: term (except customize mapping) estimate (except customize mapping) conf.low conf.high (want display error bars)","code":"cust <- data.frame(   term = c(\"male vs. female\", \"30-49 vs. 18-29\", \"50+ vs. 18-29\", \"urban vs. rural\"),   estimate = c(.456, 1.234, 1.897, 1.003),   conf.low = c(.411, 1.042, 1.765, 0.678),   conf.high = c(.498, 1.564, 2.034, 1.476),   variable = c(\"sex\", \"age\", \"age\", \"residence\") ) cust$term <- factor(cust$term, cust$term) ggcoef(cust, exponentiate = TRUE) ggcoef(   cust,   exponentiate = TRUE,   mapping = aes(x = estimate, y = term, colour = variable),   size = 5 )"},{"path":"https://ggobi.github.io/ggally/articles/ggduo.html","id":"ggallyggduo","dir":"Articles","previous_headings":"","what":"GGally::ggduo()","title":"ggduo(): Two-grouped plot matrix","text":"purpose function display two grouped data plot matrix. useful canonical correlation analysis, multiple time series analysis, regression analysis.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggduo.html","id":"canonical-correlation-analysis","dir":"Articles","previous_headings":"GGally::ggduo()","what":"Canonical Correlation Analysis","title":"ggduo(): Two-grouped plot matrix","text":"example derived R Data Analysis Examples | Canonical Correlation Analysis.  UCLA: Institute Digital Research Education. http://www.stats.idre.ucla.edu/r/dae/canonical-correlation-analysis (accessed May 22, 2017). Example 1. researcher collected data three psychological variables, four academic variables (standardized test scores) gender 600 college freshman. interested set psychological variables relates academic variables gender. particular, researcher interested many dimensions (canonical variables) necessary understand association two sets variables.\" First, look within correlation using ggpairs().   Next, look correlation using ggduo().  Since ggduo upper section display correlation values, may use custom function add information continuous plots. strips may removed group name may recovered outer axis labels.","code":"data(psychademic) str(psychademic) #> 'data.frame':    600 obs. of  8 variables: #>  $ locus_of_control: num  -0.84 -0.38 0.89 0.71 -0.64 1.11 0.06 -0.91 0.45 0 ... #>  $ self_concept    : num  -0.24 -0.47 0.59 0.28 0.03 0.9 0.03 -0.59 0.03 0.03 ... #>  $ motivation      : chr  \"4\" \"3\" \"3\" \"3\" ... #>  $ read            : num  54.8 62.7 60.6 62.7 41.6 62.7 41.6 44.2 62.7 62.7 ... #>  $ write           : num  64.5 43.7 56.7 56.7 46.3 64.5 39.1 39.1 51.5 64.5 ... #>  $ math            : num  44.5 44.7 70.5 54.7 38.4 61.4 56.3 46.3 54.4 38.3 ... #>  $ science         : num  52.6 52.6 58 58 36.3 58 45 36.3 49.8 55.8 ... #>  $ sex             : chr  \"female\" \"female\" \"male\" \"male\" ... #>  - attr(*, \"academic\")= chr [1:5] \"read\" \"write\" \"math\" \"science\" ... #>  - attr(*, \"psychology\")= chr [1:3] \"locus_of_control\" \"self_concept\" \"motivation\" (psych_variables <- attr(psychademic, \"psychology\")) #> [1] \"locus_of_control\" \"self_concept\"     \"motivation\" (academic_variables <- attr(psychademic, \"academic\")) #> [1] \"read\"    \"write\"   \"math\"    \"science\" \"sex\" ggpairs(psychademic, psych_variables, title = \"Within Psychological Variables\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggpairs(psychademic, academic_variables, title = \"Within Academic Variables\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggduo(   psychademic, psych_variables, academic_variables,   types = list(continuous = \"smooth_lm\"),   title = \"Between Academic and Psychological Variable Correlation\",   xlab = \"Psychological\",   ylab = \"Academic\" ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. lm_with_cor <- function(data, mapping, ..., method = \"pearson\") {   x <- eval_data_col(data, mapping$x)   y <- eval_data_col(data, mapping$y)   cor <- cor(x, y, method = method)   ggally_smooth_lm(data, mapping, ...) +     ggplot2::geom_label(       data = data.frame(         x = min(x, na.rm = TRUE),         y = max(y, na.rm = TRUE),         lab = round(cor, digits = 3)       ),       mapping = ggplot2::aes(x = x, y = y, label = lab),       hjust = 0, vjust = 1,       size = 5, fontface = \"bold\",       inherit.aes = FALSE # do not inherit anything from the ...     ) } ggduo(   psychademic, rev(psych_variables), academic_variables,   mapping = aes(color = sex),   types = list(continuous = wrap(lm_with_cor, alpha = 0.25)),   showStrips = FALSE,   title = \"Between Academic and Psychological Variable Correlation\",   xlab = \"Psychological\",   ylab = \"Academic\",   legend = c(5, 2) ) +   theme(legend.position = \"bottom\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/articles/ggduo.html","id":"multiple-time-series-analysis","dir":"Articles","previous_headings":"GGally::ggduo()","what":"Multiple Time Series Analysis","title":"ggduo(): Two-grouped plot matrix","text":"displaying multiple time series vertically time, + ggplot2::facet_grid(time ~ .), ggduo() can handle continuous discrete data. ggplot2 mix discrete continuous data axis.  Instead, may use ggts display data. ggts changes default behavior ggduo columnLabelsX equal NULL allows mixed variable types.    Produce meaningful labels, add legend, remove profit group strips.","code":"library(ggplot2)  data(pigs) pigs_dt <- pigs[-(2:3)] # remove year and quarter pigs_dt$profit_group <- as.numeric(pigs_dt$profit > mean(pigs_dt$profit)) ggplot(   tidyr::pivot_longer(pigs_dt, -time),   aes(x = time, y = value) ) +   geom_smooth() +   geom_point() +   facet_grid(name ~ ., scales = \"free_y\") #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' # make the profit group as a factor value profit_groups <- c(   \"1\" = \"high\",   \"0\" = \"low\" ) pigs_dt$profit_group <- factor(   profit_groups[as.character(pigs_dt$profit_group)],   levels = unname(profit_groups),   ordered = TRUE ) ggts(pigs_dt, \"time\", 2:7) #> `stat_bin()` using `bins = 30`. Pick better value with #> `binwidth`. # remove the binwidth warning pigs_types <- list(   comboHorizontal = wrap(ggally_facethist, binwidth = 1) ) ggts(pigs_dt, \"time\", 2:7, types = pigs_types) # add color and legend pigs_mapping <- aes(color = profit_group) ggts(pigs_dt, pigs_mapping, \"time\", 2:7, types = pigs_types, legend = c(6, 1)) pm <- ggts(   pigs_dt, pigs_mapping,   1, 2:7,   types = pigs_types,   legend = c(6, 1),   columnLabelsY = c(     \"number of\\nfirst birth sows\",     \"sell price over\\nfeed cost\",     \"sell count over\\nheard size\",     \"meat head count\",     \"breading\\nheard size\",     \"profit\\ngroup\"   ),   showStrips = FALSE ) +   labs(fill = \"profit group\") +   theme(     legend.position = \"bottom\",     strip.background = element_rect(       fill = \"transparent\", color = \"grey80\"     )   ) pm"},{"path":"https://ggobi.github.io/ggally/articles/ggduo.html","id":"regression-analysis","dir":"Articles","previous_headings":"GGally::ggduo()","what":"Regression Analysis","title":"ggduo(): Two-grouped plot matrix","text":"Since ggduo() may take custom functions just like ggpairs(), make custom function displays residuals red line 0 y variables receive simple linear regression plot. Note: marginal residuals calculated plotting y_range found display residuals scale.","code":"swiss <- datasets::swiss  # add a 'fake' column swiss$Residual <- seq_len(nrow(swiss))  # calculate all residuals prior to display residuals <- lapply(swiss[2:6], function(x) {   summary(lm(Fertility ~ x, data = swiss))$residuals }) # calculate a consistent y range for all residuals y_range <- range(unlist(residuals))  # custom function to display continuous data. If the y variable is \"Residual\", do custom work. lm_or_resid <- function(data, mapping, ..., line_color = \"red\", line_size = 1) {   if (!identical(     rlang::expr_text(mapping$y),     rlang::expr_text(ggplot2::aes(y = Residual)$y)   )) {     return(ggally_smooth_lm(data, mapping, ...))   }    # make residual data to display   resid_data <- data.frame(     x = rlang::eval_tidy(mapping$x, data = data),     y = rlang::eval_tidy(mapping$x, data = residuals)   )    ggplot(data = data, mapping = mapping) +     geom_hline(yintercept = 0, color = line_color, linewidth = line_size) +     ylim(y_range) +     geom_point(data = resid_data, mapping = aes(x = x, y = y), ...) }  # plot the data ggduo(   swiss,   2:6, c(1, 7),   types = list(continuous = lm_or_resid) ) # change line to be thicker and blue and the points to be slightly transparent ggduo(   swiss,   2:6, c(1, 7),   types = list(     continuous = wrap(lm_or_resid,       alpha = 0.7,       line_color = \"blue\",       line_size = 3     )   ) )"},{"path":"https://ggobi.github.io/ggally/articles/ggduo.html","id":"types-of-plots","dir":"Articles","previous_headings":"GGally::ggduo()","what":"Types of plots","title":"ggduo(): Two-grouped plot matrix","text":"can customize type plots display types argument. types list may contain variables ‘continuous’, ‘combo’, ‘discrete’, ‘na’. element list may function string. string supplied, must character string representing tail end ggally_NAME function. continuous: x y variables continuous comboHorizontal: x continuous y discrete comboVorizontal: x discrete y continuous discrete: x y variables discrete na: x data y data NA list current valid ggally_NAME functions visible vig_ggally(\"ggally_plots\").","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggmatrix.html","id":"ggallyggmatrix","dir":"Articles","previous_headings":"","what":"GGally::ggmatrix()","title":"ggmatrix(): Plot matrix","text":"ggmatrix() function managing multiple plots matrix-like layout. designed adapt number columns rows. allows customized plot matrices.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggmatrix.html","id":"generic-example","dir":"Articles","previous_headings":"GGally::ggmatrix()","what":"Generic Example","title":"ggmatrix(): Plot matrix","text":"examples use plots labeled 1 6 distinguish plots placed.","code":"plotList <- list() for (i in 1:6) {   plotList[[i]] <- ggally_text(paste(\"Plot #\", i, sep = \"\")) }  # bare minimum of plotList, nrow, and ncol pm <- ggmatrix(plotList, 2, 3) pm # provide more information pm <- ggmatrix(   plotList,   nrow = 2, ncol = 3,   xAxisLabels = c(\"A\", \"B\", \"C\"),   yAxisLabels = c(\"D\", \"E\"),   title = \"Matrix Title\" ) pm # display plots in column order pm <- ggmatrix(   plotList,   nrow = 2, ncol = 3,   xAxisLabels = c(\"A\", \"B\", \"C\"),   yAxisLabels = c(\"D\", \"E\"),   title = \"Matrix Title\",   byrow = FALSE ) pm"},{"path":"https://ggobi.github.io/ggally/articles/ggmatrix.html","id":"matrix-subsetting","dir":"Articles","previous_headings":"GGally::ggmatrix()","what":"Matrix Subsetting","title":"ggmatrix(): Plot matrix","text":"Individual plots may retrieved plot matrix can placed plot matrix.","code":"pm <- ggmatrix(   plotList,   nrow = 2, ncol = 3,   xAxisLabels = c(\"A\", \"B\", \"C\"),   yAxisLabels = c(\"D\", \"E\"),   title = \"Matrix Title\" ) pm p2 <- pm[1, 2] p3 <- pm[1, 3] p2 p3 pm[1, 2] <- p3 pm[1, 3] <- p2 pm"},{"path":"https://ggobi.github.io/ggally/articles/ggmatrix.html","id":"themes","dir":"Articles","previous_headings":"GGally::ggmatrix()","what":"Themes","title":"ggmatrix(): Plot matrix","text":"","code":"library(ggplot2) pm <- ggmatrix(   plotList,   nrow = 2, ncol = 3,   xAxisLabels = c(\"A\", \"B\", \"C\"),   yAxisLabels = c(\"D\", \"E\"),   title = \"Matrix Title\",   byrow = FALSE ) pm <- pm + theme_bw() pm"},{"path":"https://ggobi.github.io/ggally/articles/ggmatrix.html","id":"axis-control","dir":"Articles","previous_headings":"GGally::ggmatrix()","what":"Axis Control","title":"ggmatrix(): Plot matrix","text":"X Y axis booleans turn /individual plot’s axes bottom left sides plot matrix. save time, showAxisPlotLabels can set override showXAxisPlotLabels showYAxisPlotLabels.","code":"pm <- ggmatrix(   plotList,   nrow = 2, ncol = 3,   xAxisLabels = c(\"A\", \"B\", \"C\"),   yAxisLabels = c(\"D\", \"E\"),   title = \"No Left Plot Axis\",   showYAxisPlotLabels = FALSE ) pm pm <- ggmatrix(   plotList,   nrow = 2, ncol = 3,   xAxisLabels = c(\"A\", \"B\", \"C\"),   yAxisLabels = c(\"D\", \"E\"),   title = \"No Bottom Plot Axis\",   showXAxisPlotLabels = FALSE ) pm pm <- ggmatrix(   plotList,   nrow = 2, ncol = 3,   xAxisLabels = c(\"A\", \"B\", \"C\"),   yAxisLabels = c(\"D\", \"E\"),   title = \"No Plot Axes\",   showAxisPlotLabels = FALSE ) pm"},{"path":"https://ggobi.github.io/ggally/articles/ggmatrix.html","id":"strips-control","dir":"Articles","previous_headings":"GGally::ggmatrix()","what":"Strips Control","title":"ggmatrix(): Plot matrix","text":"default, plots top row right column display top-side right-side strips respectively (showStrips = NULL). strips need appear plot, showStrips may set TRUE. strips displayed, showStrips may set FALSE.","code":"data(tips) subPlot <- function(smoker_value, sex_value) {   ggplot(     data = tips[tips$smoker == smoker_value & tips$sex == sex_value, ],     aes(x = !!as.name(\"total_bill\"), y = !!as.name(\"tip\"))   ) +     geom_point() +     facet_grid(time ~ day) } plotList <- list(   subPlot(\"No\", \"Female\"),   subPlot(\"Yes\", \"Female\"),   subPlot(\"No\", \"Male\"),   subPlot(\"Yes\", \"Male\") )  pm <- ggmatrix(   plotList,   nrow = 2, ncol = 2,   yAxisLabels = c(\"Female\", \"Male\"),   xAxisLabels = c(\"Non Smoker\", \"Smoker\"),   title = \"Total Bill vs Tip\",   showStrips = NULL # default ) pm pm <- ggmatrix(   plotList,   nrow = 2, ncol = 2,   yAxisLabels = c(\"Female\", \"Male\"),   xAxisLabels = c(\"Non Smoker\", \"Smoker\"),   title = \"Total Bill vs Tip\",   showStrips = TRUE ) pm pm <- ggmatrix(   plotList,   nrow = 2, ncol = 2,   yAxisLabels = c(\"Female\", \"Male\"),   xAxisLabels = c(\"Non Smoker\", \"Smoker\"),   title = \"Total Bill vs Tip\",   showStrips = FALSE ) pm"},{"path":"https://ggobi.github.io/ggally/articles/ggnetworkmap.html","id":"ggallyggnetworkmap","dir":"Articles","previous_headings":"","what":"GGally::ggnetworkmap()","title":"ggnetworkmap(): Network + map plot","text":"ggnetworkmap() function plotting elegant maps using ggplot2. builds ggnet() allowing draw network map, particularly intended use ggmap.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggnetworkmap.html","id":"example-us-airports","dir":"Articles","previous_headings":"GGally::ggnetworkmap()","what":"Example: US airports","title":"ggnetworkmap(): Network + map plot","text":"example based tutorial Nathan Yau Flowing Data.","code":"suppressMessages(library(ggplot2)) suppressMessages(library(maps)) suppressMessages(library(network)) suppressMessages(library(sna))  airports <- read.csv(\"http://datasets.flowingdata.com/tuts/maparcs/airports.csv\", header = TRUE) rownames(airports) <- airports$iata  # select some random flights set.seed(123) flights <- data.frame(   origin = sample(airports[200:400, ]$iata, 200, replace = TRUE),   destination = sample(airports[200:400, ]$iata, 200, replace = TRUE) )  # convert to network flights <- network(flights, directed = TRUE)  # add geographic coordinates flights %v% \"lat\" <- airports[network.vertex.names(flights), \"lat\"] flights %v% \"lon\" <- airports[network.vertex.names(flights), \"long\"]  # drop isolated airports delete.vertices(flights, which(degree(flights) < 2))  # compute degree centrality flights %v% \"degree\" <- degree(flights, gmode = \"digraph\")  # add random groups flights %v% \"mygroup\" <- sample(letters[1:4], network.size(flights), replace = TRUE)  # create a map of the USA usa <- ggplot(map_data(\"usa\"), aes(x = long, y = lat)) +   geom_polygon(aes(group = group),     color = \"grey65\",     fill = \"#f9f9f9\", linewidth = 0.2   )  # trim flights delete.vertices(flights, which(flights %v% \"lon\" < min(usa$data$long))) delete.vertices(flights, which(flights %v% \"lon\" > max(usa$data$long))) delete.vertices(flights, which(flights %v% \"lat\" < min(usa$data$lat))) delete.vertices(flights, which(flights %v% \"lat\" > max(usa$data$lat)))  # overlay network data to map ggnetworkmap(usa, flights,   size = 4, great.circles = TRUE,   node.group = mygroup, segment.color = \"steelblue\",   ring.group = degree, weight = degree )"},{"path":"https://ggobi.github.io/ggally/articles/ggnetworkmap.html","id":"example-twitter-spambots","dir":"Articles","previous_headings":"GGally::ggnetworkmap()","what":"Example: Twitter spambots","title":"ggnetworkmap(): Network + map plot","text":"next example uses data Twitter spam community identified exploring trying clear-group tweets. coloring nodes based centrality, odd structure stood clearly.  network really concentrated U.S.? Probably . One odd things network, much higher proportion users gave locations geocoded, Twitter users generally. Let’s see network topology  Coloring nodes according degree centrality can highlight network structures.  Twitter attributes included vertex attributes.","code":"data(twitter_spambots) # create a world map world <- fortify(map(\"world\", plot = FALSE, fill = TRUE)) world <- ggplot(world, aes(x = long, y = lat)) +   geom_polygon(aes(group = group),     color = \"grey65\",     fill = \"#f9f9f9\", linewidth = 0.2   )  # view global structure ggnetworkmap(world, twitter_spambots) ggnetworkmap(net = twitter_spambots, arrow.size = 0.5) # compute indegree and outdegree centrality twitter_spambots %v% \"indegree\" <- degree(twitter_spambots, cmode = \"indegree\") twitter_spambots %v% \"outdegree\" <- degree(twitter_spambots, cmode = \"outdegree\")  ggnetworkmap(   net = twitter_spambots,   arrow.size = 0.5,   node.group = indegree,   ring.group = outdegree, size = 4 ) +   scale_fill_continuous(\"Indegree\", high = \"red\", low = \"yellow\") +   labs(color = \"Outdegree\") # show some vertex attributes associated with each account ggnetworkmap(   net = twitter_spambots,   arrow.size = 0.5,   node.group = followers,   ring.group = friends,   size = 4,   weight = indegree,   label.nodes = TRUE, vjust = -1.5 ) +   scale_fill_continuous(\"Followers\", high = \"red\", low = \"yellow\") +   labs(color = \"Friends\") +   scale_color_continuous(low = \"lightgreen\", high = \"darkgreen\")"},{"path":"https://ggobi.github.io/ggally/articles/ggnostic.html","id":"ggallyggnostic","dir":"Articles","previous_headings":"","what":"GGally::ggnostic()","title":"ggnostic(): Model diagnostics","text":"ggnostic() display wrapper ggduo() displays full model diagnostics given explanatory variable. default, ggduo() displays residuals, leave-one-model sigma value, leverage points, Cook’s distance explanatory variable. rows plot matrix can expanded include fitted values, standard error fitted values, standardized residuals, response variables. model linear model, stars added according stats::anova significance explanatory variable. diagnostic plots contain reference line(s) help determine model fitting properly Type key: \".resid\" solid line located expected value 0 dashed lines 95% confidence interval. (0±1.96*σ0 \\pm 1.96 * \\sigma) Plot function: ggally_nostic_resid(). See also stats::residuals Type key: \".std.resid\" residuals, except standardized residuals equal regular residuals divided sigma. dashed lines located 0±1.96*10 \\pm 1.96 * 1. Plot function: ggally_nostic_std_resid(). See also stats::rstandard Type key: \".sigma\" solid line located full model’s sigma value. Plot function: ggally_nostic_sigma(). See also stats::influence’s value sigma Type key: \".hat\" expected value diagonal hat matrix p/np / n. Points considered leverage points large 2*p/n2 * p / n, higher line drawn. Plot function: ggally_nostic_hat(). See also stats::influence’s value hat Type key: \".cooksd\" Points larger 4/n4 / n line considered highly influential points. Plot function: ggally_nostic_cooksd(). See also stats::cooks.distance() Type key: \".fitted\" reference lines default. Default plot function: ggally_points(). See also stats::predict Type key: \".se.fit\" reference lines default. Plot function: ggally_nostic_se_fit(). See also stats::fitted Type key: (response name data.frame) reference lines default. Default plot function: ggally_points().","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggnostic.html","id":"life-expectancy-model-fitting","dir":"Articles","previous_headings":"GGally::ggnostic()","what":"Life Expectancy Model Fitting","title":"ggnostic(): Model diagnostics","text":"Looking dataset datasets::state.x77, fit multiple regression model Life Expectancy. Next, look variables high (|value| > 0.8) correlation values general interaction behavior.  variables appear ok. Next, look model diagnostics.  residuals appear normally distributed. couple residual outliers, 2.5 outliers expected. 5 leverage points according diagonal hat matrix 2 leverage points according Cook’s distance. One much larger . Let’s remove largest data point first try define better model.  outrageous Cook’s distance values. model without Hawaii appears good fitting model. Since marginal improvement removing Hawaii, original model used explain life expectancy.","code":"# make a data.frame and fix column names state <- as.data.frame(state.x77) colnames(state)[c(4, 6)] <- c(\"Life.Exp\", \"HS.Grad\") str(state) #> 'data.frame':    50 obs. of  8 variables: #>  $ Population: num  3615 365 2212 2110 21198 ... #>  $ Income    : num  3624 6315 4530 3378 5114 ... #>  $ Illiteracy: num  2.1 1.5 1.8 1.9 1.1 0.7 1.1 0.9 1.3 2 ... #>  $ Life.Exp  : num  69 69.3 70.5 70.7 71.7 ... #>  $ Murder    : num  15.1 11.3 7.8 10.1 10.3 6.8 3.1 6.2 10.7 13.9 ... #>  $ HS.Grad   : num  41.3 66.7 58.1 39.9 62.6 63.9 56 54.6 52.6 40.6 ... #>  $ Frost     : num  20 152 15 65 20 166 139 103 11 60 ... #>  $ Area      : num  50708 566432 113417 51945 156361 ...  # fit full model model <- lm(Life.Exp ~ ., data = state) # reduce to \"best fit\" model with model <- step(model, trace = FALSE) summary(model) #>  #> Call: #> lm(formula = Life.Exp ~ Population + Murder + HS.Grad + Frost,  #>     data = state) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.47095 -0.53464 -0.03701  0.57621  1.50683  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  7.103e+01  9.529e-01  74.542  < 2e-16 *** #> Population   5.014e-05  2.512e-05   1.996  0.05201 .   #> Murder      -3.001e-01  3.661e-02  -8.199 1.77e-10 *** #> HS.Grad      4.658e-02  1.483e-02   3.142  0.00297 **  #> Frost       -5.943e-03  2.421e-03  -2.455  0.01802 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.7197 on 45 degrees of freedom #> Multiple R-squared:  0.736,  Adjusted R-squared:  0.7126  #> F-statistic: 31.37 on 4 and 45 DF,  p-value: 1.696e-12 # look at variables for high correlation (none) ggscatmat(state, columns = c(\"Population\", \"Murder\", \"HS.Grad\", \"Frost\")) # look at model diagnostics ggnostic(model) #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' # very high life expectancy state[11, ] #>        Population Income Illiteracy Life.Exp Murder HS.Grad Frost Area #> Hawaii        868   4963        1.9     73.6    6.2    61.9     0 6425 state_no_hawaii <- state[-11, ] model_no_hawaii <- lm(Life.Exp ~ Population + Murder + HS.Grad + Frost, data = state_no_hawaii) ggnostic(model_no_hawaii) #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' summary(model) #>  #> Call: #> lm(formula = Life.Exp ~ Population + Murder + HS.Grad + Frost,  #>     data = state) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.47095 -0.53464 -0.03701  0.57621  1.50683  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  7.103e+01  9.529e-01  74.542  < 2e-16 *** #> Population   5.014e-05  2.512e-05   1.996  0.05201 .   #> Murder      -3.001e-01  3.661e-02  -8.199 1.77e-10 *** #> HS.Grad      4.658e-02  1.483e-02   3.142  0.00297 **  #> Frost       -5.943e-03  2.421e-03  -2.455  0.01802 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.7197 on 45 degrees of freedom #> Multiple R-squared:  0.736,  Adjusted R-squared:  0.7126  #> F-statistic: 31.37 on 4 and 45 DF,  p-value: 1.696e-12 summary(model_no_hawaii) #>  #> Call: #> lm(formula = Life.Exp ~ Population + Murder + HS.Grad + Frost,  #>     data = state_no_hawaii) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.48967 -0.50158  0.01999  0.54355  1.11810  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  7.106e+01  8.998e-01  78.966  < 2e-16 *** #> Population   6.363e-05  2.431e-05   2.618   0.0121 *   #> Murder      -2.906e-01  3.477e-02  -8.357 1.24e-10 *** #> HS.Grad      3.728e-02  1.447e-02   2.576   0.0134 *   #> Frost       -3.099e-03  2.545e-03  -1.218   0.2297     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.6796 on 44 degrees of freedom #> Multiple R-squared:  0.7483, Adjusted R-squared:  0.7254  #> F-statistic: 32.71 on 4 and 44 DF,  p-value: 1.15e-12"},{"path":"https://ggobi.github.io/ggally/articles/ggnostic.html","id":"full-diagnostic-plot-matrix-example","dir":"Articles","previous_headings":"GGally::ggnostic()","what":"Full diagnostic plot matrix example","title":"ggnostic(): Model diagnostics","text":"following lines code display different model diagnostic plot matrices statistical model. first one default settings. second adds color according species. Finally, third displays possible columns uses ggally_smooth() display fitted points response variables.","code":"flea_model <- step(lm(head ~ ., data = flea), trace = FALSE) summary(flea_model) #>  #> Call: #> lm(formula = head ~ species + tars1 + tars2 + aede1, data = flea) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.0152 -1.2315 -0.0048  1.1490  3.6068  #>  #> Coefficients: #>                  Estimate Std. Error t value Pr(>|t|)     #> (Intercept)       0.63693    6.09162   0.105 0.917034     #> speciesHeikert.   1.13651    1.25452   0.906 0.368171     #> speciesHeptapot.  5.22207    0.92110   5.669 3.18e-07 *** #> tars1             0.06815    0.01989   3.426 0.001043 **  #> tars2             0.10160    0.03297   3.081 0.002974 **  #> aede1             0.17069    0.04275   3.993 0.000163 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.6 on 68 degrees of freedom #> Multiple R-squared:  0.685,  Adjusted R-squared:  0.6618  #> F-statistic: 29.57 on 5 and 68 DF,  p-value: 7.997e-16 # default output ggnostic(flea_model) #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' # color'ed output ggnostic(flea_model, mapping = ggplot2::aes(color = species)) #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' # full color'ed output ggnostic(   flea_model,   mapping = ggplot2::aes(color = species),   columnsY = c(\"head\", \".fitted\", \".se.fit\", \".resid\", \".std.resid\", \".hat\", \".sigma\", \".cooksd\"),   continuous = list(default = ggally_smooth, .fitted = ggally_smooth) ) #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess'"},{"path":"https://ggobi.github.io/ggally/articles/ggpairs.html","id":"ggallyggpairs","dir":"Articles","previous_headings":"","what":"GGally::ggpairs()","title":"ggpairs(): Pairwise plot matrix","text":"ggpairs() special form ggmatrix() produces pairwise comparison multivariate data. default, ggpairs() provides two different comparisons pair columns displays either density count respective variable along diagonal. different parameter settings, diagonal can replaced axis values variable labels. many hidden features within ggpairs(). Please take look examples get ggpairs().","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggpairs.html","id":"columns-and-mapping","dir":"Articles","previous_headings":"GGally::ggpairs()","what":"Columns and Mapping","title":"ggpairs(): Pairwise plot matrix","text":"columns displayed default columns provided data. subset columns, use columns parameter.   Aesthetics can applied every subplot mapping parameter.  Since plots default plots (helper functions GGally), aesthetic color altered appropriate. Looking example , ‘tip’ vs ‘total_bill’ (pm[3,1]) needs color aesthetic, ‘time’ vs ‘total_bill’ needs fill aesthetic. custom functions supplied, aesthetic alterations done.","code":"data(tips) pm <- ggpairs(tips) pm #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## too many plots for this example.  ## reduce the columns being displayed ## these two lines of code produce the same plot matrix pm <- ggpairs(tips, columns = c(1, 6, 2)) pm <- ggpairs(tips, columns = c(\"total_bill\", \"time\", \"tip\"), columnLabels = c(\"Total Bill\", \"Time of Day\", \"Tip\")) pm #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. library(ggplot2) pm <- ggpairs(tips, mapping = aes(color = sex), columns = c(\"total_bill\", \"time\", \"tip\")) pm #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/articles/ggpairs.html","id":"matrix-sections","dir":"Articles","previous_headings":"GGally::ggpairs()","what":"Matrix Sections","title":"ggpairs(): Pairwise plot matrix","text":"three major sections pairwise matrix: lower, upper, diag. lower upper may contain three plot types: continuous, combo, discrete. ‘diag’ contains either continuous discrete. continuous: X Y continuous variables combo: one X Y variable discrete continuous discrete: X Y discrete variables make adjustments section, list information may supplied. list can comprised following elements: continuous: character string representing tail end ggally_NAME function, custom function combo: character string representing tail end ggally_NAME function, custom function. (applicable diag list) discrete: character string representing tail end ggally_NAME function, custom function mapping: mapping provided, section’s mapping overwritten list current valid ggally_NAME functions visible vig_ggally(\"ggally_plots\").  section list may set character string \"blank\" NULL section skipped printed.","code":"library(ggplot2) pm <- ggpairs(   tips,   columns = c(\"total_bill\", \"time\", \"tip\"),   lower = list(     continuous = \"smooth\",     combo = \"facetdensity\",     mapping = aes(color = time)   ) ) pm pm <- ggpairs(   tips,   columns = c(\"total_bill\", \"time\", \"tip\"),   upper = \"blank\",   diag = NULL ) pm #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/articles/ggpairs.html","id":"custom-functions","dir":"Articles","previous_headings":"GGally::ggpairs()","what":"Custom Functions","title":"ggpairs(): Pairwise plot matrix","text":"ggally_NAME functions provide graphical options. Instead supplying character string continuous, combo, discrete element within upper, lower, diag, custom function may given. custom function follow api requirement happens within function, long ggplot2 object returned.","code":"custom_function <- function(data, mapping, ...) {   # produce ggplot2 object here } my_bin <- function(data, mapping, ..., low = \"#132B43\", high = \"#56B1F7\") {   ggplot(data = data, mapping = mapping) +     geom_bin2d(...) +     scale_fill_gradient(low = low, high = high) } pm <- ggpairs(   tips,   columns = c(\"total_bill\", \"time\", \"tip\"),   lower = list(     continuous = my_bin   ) ) pm #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/articles/ggpairs.html","id":"function-wrapping","dir":"Articles","previous_headings":"GGally::ggpairs()","what":"Function Wrapping","title":"ggpairs(): Pairwise plot matrix","text":"examples use default parameters subplots. One immediate parameters set binwidth. parameters needed lower, combination plots one variable continuous variable discrete. change default parameter binwidth setting, wrap() function. wrap() first parameter character string custom function. remaining parameters supplied wrap supplied function run time.  get finer control parameters, please look custom functions.","code":"pm <- ggpairs(   tips,   columns = c(\"total_bill\", \"time\", \"tip\"),   lower = list(     combo = wrap(\"facethist\", binwidth = 1),     continuous = wrap(my_bin, binwidth = c(5, 0.5), high = \"red\")   ) ) pm"},{"path":"https://ggobi.github.io/ggally/articles/ggpairs.html","id":"plot-matrix-subsetting","dir":"Articles","previous_headings":"GGally::ggpairs()","what":"Plot Matrix Subsetting","title":"ggpairs(): Pairwise plot matrix","text":"Please look vignette ggmatrix plot matrix manipulations. Small ggpairs() example:","code":"pm <- ggpairs(tips, columns = c(\"total_bill\", \"time\", \"tip\")) # retrieve the third row, first column plot p <- pm[3, 1] p <- p + aes(color = time) p pm[3, 1] <- p pm #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/articles/ggpairs.html","id":"themes","dir":"Articles","previous_headings":"GGally::ggpairs()","what":"Themes","title":"ggpairs(): Pairwise plot matrix","text":"Please look vignette ggmatrix plot matrix manipulations. Small ggpairs() example:","code":"pmBW <- pm + theme_bw() pmBW #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/articles/ggpairs.html","id":"references","dir":"Articles","previous_headings":"GGally::ggpairs()","what":"References","title":"ggpairs(): Pairwise plot matrix","text":"John W Emerson, Walton Green, Barret Schloerke, Jason Crowley, Dianne Cook, Heike Hofmann, Hadley Wickham. Generalized Pairs Plot. Journal Computational Graphical Statistics, vol. 22, . 1, pp. 79-91, 2012.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggscatmat.html","id":"ggallyggscatmat","dir":"Articles","previous_headings":"","what":"GGally::ggscatmat()","title":"ggscatmat(): Numeric pairwise plot matrix","text":"primary function ggscatmat(). similar ggpairs() works purely numeric multivariate data. faster ggpairs(), less choices need made. creates matrix scatterplots lower diagonal, densities diagonal correlations written upper diagonal. Syntax enter dataset, columns want plot, color column, alpha level.  plot, can see three different species vary little three variables. Heptapot (blue) smaller values variable tars1 two. correlation three variables similar species.","code":"data(flea) ggscatmat(flea, columns = 2:4, color = \"species\", alpha = 0.8)"},{"path":"https://ggobi.github.io/ggally/articles/ggscatmat.html","id":"references","dir":"Articles","previous_headings":"GGally::ggscatmat()","what":"References","title":"ggscatmat(): Numeric pairwise plot matrix","text":"John W Emerson, Walton Green, Barret Schloerke, Jason Crowley, Dianne Cook, Heike Hofmann, Hadley Wickham. Generalized Pairs Plot. Journal Computational Graphical Statistics, vol. 22, . 1, pp. 79-91, 2012.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggsurv.html","id":"ggallyggsurv","dir":"Articles","previous_headings":"","what":"GGally::ggsurv()","title":"ggsurv(): Survival curves","text":"function produces Kaplan-Meier plots using ggplot2. first argument, ggsurv() needs survival::survfit() object. Default settings differ single stratum multiple strata objects.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggsurv.html","id":"single-stratum","dir":"Articles","previous_headings":"GGally::ggsurv()","what":"Single Stratum","title":"ggsurv(): Survival curves","text":"","code":"require(ggplot2) require(survival) #> Loading required package: survival require(scales) #> Loading required package: scales  data(lung, package = \"survival\") #> Warning in data(lung, package = \"survival\"): data set 'lung' not found sf.lung <- survival::survfit(Surv(time, status) ~ 1, data = lung) ggsurv(sf.lung)"},{"path":"https://ggobi.github.io/ggally/articles/ggsurv.html","id":"multiple-stratum","dir":"Articles","previous_headings":"GGally::ggsurv()","what":"Multiple Stratum","title":"ggsurv(): Survival curves","text":"legend color positions matches survival order stratum, stratums end lower value time position lower legend.","code":"sf.sex <- survival::survfit(Surv(time, status) ~ sex, data = lung) pl.sex <- ggsurv(sf.sex) pl.sex"},{"path":"https://ggobi.github.io/ggally/articles/ggsurv.html","id":"alterations","dir":"Articles","previous_headings":"GGally::ggsurv()","what":"Alterations","title":"ggsurv(): Survival curves","text":"Since ggplot2 object returned, plot objects may altered original creation.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggsurv.html","id":"adjusting-the-legend","dir":"Articles","previous_headings":"GGally::ggsurv() > Alterations","what":"Adjusting the legend","title":"ggsurv(): Survival curves","text":"","code":"pl.sex +   ggplot2::guides(linetype = \"none\") +   ggplot2::scale_colour_discrete(     name   = \"Sex\",     breaks = c(1, 2),     labels = c(\"Male\", \"Female\")   ) #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing #> scale."},{"path":"https://ggobi.github.io/ggally/articles/ggsurv.html","id":"adjust-the-limits","dir":"Articles","previous_headings":"GGally::ggsurv() > Alterations","what":"Adjust the limits","title":"ggsurv(): Survival curves","text":"","code":"data(kidney, package = \"survival\") #> Warning in data(kidney, package = \"survival\"): data set 'kidney' not #> found sf.kid <- survival::survfit(Surv(time, status) ~ disease, data = kidney) pl.kid <- ggsurv(sf.kid, plot.cens = FALSE) pl.kid # Zoom in to first 80 days pl.kid + ggplot2::coord_cartesian(xlim = c(0, 80), ylim = c(0.45, 1))"},{"path":"https://ggobi.github.io/ggally/articles/ggsurv.html","id":"add-text-and-remove-the-legend","dir":"Articles","previous_headings":"GGally::ggsurv() > Alterations","what":"Add text and remove the legend","title":"ggsurv(): Survival curves","text":"","code":"pl.kid +   ggplot2::annotate(     \"text\",     label = c(\"PKD\", \"Other\", \"GN\", \"AN\"),     x = c(90, 125, 5, 60),     y = c(0.8, 0.65, 0.55, 0.30),     size = 5,     colour = scales::pal_hue(       h         = c(0, 360) + 15,       c         = 100,       l         = 65,       h.start   = 0,       direction = 1     )(4)   ) +   ggplot2::guides(color = \"none\", linetype = \"none\")"},{"path":"https://ggobi.github.io/ggally/articles/ggtable.html","id":"ggallyggtable","dir":"Articles","previous_headings":"","what":"GGally::ggtable()","title":"ggtable(): Cross-tabulated tables","text":"purpose function quickly plot cross-tabulated tables discrete variables.","code":""},{"path":"https://ggobi.github.io/ggally/articles/ggtable.html","id":"basic-example","dir":"Articles","previous_headings":"GGally::ggtable()","what":"Basic example","title":"ggtable(): Cross-tabulated tables","text":"display tables number observations, simply indicate variables present columns rows.","code":"data(tips) ggtable(tips, \"smoker\", c(\"day\", \"time\", \"sex\")) ggtable(tips, c(\"smoker\", \"time\"), c(\"day\", \"time\", \"sex\"))"},{"path":"https://ggobi.github.io/ggally/articles/ggtable.html","id":"proportions","dir":"Articles","previous_headings":"GGally::ggtable()","what":"Proportions","title":"ggtable(): Cross-tabulated tables","text":"cells argument allows control display. proportions total, row proportions columns proportions, simply use \"prop\", \"row.prop\" \"col.prop\".","code":"ggtable(tips, \"smoker\", c(\"day\", \"time\", \"sex\"), cells = \"prop\") + ggtitle(\"Proportions of total\") ggtable(tips, \"smoker\", c(\"day\", \"time\", \"sex\"), cells = \"row.prop\") + ggtitle(\"Row proportions\") ggtable(tips, \"smoker\", c(\"day\", \"time\", \"sex\"), cells = \"prop\") + ggtitle(\"Column proportions\")"},{"path":"https://ggobi.github.io/ggally/articles/ggtable.html","id":"filling-cells-with-residuals","dir":"Articles","previous_headings":"GGally::ggtable()","what":"Filling cells with residuals","title":"ggtable(): Cross-tabulated tables","text":"Chi-square standardized residuals indicates cells - underrepresented compared expected independence hypothesis. standardized residual less -2, cell’s observed frequency less expected frequency. Greater 2 observed frequency greater expected frequency. Values lower -3 higher 3 indicates strong effect. fill cells standardized residuals, simply indicate fill = \"std.resid\".","code":"ggtable(tips, \"smoker\", c(\"day\", \"time\", \"sex\"), fill = \"std.resid\")"},{"path":"https://ggobi.github.io/ggally/articles/ggtable.html","id":"using-weights","dir":"Articles","previous_headings":"GGally::ggtable()","what":"Using weights","title":"ggtable(): Cross-tabulated tables","text":"can easily indicate weights take account weight aesthetic.","code":"d <- as.data.frame(Titanic) ggtable(   d,   \"Survived\",   c(\"Age\", \"Class\", \"Sex\"),   mapping = aes(weight = Freq),   cells = \"row.prop\",   fill = \"std.resid\" )"},{"path":"https://ggobi.github.io/ggally/articles/ggtable.html","id":"missing-with-continuous-variables","dir":"Articles","previous_headings":"GGally::ggtable()","what":"Missing with continuous variables","title":"ggtable(): Cross-tabulated tables","text":"Although ggtable() mainly intended used discrete variables, can also indicate continuous variables. case, summary statistics displayed.  need customization output, please refer ggduo().","code":"ggtable(tips, c(\"smoker\", \"total_bill\"), c(\"day\", \"time\", \"sex\", \"tip\"))"},{"path":"https://ggobi.github.io/ggally/articles/glyph.html","id":"ggallyglyphs","dir":"Articles","previous_headings":"","what":"GGally::glyphs()","title":"glyphs(): Glyph plot","text":"function rearranges data able construct glyph plot  shows glyphplot monthly surface temperature 6 years Central America. can see differences one location another, large areas temperature doesn’t change much. large seasonal trends top left land. Rescaling different ways puts emphasis different components, see examples referenced paper. ggplot2 can make map geographic area underlying glyphs.","code":"library(ggplot2) data(nasa) temp.gly <- glyphs(nasa, \"long\", \"day\", \"lat\", \"surftemp\", height = 2.5) #> Using width 2.38 ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +   add_ref_lines(temp.gly, color = \"grey90\") +   add_ref_boxes(temp.gly, color = \"grey90\") +   geom_path() +   theme_bw() +   labs(x = \"\", y = \"\")"},{"path":"https://ggobi.github.io/ggally/articles/glyph.html","id":"references","dir":"Articles","previous_headings":"GGally::glyphs()","what":"References","title":"glyphs(): Glyph plot","text":"Wickham, H., Hofmann, H., Wickham, C. Cook, D. (2012) Glyph-maps Visually Exploring Temporal Patterns Climate Data Models, Environmetrics, 23(5):151-182.","code":""},{"path":"https://ggobi.github.io/ggally/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Barret Schloerke. Author, maintainer. Di Cook. Author, thesis advisor. Joseph Larmarange. Author. Francois Briatte. Author. Moritz Marbach. Author. Edwin Thoen. Author. Amos Elberg. Author. Ott Toomet. Contributor. Jason Crowley. Author. Heike Hofmann. Thesis advisor. Hadley Wickham. Thesis advisor.","code":""},{"path":"https://ggobi.github.io/ggally/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schloerke B, Cook D, Larmarange J, Briatte F, Marbach M, Thoen E, Elberg , Crowley J (2025). GGally: Extension 'ggplot2'. R package version 2.3.0, https://ggobi.github.io/ggally/.","code":"@Manual{,   title = {GGally: Extension to 'ggplot2'},   author = {Barret Schloerke and Di Cook and Joseph Larmarange and Francois Briatte and Moritz Marbach and Edwin Thoen and Amos Elberg and Jason Crowley},   year = {2025},   note = {R package version 2.3.0},   url = {https://ggobi.github.io/ggally/}, }"},{"path":"https://ggobi.github.io/ggally/index.html","id":"ggally-extension-to-ggplot2","dir":"","previous_headings":"","what":"Extension to ggplot2","title":"Extension to ggplot2","text":"ggplot2 plotting system R based grammar graphics. GGally extends ggplot2 adding several functions reduce complexity combining geoms transformed data. functions include pairwise plot matrix, scatterplot plot matrix, parallel coordinates plot, survival plot, several functions plot networks.","code":""},{"path":"https://ggobi.github.io/ggally/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extension to ggplot2","text":"install package GitHub CRAN, following R console:","code":"# Github pak::pak(\"ggobi/ggally\") # CRAN install.packages(\"GGally\")"},{"path":"https://ggobi.github.io/ggally/reference/GGally-package.html","id":null,"dir":"Reference","previous_headings":"","what":"GGally: Extension to 'ggplot2' — GGally-package","title":"GGally: Extension to 'ggplot2' — GGally-package","text":"R package 'ggplot2' plotting system based grammar graphics. 'GGally' extends 'ggplot2' adding several functions reduce complexity combining geometric objects transformed data. functions include pairwise plot matrix, two group pairwise plot matrix, parallel coordinates plot, survival plot, several functions plot networks.","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/GGally-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"GGally: Extension to 'ggplot2' — GGally-package","text":"Maintainer: Barret Schloerke schloerke@gmail.com (ORCID) Authors: Di Cook dicook@monash.edu (ORCID) [thesis advisor] Joseph Larmarange joseph@larmarange.net (ORCID) Francois Briatte f.briatte@gmail.com Moritz Marbach mmarbach@mail.uni-mannheim.de Edwin Thoen edwinthoen@gmail.com Amos Elberg amos.elberg@gmail.com Jason Crowley crowley.jason.s@gmail.com contributors: Ott Toomet otoomet@gmail.com [contributor] Heike Hofmann hhofmann4@unl.edu (ORCID) [thesis advisor] Hadley Wickham h.wickham@gmail.com (ORCID) [thesis advisor]","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_and_overwrite_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new aes — add_and_overwrite_aes","title":"Add new aes — add_and_overwrite_aes","text":"Add new aesthetics previous aes.","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_and_overwrite_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new aes — add_and_overwrite_aes","text":"","code":"add_and_overwrite_aes(current, new)"},{"path":"https://ggobi.github.io/ggally/reference/add_and_overwrite_aes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new aes — add_and_overwrite_aes","text":"aes_ output","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_and_overwrite_aes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add new aes — add_and_overwrite_aes","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_and_overwrite_aes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add new aes — add_and_overwrite_aes","text":"","code":"data(diamonds, package = \"ggplot2\") diamonds.samp <- diamonds[sample(1:dim(diamonds)[1], 1000), ] pm <- ggpairs(diamonds.samp,   columns = 5:7,   mapping = ggplot2::aes(color = color),   upper = list(continuous = \"cor\", mapping = ggplot2::aes(color = clarity)),   lower = list(continuous = \"cor\", mapping = ggplot2::aes(color = cut)),   title = \"Diamonds Sample\" ) str(pm) #>  #> Custom str.ggmatrix output:  #> To view original object use 'str(pm, raw = TRUE)' #>  #> List of 20 #>  $ data               :'data.frame':\t1000 obs. of  10 variables: #>   ..$ carat  : num [1:1000] 1 0.31 1.03 0.25 1.01 1.12 1.11 0.92 0.55 1.06 ... #>   ..$ cut    : Ord.factor w/ 5 levels \"Fair\"<\"Good\"<..: 5 5 4 2 3 5 4 4 3 5 ... #>   ..$ color  : Ord.factor w/ 7 levels \"D\"<\"E\"<\"F\"<\"G\"<..: 2 1 2 5 3 4 4 5 1 3 ... #>   ..$ clarity: Ord.factor w/ 8 levels \"I1\"<\"SI2\"<\"SI1\"<..: 2 4 5 7 3 6 4 3 3 2 ... #>   ..$ depth  : num [1:1000] 61.9 61.2 59.6 60.6 63.1 61.9 61 62 63.1 61.8 ... #>   ..$ table  : num [1:1000] 56 55 59 64 59 57 59 60 56 56 ... #>   ..$ price  : int [1:1000] 4760 734 7817 401 5010 9214 5346 3555 1593 5354 ... #>   ..$ x      : num [1:1000] 6.43 4.37 6.59 4.05 6.3 6.62 6.7 6.27 5.19 6.56 ... #>   ..$ y      : num [1:1000] 6.4 4.39 6.57 4.07 6.37 6.66 6.67 6.21 5.22 6.51 ... #>   ..$ z      : num [1:1000] 3.97 2.68 3.92 2.46 4 4.11 4.08 3.87 3.28 4.04 ... #>  $ plots              :List of 9 #>   ..$ : chr \"PM; aes: c(x = ~depth, colour = ~color); fn: {wrap: 'ggally_densityDiag'}; gg: FALSE\" #>   ..$ : chr \"PM; aes: c(x = ~table, y = ~depth, colour = ~clarity); fn: {wrap: 'ggally_cor'}; gg: FALSE\" #>   ..$ : chr \"PM; aes: c(x = ~price, y = ~depth, colour = ~clarity); fn: {wrap: 'ggally_cor'}; gg: FALSE\" #>   ..$ : chr \"PM; aes: c(x = ~depth, y = ~table, colour = ~cut); fn: {wrap: 'ggally_cor'}; gg: FALSE\" #>   ..$ : chr \"PM; aes: c(x = ~table, colour = ~color); fn: {wrap: 'ggally_densityDiag'}; gg: FALSE\" #>   ..$ : chr \"PM; aes: c(x = ~price, y = ~table, colour = ~clarity); fn: {wrap: 'ggally_cor'}; gg: FALSE\" #>   ..$ : chr \"PM; aes: c(x = ~depth, y = ~price, colour = ~cut); fn: {wrap: 'ggally_cor'}; gg: FALSE\" #>   ..$ : chr \"PM; aes: c(x = ~table, y = ~price, colour = ~cut); fn: {wrap: 'ggally_cor'}; gg: FALSE\" #>   ..$ : chr \"PM; aes: c(x = ~price, colour = ~color); fn: {wrap: 'ggally_densityDiag'}; gg: FALSE\" #>  $ title              : chr \"Diamonds Sample\" #>  $ xlab               : NULL #>  $ ylab               : NULL #>  $ showStrips         : NULL #>  $ xAxisLabels        : chr [1:3] \"depth\" \"table\" \"price\" #>  $ yAxisLabels        : chr [1:3] \"depth\" \"table\" \"price\" #>  $ showXAxisPlotLabels: logi TRUE #>  $ showYAxisPlotLabels: logi TRUE #>  $ labeller           : chr \"label_value\" #>  $ switch             : NULL #>  $ xProportions       : NULL #>  $ yProportions       : NULL #>  $ progress           : logi FALSE #>  $ legend             : NULL #>  $ gg                 : NULL #>  $ nrow               : int 3 #>  $ ncol               : int 3 #>  $ byrow              : logi TRUE"},{"path":"https://ggobi.github.io/ggally/reference/add_ref_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add reference boxes around each cell of the glyphmap. — add_ref_boxes","title":"Add reference boxes around each cell of the glyphmap. — add_ref_boxes","text":"Add reference boxes around cell glyphmap.","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_ref_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add reference boxes around each cell of the glyphmap. — add_ref_boxes","text":"","code":"add_ref_boxes(   data,   var_fill = NULL,   color = \"white\",   size = 0.5,   fill = NA,   ... )"},{"path":"https://ggobi.github.io/ggally/reference/add_ref_boxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add reference boxes around each cell of the glyphmap. — add_ref_boxes","text":"data glyphmap structure. var_fill Variable name use set fill color color Set color draw , default \"white\" size Set line size, default 0.5 fill fill value used var_fill NULL ... arguments passed onto ggplot2::geom_rect()","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_ref_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Add reference lines for each cell of the glyphmap. — add_ref_lines","title":"Add reference lines for each cell of the glyphmap. — add_ref_lines","text":"Add reference lines cell glyphmap.","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_ref_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add reference lines for each cell of the glyphmap. — add_ref_lines","text":"","code":"add_ref_lines(data, color = \"white\", size = 1.5, ...)"},{"path":"https://ggobi.github.io/ggally/reference/add_ref_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add reference lines for each cell of the glyphmap. — add_ref_lines","text":"data glyphmap structure. color Set color draw , default \"white\" size Set line size, default 1.5 ... arguments passed onto ggplot2::geom_line()","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_to_ggmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify a ggmatrix object by adding an ggplot2 object to all plots — add_to_ggmatrix","title":"Modify a ggmatrix object by adding an ggplot2 object to all plots — add_to_ggmatrix","text":"operator allows add ggplot2 objects ggmatrix object.","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_to_ggmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify a ggmatrix object by adding an ggplot2 object to all plots — add_to_ggmatrix","text":"","code":"add_to_ggmatrix(e1, e2, location = NULL, rows = NULL, cols = NULL)"},{"path":"https://ggobi.github.io/ggally/reference/add_to_ggmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify a ggmatrix object by adding an ggplot2 object to all plots — add_to_ggmatrix","text":"e1 object class ggnostic ggplot e2 component add e1 location \"\", TRUE row col combinations \"none\" row column combinations \"upper\" Locations column value higher row value \"lower\" Locations row value higher column value \"diag\" Locations column value equal row value matrix data.frame matrix values converted data.frames. data.frame exact column names c(\"row\", \"col\") data.frame number rows columns matching plot matrix object provided.  cell tested \"truthy\" value determine location kept. rows numeric vector rows used. used  cols location NULL cols numeric vector cols used. used rows location NULL","code":""},{"path":"https://ggobi.github.io/ggally/reference/add_to_ggmatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify a ggmatrix object by adding an ggplot2 object to all plots — add_to_ggmatrix","text":"first object object class ggmatrix, can add following types objects, return modified ggplot2 object. theme: update plot theme scale: replace current scale coord: override current coordinate system + operator completely replaces elements elements e2. add_to_ggmatrix gives control modify subplots.  function may replaced /removed future.","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/add_to_ggmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify a ggmatrix object by adding an ggplot2 object to all plots — add_to_ggmatrix","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive data(tips)  pm <- ggpairs(tips[, 2:4], ggplot2::aes(color = sex)) ## change to black and white theme pm + ggplot2::theme_bw() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  ## change to linedraw theme p_(pm + ggplot2::theme_linedraw()) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  ## change to custom theme p_(pm + ggplot2::theme(panel.background = ggplot2::element_rect(fill = \"lightblue\"))) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  ## add a list of information extra <- list(ggplot2::theme_bw(), ggplot2::labs(caption = \"My caption!\")) p_(pm + extra) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   ## modify scale p_(pm + scale_fill_brewer(type = \"qual\")) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  ## only first row p_(add_to_ggmatrix(pm, scale_fill_brewer(type = \"qual\"), rows = 1:2)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  ## only second col p_(add_to_ggmatrix(pm, scale_fill_brewer(type = \"qual\"), cols = 2:3)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  ## only to upper triangle of plot matrix p_(add_to_ggmatrix(   pm,   scale_fill_brewer(type = \"qual\"),   location = \"upper\" )) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/reference/australia_PISA2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Programme for International Student Assessment (PISA) 2012 Data for Australia — australia_PISA2012","title":"Programme for International Student Assessment (PISA) 2012 Data for Australia — australia_PISA2012","text":"PISA","code":""},{"path":"https://ggobi.github.io/ggally/reference/australia_PISA2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Programme for International Student Assessment (PISA) 2012 Data for Australia — australia_PISA2012","text":"","code":"data(australia_PISA2012)"},{"path":"https://ggobi.github.io/ggally/reference/australia_PISA2012.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Programme for International Student Assessment (PISA) 2012 Data for Australia — australia_PISA2012","text":"data frame 8247 rows 32 variables","code":""},{"path":"https://ggobi.github.io/ggally/reference/australia_PISA2012.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Programme for International Student Assessment (PISA) 2012 Data for Australia — australia_PISA2012","text":"https://www.oecd.org/en/data/datasets/pisa-2012-cba-database.html","code":""},{"path":"https://ggobi.github.io/ggally/reference/australia_PISA2012.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Programme for International Student Assessment (PISA) 2012 Data for Australia — australia_PISA2012","text":"Programme International Student Assessment (PISA) triennial international survey aims evaluate education systems worldwide testing skills knowledge 15-year-old students. date, students representing 70 economies participated assessment. 65 economies took part 2012 study, data set contains information country Australia. gender     : Factor w/ 2 levels \"female\",\"male\": 1 1 2 2 2 1 1 1 2 1 ... age        : Factor w/ 4 levels \"4\",\"5\",\"6\",\"7\": 2 2 2 4 3 1 2 2 2 2 ... homework   : num  5 5 9 3 2 3 4 3 5 1 ... desk       : num  1 0 1 1 1 1 1 1 1 1 ... room       : num  1 1 1 1 1 1 1 1 1 1 ... study      : num  1 1 1 1 1 1 1 1 1 1 ... computer   : num  1 1 1 1 1 1 1 1 1 1 ... software   : num  1 1 1 1 1 1 1 1 1 1 ... internet   : num  1 1 1 1 1 1 1 1 1 1 ... literature : num  0 0 1 0 1 1 1 1 1 0 ... poetry     : num  0 0 1 0 1 1 0 1 1 1 ... art        : num  1 0 1 0 1 1 0 1 1 1 ... textbook   : num  1 1 1 1 1 0 1 1 1 1 ... dictionary : num  1 1 1 1 1 1 1 1 1 1 ... dishwasher : num  1 1 1 1 0 1 1 1 1 1 ... PV1MATH    : num  562 565 602 520 613 ... PV2MATH    : num  569 557 594 507 567 ... PV3MATH    : num  555 553 552 501 585 ... PV4MATH    : num  579 538 526 521 596 ... PV5MATH    : num  548 573 619 547 603 ... PV1READ    : num  582 617 650 554 605 ... PV2READ    : num  571 572 608 560 557 ... PV3READ    : num  602 560 594 517 627 ... PV4READ    : num  572 564 575 564 597 ... PV5READ    : num  585 565 620 572 598 ... PV1SCIE    : num  583 627 668 574 639 ... PV2SCIE    : num  579 600 665 612 635 ... PV3SCIE    : num  593 574 620 571 666 ... PV4SCIE    : num  567 582 592 598 700 ... PV5SCIE    : num  587 625 656 662 670 ... SENWGT_STU : num  0.133 0.133 0.141 0.141 0.141 ... possessions: num  10 8 12 9 11 11 10 12 12 11 ...","code":""},{"path":"https://ggobi.github.io/ggally/reference/baseball.html","id":null,"dir":"Reference","previous_headings":"","what":"Yearly batting records for all major league baseball players — baseball","title":"Yearly batting records for all major league baseball players — baseball","text":"data frame contains batting statistics subset players collected http://www.baseball-databank.org/. total 21,699 records, covering 1,228 players 1871 2007. players 15 seasons play included.","code":""},{"path":"https://ggobi.github.io/ggally/reference/baseball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yearly batting records for all major league baseball players — baseball","text":"","code":"baseball"},{"path":"https://ggobi.github.io/ggally/reference/baseball.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Yearly batting records for all major league baseball players — baseball","text":"21699 x 22 data frame","code":""},{"path":"https://ggobi.github.io/ggally/reference/baseball.html","id":"variables","dir":"Reference","previous_headings":"","what":"Variables","title":"Yearly batting records for all major league baseball players — baseball","text":"Variables: id, unique player id year, year data stint team, team played lg, league g, number games ab, number times bat r, number runs h, hits, times reached base batted, fair ball without error defense X2b, hits batter reached second base safely X3b, hits batter reached third base safely hr, number home runs rbi, runs batted sb, stolen bases cs, caught stealing bb, base balls (walk) , strike outs ibb, intentional base balls hbp, hits pitch sh, sacrifice hits sf, sacrifice flies gidp, ground double play","code":""},{"path":"https://ggobi.github.io/ggally/reference/baseball.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Yearly batting records for all major league baseball players — baseball","text":"http://www.baseball-databank.org/","code":""},{"path":"https://ggobi.github.io/ggally/reference/brew_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"RColorBrewer Set1 colors — brew_colors","title":"RColorBrewer Set1 colors — brew_colors","text":"RColorBrewer Set1 colors","code":""},{"path":"https://ggobi.github.io/ggally/reference/brew_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RColorBrewer Set1 colors — brew_colors","text":"","code":"brew_colors(col)"},{"path":"https://ggobi.github.io/ggally/reference/brew_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RColorBrewer Set1 colors — brew_colors","text":"col standard color name used retrieve hex color value","code":""},{"path":"https://ggobi.github.io/ggally/reference/broomify.html","id":null,"dir":"Reference","previous_headings":"","what":"Broomify a model — broomify","title":"Broomify a model — broomify","text":"broom::augment model add broom::glance broom::tidy output attributes. X Y variables also added.","code":""},{"path":"https://ggobi.github.io/ggally/reference/broomify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Broomify a model — broomify","text":"","code":"broomify(model, lmStars = TRUE)"},{"path":"https://ggobi.github.io/ggally/reference/broomify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Broomify a model — broomify","text":"model model sent broom::augment(), broom::glance(), broom::tidy() lmStars boolean determines stars added labels","code":""},{"path":"https://ggobi.github.io/ggally/reference/broomify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Broomify a model — broomify","text":"broom::augmented data frame broom::glance data.frame broom::tidy data.frame 'broom_glance' 'broom_tidy' attributes respectively.  var_x var_y variables also added attributes","code":""},{"path":"https://ggobi.github.io/ggally/reference/broomify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Broomify a model — broomify","text":"","code":"data(mtcars) model <- stats::lm(mpg ~ wt + qsec + am, data = mtcars) broomified_model <- broomify(model) str(broomified_model) #> tibble[,12] (S3: tbl_df/tbl/data.frame/broomify) #>  $ .rownames : chr [1:32] \"Mazda RX4\" \"Mazda RX4 Wag\" \"Datsun 710\" \"Hornet 4 Drive\" ... #>  $ mpg       : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>  $ wt        : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>  $ qsec      : num [1:32] 16.5 17 18.6 19.4 17 ... #>  $ am        : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>  $ .fitted   : num [1:32] 22.5 22.2 26.3 20.9 17 ... #>  $ .se.fit   : Named num [1:32] 0.72 0.744 0.76 0.685 0.749 ... #>   ..- attr(*, \"names\")= chr [1:32] \"Mazda RX4\" \"Mazda RX4 Wag\" \"Datsun 710\" \"Hornet 4 Drive\" ... #>  $ .resid    : num [1:32] -1.47 -1.158 -3.481 0.543 1.69 ... #>  $ .hat      : num [1:32] 0.0857 0.0914 0.0955 0.0776 0.0927 ... #>  $ .sigma    : num [1:32] 2.49 2.49 2.4 2.5 2.48 ... #>  $ .cooksd   : num [1:32] 0.00916 0.00614 0.05847 0.00111 0.0133 ... #>  $ .std.resid: num [1:32] -0.625 -0.494 -1.489 0.23 0.722 ... #>  - attr(*, \"terms\")=Classes 'terms', 'formula'  language mpg ~ wt + qsec + am #>   .. ..- attr(*, \"variables\")= language list(mpg, wt, qsec, am) #>   .. ..- attr(*, \"factors\")= int [1:4, 1:3] 0 1 0 0 0 0 1 0 0 0 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. ..$ : chr [1:4] \"mpg\" \"wt\" \"qsec\" \"am\" #>   .. .. .. ..$ : chr [1:3] \"wt\" \"qsec\" \"am\" #>   .. ..- attr(*, \"term.labels\")= chr [1:3] \"wt\" \"qsec\" \"am\" #>   .. ..- attr(*, \"order\")= int [1:3] 1 1 1 #>   .. ..- attr(*, \"intercept\")= int 1 #>   .. ..- attr(*, \"response\")= int 1 #>   .. ..- attr(*, \".Environment\")=<environment: 0x56014ac404e0>  #>   .. ..- attr(*, \"predvars\")= language list(mpg, wt, qsec, am) #>   .. ..- attr(*, \"dataClasses\")= Named chr [1:4] \"numeric\" \"numeric\" \"numeric\" \"numeric\" #>   .. .. ..- attr(*, \"names\")= chr [1:4] \"mpg\" \"wt\" \"qsec\" \"am\" #>  - attr(*, \"broom_glance\")= tibble [1 × 12] (S3: tbl_df/tbl/data.frame) #>   ..$ r.squared    : num 0.85 #>   ..$ adj.r.squared: num 0.834 #>   ..$ sigma        : num 2.46 #>   ..$ statistic    : Named num 52.7 #>   .. ..- attr(*, \"names\")= chr \"value\" #>   ..$ p.value      : Named num 1.21e-11 #>   .. ..- attr(*, \"names\")= chr \"value\" #>   ..$ df           : Named num 3 #>   .. ..- attr(*, \"names\")= chr \"numdf\" #>   ..$ logLik       : num -72.1 #>   ..$ AIC          : num 154 #>   ..$ BIC          : num 161 #>   ..$ deviance     : num 169 #>   ..$ df.residual  : int 28 #>   ..$ nobs         : int 32 #>  - attr(*, \"broom_tidy\")= tibble [4 × 5] (S3: tbl_df/tbl/data.frame) #>   ..$ term     : chr [1:4] \"(Intercept)\" \"wt\" \"qsec\" \"am\" #>   ..$ estimate : num [1:4] 9.62 -3.92 1.23 2.94 #>   ..$ std.error: num [1:4] 6.96 0.711 0.289 1.411 #>   ..$ statistic: num [1:4] 1.38 -5.51 4.25 2.08 #>   ..$ p.value  : num [1:4] 1.78e-01 6.95e-06 2.16e-04 4.67e-02 #>  - attr(*, \"var_x\")= chr [1:3] \"wt\" \"qsec\" \"am\" #>  - attr(*, \"var_y\")= chr \"mpg\" #>  - attr(*, \"var_x_label\")= chr [1:3] \"wt***\" \"qsec***\" \"am*\""},{"path":"https://ggobi.github.io/ggally/reference/column_is_character.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vector of variable types from data frame — column_is_character","title":"Get vector of variable types from data frame — column_is_character","text":"Get vector variable types data frame","code":""},{"path":"https://ggobi.github.io/ggally/reference/column_is_character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vector of variable types from data frame — column_is_character","text":"","code":"column_is_character(df)  column_is_factor(df)"},{"path":"https://ggobi.github.io/ggally/reference/column_is_character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vector of variable types from data frame — column_is_character","text":"df data frame extract variable types ","code":""},{"path":"https://ggobi.github.io/ggally/reference/column_is_character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vector of variable types from data frame — column_is_character","text":"character vector variable types, names corresponding variable names df","code":""},{"path":"https://ggobi.github.io/ggally/reference/column_is_character.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get vector of variable types from data frame — column_is_character","text":"Jason Crowley","code":""},{"path":"https://ggobi.github.io/ggally/reference/eval_data_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate data column — eval_data_col","title":"Evaluate data column — eval_data_col","text":"Evaluate data column","code":""},{"path":"https://ggobi.github.io/ggally/reference/eval_data_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate data column — eval_data_col","text":"","code":"eval_data_col(data, aes_col)"},{"path":"https://ggobi.github.io/ggally/reference/eval_data_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate data column — eval_data_col","text":"data data set evaluate data aes_col Single value ggplot2::aes(...) object","code":""},{"path":"https://ggobi.github.io/ggally/reference/eval_data_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate data column — eval_data_col","text":"Aes mapping x y values switched","code":""},{"path":"https://ggobi.github.io/ggally/reference/eval_data_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate data column — eval_data_col","text":"","code":"mapping <- ggplot2::aes(Petal.Length) eval_data_col(iris, mapping$x) #>   [1] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 1.5 1.6 1.4 1.1 1.2 1.5 #>  [17] 1.3 1.4 1.7 1.5 1.7 1.5 1.0 1.7 1.9 1.6 1.6 1.5 1.4 1.6 1.6 1.5 #>  [33] 1.5 1.4 1.5 1.2 1.3 1.4 1.3 1.5 1.3 1.3 1.3 1.6 1.9 1.4 1.6 1.4 #>  [49] 1.5 1.4 4.7 4.5 4.9 4.0 4.6 4.5 4.7 3.3 4.6 3.9 3.5 4.2 4.0 4.7 #>  [65] 3.6 4.4 4.5 4.1 4.5 3.9 4.8 4.0 4.9 4.7 4.3 4.4 4.8 5.0 4.5 3.5 #>  [81] 3.8 3.7 3.9 5.1 4.5 4.5 4.7 4.4 4.1 4.0 4.4 4.6 4.0 3.3 4.2 4.2 #>  [97] 4.2 4.3 3.0 4.1 6.0 5.1 5.9 5.6 5.8 6.6 4.5 6.3 5.8 6.1 5.1 5.3 #> [113] 5.5 5.0 5.1 5.3 5.5 6.7 6.9 5.0 5.7 4.9 6.7 4.9 5.7 6.0 4.8 4.9 #> [129] 5.6 5.8 6.1 6.4 5.6 5.1 5.6 6.1 5.6 5.5 4.8 5.4 5.6 5.1 5.1 5.9 #> [145] 5.7 5.2 5.0 5.2 5.4 5.1"},{"path":"https://ggobi.github.io/ggally/reference/find_plot_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Find plot types — find_plot_type","title":"Find plot types — find_plot_type","text":"Retrieves type plot specific columns","code":""},{"path":"https://ggobi.github.io/ggally/reference/find_plot_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find plot types — find_plot_type","text":"","code":"find_plot_type(col1Name, col2Name, type1, type2, isAllNa, allowDiag)"},{"path":"https://ggobi.github.io/ggally/reference/find_plot_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find plot types — find_plot_type","text":"col1Name x column name col2Name y column name type1 x column type type2 y column type isAllNa .na(data) allowDiag allow diag values returned","code":""},{"path":"https://ggobi.github.io/ggally/reference/find_plot_type.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find plot types — find_plot_type","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/flea.html","id":null,"dir":"Reference","previous_headings":"","what":"Historical data used for classification examples. — flea","title":"Historical data used for classification examples. — flea","text":"data contains physical measurements three species flea beetles.","code":""},{"path":"https://ggobi.github.io/ggally/reference/flea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historical data used for classification examples. — flea","text":"","code":"data(flea)"},{"path":"https://ggobi.github.io/ggally/reference/flea.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historical data used for classification examples. — flea","text":"data frame 74 rows 7 variables","code":""},{"path":"https://ggobi.github.io/ggally/reference/flea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Historical data used for classification examples. — flea","text":"species Ch. concinna, Ch. heptapotamica, Ch. heikertingeri tars1 width first joint first tarsus microns tars2 width second joint first tarsus microns head maximal width head external edges eyes 0.01 mm aede1 maximal width aedeagus fore-part microns aede2 front angle aedeagus (1 unit = 7.5 degrees) aede3 aedeagus width side microns","code":""},{"path":"https://ggobi.github.io/ggally/reference/flea.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Historical data used for classification examples. — flea","text":"Lubischew, . . (1962), Use Discriminant Functions Taxonomy, Biometrics 18:455-477.","code":""},{"path":"https://ggobi.github.io/ggally/reference/fn_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"Function switch — fn_switch","title":"Function switch — fn_switch","text":"Function allows call different functions based upon aesthetic variable value.","code":""},{"path":"https://ggobi.github.io/ggally/reference/fn_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function switch — fn_switch","text":"","code":"fn_switch(types, mapping_val = \"y\")"},{"path":"https://ggobi.github.io/ggally/reference/fn_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function switch — fn_switch","text":"types list functions follow ggmatrix function standard: function(data, mapping, ...){ #make ggplot2 object }.  One key 'default' key default switch case. mapping_val mapping value switch .  Defaults 'y' variable aesthetics list.","code":""},{"path":"https://ggobi.github.io/ggally/reference/fn_switch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function switch — fn_switch","text":"","code":"ggnostic_continuous_fn <- fn_switch(list(   default = ggally_points,   .fitted = ggally_points,   .se.fit = ggally_nostic_se_fit,   .resid = ggally_nostic_resid,   .hat = ggally_nostic_hat,   .sigma = ggally_nostic_sigma,   .cooksd = ggally_nostic_cooksd,   .std.resid = ggally_nostic_std_resid ))  ggnostic_combo_fn <- fn_switch(list(   default = ggally_box_no_facet,   fitted = ggally_box_no_facet,   .se.fit = ggally_nostic_se_fit,   .resid = ggally_nostic_resid,   .hat = ggally_nostic_hat,   .sigma = ggally_nostic_sigma,   .cooksd = ggally_nostic_cooksd,   .std.resid = ggally_nostic_std_resid ))"},{"path":"https://ggobi.github.io/ggally/reference/getPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a ggmatrix object — getPlot","title":"Subset a ggmatrix object — getPlot","text":"Retrieves ggplot object desired location.","code":""},{"path":"https://ggobi.github.io/ggally/reference/getPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a ggmatrix object — getPlot","text":"","code":"getPlot(pm, i, j)  # S3 method for class 'ggmatrix' pm[i, j, ...]"},{"path":"https://ggobi.github.io/ggally/reference/getPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a ggmatrix object — getPlot","text":"pm ggmatrix object select row top j column left ... ignored","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/getPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Subset a ggmatrix object — getPlot","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/getPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a ggmatrix object — getPlot","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) plotMatrix2 <- ggpairs(tips[, 3:2], upper = list(combo = \"denstrip\")) p_(plotMatrix2[1, 2]) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Removed 22 rows containing missing values or values outside the scale #> range (`geom_bar()`)."},{"path":"https://ggobi.github.io/ggally/reference/get_x_axis_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get x axis labels — get_x_axis_labels","title":"Get x axis labels — get_x_axis_labels","text":"Retrieves x axis labels plot object directly.","code":""},{"path":"https://ggobi.github.io/ggally/reference/get_x_axis_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get x axis labels — get_x_axis_labels","text":"","code":"get_x_axis_labels(p, xRange)"},{"path":"https://ggobi.github.io/ggally/reference/get_x_axis_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get x axis labels — get_x_axis_labels","text":"p plot object xRange range x values","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_autopoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot for continuous and categorical variables — ggally_autopoint","title":"Scatterplot for continuous and categorical variables — ggally_autopoint","text":"Make scatterplots compatible continuous categorical variables using geom_autopoint package ggforce.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_autopoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot for continuous and categorical variables — ggally_autopoint","text":"","code":"ggally_autopoint(data, mapping, ...)  ggally_autopointDiag(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_autopoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot for continuous and categorical variables — ggally_autopoint","text":"data data set using mapping aesthetics used ... arguments passed geom_autopoint(...)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_autopoint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scatterplot for continuous and categorical variables — ggally_autopoint","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_autopoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot for continuous and categorical variables — ggally_autopoint","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_autopoint(tips, mapping = aes(x = tip, y = total_bill)))  p_(ggally_autopoint(tips, mapping = aes(x = tip, y = sex)))  p_(ggally_autopoint(tips, mapping = aes(x = smoker, y = sex)))  p_(ggally_autopoint(tips, mapping = aes(x = smoker, y = sex, color = day)))  p_(ggally_autopoint(tips, mapping = aes(x = smoker, y = sex), size = 8))  p_(ggally_autopoint(tips, mapping = aes(x = smoker, y = sex), alpha = .9))   p_(ggpairs(   tips,   mapping = aes(colour = sex),   upper = list(discrete = \"autopoint\", combo = \"autopoint\", continuous = \"autopoint\"),   diag = list(discrete = \"autopointDiag\", continuous = \"autopointDiag\") )) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/reference/ggally_barDiag.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot — ggally_barDiag","title":"Bar plot — ggally_barDiag","text":"Displays bar plot diagonal ggpairs plot matrix.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_barDiag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot — ggally_barDiag","text":"","code":"ggally_barDiag(data, mapping, ..., rescale = FALSE)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_barDiag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot — ggally_barDiag","text":"data data set using mapping aesthetics used ... arguments sent geom_bar rescale boolean decide whether rescale count output. applies numeric data","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_barDiag.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bar plot — ggally_barDiag","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_barDiag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bar plot — ggally_barDiag","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_barDiag(tips, mapping = ggplot2::aes(x = day)))  p_(ggally_barDiag(tips, mapping = ggplot2::aes(x = tip), binwidth = 0.25))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Blank plot — ggally_blank","title":"Blank plot — ggally_blank","text":"Draws nothing.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blank plot — ggally_blank","text":"","code":"ggally_blank(...)  ggally_blankDiag(...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blank plot — ggally_blank","text":"... arguments ignored","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_blank.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Blank plot — ggally_blank","text":"Makes \"blank\" ggplot object draw white space","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_blank.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blank plot — ggally_blank","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Box plot — ggally_box","title":"Box plot — ggally_box","text":"Make box plot given data set. ggally_box_no_facet single panel plot, ggally_box faceted plot","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box plot — ggally_box","text":"","code":"ggally_box(data, mapping, ...)  ggally_box_no_facet(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box plot — ggally_box","text":"data data set using mapping aesthetics used ... arguments supplied geom_boxplot","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_box.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Box plot — ggally_box","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box plot — ggally_box","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_box(tips, mapping = ggplot2::aes(x = total_bill, y = sex)))  p_(ggally_box(   tips,   mapping        = ggplot2::aes(sex, total_bill, color = sex),   outlier.colour = \"red\",   outlier.shape  = 13,   outlier.size   = 8 ))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_colbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Column and row bar plots — ggally_colbar","title":"Column and row bar plots — ggally_colbar","text":"Plot column row percentage using bar plots.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_colbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column and row bar plots — ggally_colbar","text":"","code":"ggally_colbar(   data,   mapping,   label_format = scales::label_percent(accuracy = 0.1),   ...,   remove_background = FALSE,   remove_percentage_axis = FALSE,   reverse_fill_levels = FALSE,   geom_bar_args = NULL )  ggally_rowbar(   data,   mapping,   label_format = scales::label_percent(accuracy = 0.1),   ...,   remove_background = FALSE,   remove_percentage_axis = FALSE,   reverse_fill_levels = TRUE,   geom_bar_args = NULL )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_colbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column and row bar plots — ggally_colbar","text":"data data set using mapping aesthetics used label_format formatter function displaying proportions, taken account label aesthetic provided mapping ... arguments passed geom_text(...) remove_background panel.background removed? remove_percentage_axis percentage axis removed? Removes y-axis ggally_colbar() x-axis ggally_rowbar() reverse_fill_levels levels fill variable reversed? geom_bar_args arguments passed geom_bar(...)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_colbar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Column and row bar plots — ggally_colbar","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_colbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column and row bar plots — ggally_colbar","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_colbar(tips, mapping = aes(x = smoker, y = sex)))  p_(ggally_rowbar(tips, mapping = aes(x = smoker, y = sex)))   # change labels' size p_(ggally_colbar(tips, mapping = aes(x = smoker, y = sex), size = 8))   # change labels' colour and use bold p_(ggally_colbar(tips,   mapping = aes(x = smoker, y = sex),   colour = \"white\", fontface = \"bold\" ))   # display number of observations instead of proportions p_(ggally_colbar(tips, mapping = aes(x = smoker, y = sex, label = after_stat(count))))   # custom bar width p_(ggally_colbar(tips, mapping = aes(x = smoker, y = sex), geom_bar_args = list(width = .5)))   # change format of labels p_(ggally_colbar(tips,   mapping = aes(x = smoker, y = sex),   label_format = scales::label_percent(accuracy = .01, decimal.mark = \",\") ))   p_(ggduo(   data = as.data.frame(Titanic),   mapping = aes(weight = Freq),   columnsX = \"Survived\",   columnsY = c(\"Sex\", \"Class\", \"Age\"),   types = list(discrete = \"rowbar\"),   legend = 1 ))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation value plot — ggally_cor","title":"Correlation value plot — ggally_cor","text":"Estimate correlation given data. color variable supplied, correlation also calculated per group.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation value plot — ggally_cor","text":"","code":"ggally_cor(   data,   mapping,   ...,   stars = TRUE,   method = \"pearson\",   display_grid = FALSE,   digits = 3,   title_args = list(...),   group_args = list(...),   justify_labels = \"right\",   align_percent = 0.5,   title = \"Corr\",   na.rm = NA,   use = deprecated(),   alignPercent = deprecated(),   displayGrid = deprecated() )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation value plot — ggally_cor","text":"data data set using mapping aesthetics used ... arguments supplied geom_text() title groups stars logical value determines significance stars displayed.  Given cor.test p-values, display \"***\" p-value < 0.001 \"**\" p-value < 0.01 \"*\" p-value < 0.05 \".\" p-value < 0.10 \"\" otherwise method method supplied cor function display_grid TRUE, display aligned panel grid lines. FALSE (default), display thin panel border. digits number digits displayed decimal point. See formatC numbers calculated. title_args arguments supplied title's geom_text() group_args arguments supplied split--color group's geom_text() justify_labels justify argument supplied formatting labels align_percent relative align position text. justify_labels = 0.5, needed set. title title text displayed na.rm logical value determines NA values removed. TRUE, warning message displayed. use . variable used internally. Please remove code. alignPercent, displayGrid . Please use snake-case counterparts.","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Correlation value plot — ggally_cor","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation value plot — ggally_cor","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_cor(tips, mapping = ggplot2::aes(total_bill, tip)))  # display with grid p_(ggally_cor(   tips,   mapping = ggplot2::aes(total_bill, tip),   display_grid = TRUE ))  # change text attributes p_(ggally_cor(   tips,   mapping = ggplot2::aes(x = total_bill, y = tip),   size = 15,   colour = I(\"red\"),   title = \"Correlation\" ))  # split by a variable p_(ggally_cor(   tips,   mapping = ggplot2::aes(total_bill, tip, color = sex),   size = 5 ))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor_v1_5.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation value plot — ggally_cor_v1_5","title":"Correlation value plot — ggally_cor_v1_5","text":"Estimate correlation given data. function deprecated removed future releases. See ggally_cor.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor_v1_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation value plot — ggally_cor_v1_5","text":"","code":"ggally_cor_v1_5(   data,   mapping,   alignPercent = 0.6,   method = \"pearson\",   use = \"complete.obs\",   corAlignPercent = NULL,   corMethod = NULL,   corUse = NULL,   displayGrid = TRUE,   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor_v1_5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation value plot — ggally_cor_v1_5","text":"data data set using mapping aesthetics used alignPercent right align position numbers. Default 60 percent across horizontal method method supplied cor function use use supplied cor function corAlignPercent deprecated. Use parameter alignPercent corMethod deprecated. Use parameter method corUse deprecated. Use parameter use displayGrid TRUE, display aligned panel gridlines ... arguments supplied geom_text","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor_v1_5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Correlation value plot — ggally_cor_v1_5","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_cor_v1_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation value plot — ggally_cor_v1_5","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_cor_v1_5(tips, mapping = ggplot2::aes(total_bill, tip))) #> Warning: `ggally_cor_v1_5()` was deprecated in GGally 2.3.0. #> ℹ Please use `ggally_cor()` instead.   # display with no grid p_(ggally_cor_v1_5(   tips,   mapping = ggplot2::aes(total_bill, tip),   displayGrid = FALSE ))   # change text attributes p_(ggally_cor_v1_5(   tips,   mapping = ggplot2::aes(x = total_bill, y = tip),   size = 15,   colour = I(\"red\") ))   # split by a variable p_(ggally_cor_v1_5(   tips,   mapping = ggplot2::aes(total_bill, tip, color = sex),   size = 5 ))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Display counts of observations — ggally_count","title":"Display counts of observations — ggally_count","text":"Plot number observations using rectangles proportional areas.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display counts of observations — ggally_count","text":"","code":"ggally_count(data, mapping, ...)  ggally_countDiag(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display counts of observations — ggally_count","text":"data data set using mapping aesthetics used ... arguments passed geom_tile(...)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display counts of observations — ggally_count","text":"can adjust size rectangles x.width argument.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_count.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display counts of observations — ggally_count","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display counts of observations — ggally_count","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_count(tips, mapping = ggplot2::aes(x = smoker, y = sex)))  p_(ggally_count(tips, mapping = ggplot2::aes(x = smoker, y = sex, fill = day)))   p_(ggally_count(   as.data.frame(Titanic),   mapping = ggplot2::aes(x = Class, y = Survived, weight = Freq) ))  p_(ggally_count(   as.data.frame(Titanic),   mapping = ggplot2::aes(x = Class, y = Survived, weight = Freq),   x.width = 0.5 ))  # Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  p_(ggally_countDiag(tips, mapping = ggplot2::aes(x = smoker)))  p_(ggally_countDiag(tips, mapping = ggplot2::aes(x = smoker, fill = sex)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_cross.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the number of observations — ggally_cross","title":"Plots the number of observations — ggally_cross","text":"Plot number observations using square points proportional areas. filled according chi-squared statistics computed stat_cross(). Labels also added (see examples).","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the number of observations — ggally_cross","text":"","code":"ggally_cross(data, mapping, ..., scale_max_size = 20, geom_text_args = NULL)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_cross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the number of observations — ggally_cross","text":"data data set using mapping aesthetics used ... arguments passed ggplot2::geom_point() scale_max_size max_size argument supplied ggplot2::scale_size_area() geom_text_args arguments passed ggplot2::geom_text()","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_cross.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots the number of observations — ggally_cross","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_cross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the number of observations — ggally_cross","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_cross(tips, mapping = aes(x = smoker, y = sex)))  p_(ggally_cross(tips, mapping = aes(x = day, y = time)))   # Custom max size p_(ggally_cross(tips, mapping = aes(x = smoker, y = sex)) +   scale_size_area(max_size = 40)) #> Scale for size is already present. #> Adding another scale for size, which will replace the existing scale.   # Custom fill p_(ggally_cross(tips, mapping = aes(x = smoker, y = sex), fill = \"red\"))   # Custom shape p_(ggally_cross(tips, mapping = aes(x = smoker, y = sex), shape = 21))   # Fill squares according to standardized residuals d <- as.data.frame(Titanic) p_(ggally_cross(   d,   mapping = aes(x = Class, y = Survived, weight = Freq, fill = after_stat(std.resid)) ) +   scale_fill_steps2(breaks = c(-3, -2, 2, 3), show.limits = TRUE))   # Add labels p_(ggally_cross(   tips,   mapping = aes(     x = smoker, y = sex, colour = smoker,     label = scales::percent(after_stat(prop))   ) ))   # Customize labels' appearance and same size for all squares p_(ggally_cross(   tips,   mapping = aes(     x = smoker, y = sex,     size = NULL, # do not map size to a variable     label = scales::percent(after_stat(prop))   ),   size = 40, # fix value for points size   fill = \"darkblue\",   geom_text_args = list(colour = \"white\", fontface = \"bold\", size = 6) ))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a cross-tabulated table — ggally_crosstable","title":"Display a cross-tabulated table — ggally_crosstable","text":"ggally_crosstable variation ggally_table modifications: () table cells drawn; (ii) x y axis expanded (therefore aligned ggally_* plots); (iii) content fill cells can easily controlled dedicated arguments.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a cross-tabulated table — ggally_crosstable","text":"","code":"ggally_crosstable(   data,   mapping,   cells = c(\"observed\", \"prop\", \"row.prop\", \"col.prop\", \"expected\", \"resid\", \"std.resid\"),   fill = c(\"none\", \"std.resid\", \"resid\"),   ...,   geom_tile_args = list(colour = \"grey50\") )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a cross-tabulated table — ggally_crosstable","text":"data data set using mapping aesthetics used cells statistic displayed table cells? fill statistic used filling table cells? ... arguments passed geom_text(...) geom_tile_args arguments passed geom_tile(...)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a cross-tabulated table — ggally_crosstable","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips)  # differences with ggally_table() p_(ggally_table(tips, mapping = aes(x = day, y = time)))  p_(ggally_crosstable(tips, mapping = aes(x = day, y = time)))   # display column proportions p_(ggally_crosstable(tips, mapping = aes(x = day, y = sex), cells = \"col.prop\"))   # display row proportions p_(ggally_crosstable(tips, mapping = aes(x = day, y = sex), cells = \"row.prop\"))   # change size of text p_(ggally_crosstable(tips, mapping = aes(x = day, y = sex), size = 8))   # fill cells with standardized residuals p_(ggally_crosstable(tips, mapping = aes(x = day, y = sex), fill = \"std.resid\"))   # change scale for fill p_(ggally_crosstable(tips, mapping = aes(x = day, y = sex), fill = \"std.resid\") +   scale_fill_steps2(breaks = c(-2, 0, 2), show.limits = TRUE)) #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://ggobi.github.io/ggally/reference/ggally_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Bivariate density plot — ggally_density","title":"Bivariate density plot — ggally_density","text":"Make 2D density plot given data.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bivariate density plot — ggally_density","text":"","code":"ggally_density(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bivariate density plot — ggally_density","text":"data data set using mapping aesthetics used ... parameters sent either stat_density2d geom_density2d","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bivariate density plot — ggally_density","text":"aesthetic \"fill\" determines whether stat_density2d (filled) geom_density2d (lines) used.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_density.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bivariate density plot — ggally_density","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bivariate density plot — ggally_density","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_density(tips, mapping = ggplot2::aes(x = total_bill, y = tip)))  p_(ggally_density(   tips,   mapping = ggplot2::aes(total_bill, tip, fill = after_stat(level)) ))  p_(ggally_density(   tips,   mapping = ggplot2::aes(total_bill, tip, fill = after_stat(level)) ) + ggplot2::scale_fill_gradient(breaks = c(0.05, 0.1, 0.15, 0.2)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_densityDiag.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate density plot — ggally_densityDiag","title":"Univariate density plot — ggally_densityDiag","text":"Displays density plot diagonal ggpairs plot matrix.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_densityDiag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate density plot — ggally_densityDiag","text":"","code":"ggally_densityDiag(data, mapping, ..., rescale = FALSE)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_densityDiag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate density plot — ggally_densityDiag","text":"data data set using mapping aesthetics used. ... arguments sent stat_density rescale boolean decide whether rescale count output","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_densityDiag.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Univariate density plot — ggally_densityDiag","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_densityDiag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate density plot — ggally_densityDiag","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_densityDiag(tips, mapping = ggplot2::aes(x = total_bill)))  p_(ggally_densityDiag(tips, mapping = ggplot2::aes(x = total_bill, color = day)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_denstrip.html","id":null,"dir":"Reference","previous_headings":"","what":"Tile plot with facets — ggally_denstrip","title":"Tile plot with facets — ggally_denstrip","text":"Displays Tile Plot densely possible.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_denstrip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tile plot with facets — ggally_denstrip","text":"","code":"ggally_denstrip(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_denstrip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tile plot with facets — ggally_denstrip","text":"data data set using mapping aesthetics used ... arguments sent stat_bin","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_denstrip.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tile plot with facets — ggally_denstrip","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_denstrip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tile plot with facets — ggally_denstrip","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_denstrip(tips, mapping = ggplot2::aes(x = total_bill, y = sex))) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Removed 15 rows containing missing values or values outside the scale #> range (`geom_bar()`).  p_(ggally_denstrip(   tips,   mapping = ggplot2::aes(sex, tip), binwidth = 0.2 ) + ggplot2::scale_fill_gradient(low = \"grey80\", high = \"black\")) #> Warning: Removed 41 rows containing missing values or values outside the scale #> range (`geom_bar()`)."},{"path":"https://ggobi.github.io/ggally/reference/ggally_diagAxis.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal axis labels for ggpairs — ggally_diagAxis","title":"Internal axis labels for ggpairs — ggally_diagAxis","text":"function used axisLabels == \"internal\".","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_diagAxis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal axis labels for ggpairs — ggally_diagAxis","text":"","code":"ggally_diagAxis(   data,   mapping,   label = mapping$x,   labelSize = 5,   labelXPercent = 0.5,   labelYPercent = 0.55,   labelHJust = 0.5,   labelVJust = 0.5,   gridLabelSize = 4,   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_diagAxis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal axis labels for ggpairs — ggally_diagAxis","text":"data dataset plotted mapping aesthetics used (x variable plot made ) label title displayed middle.  Defaults mapping$x labelSize size variable label labelXPercent percent horizontal range labelYPercent percent vertical range labelHJust hjust supplied label labelVJust vjust supplied label gridLabelSize size grid labels ... arguments geom_text","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_diagAxis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal axis labels for ggpairs — ggally_diagAxis","text":"Jason Crowley Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_diagAxis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal axis labels for ggpairs — ggally_diagAxis","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_diagAxis(tips, ggplot2::aes(x = tip)))  p_(ggally_diagAxis(tips, ggplot2::aes(x = sex)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Grouped dot plot — ggally_dot","title":"Grouped dot plot — ggally_dot","text":"Add jittering box plot. ggally_dot_no_facet single panel plot, ggally_dot faceted plot","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grouped dot plot — ggally_dot","text":"","code":"ggally_dot(data, mapping, ...)  ggally_dot_no_facet(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grouped dot plot — ggally_dot","text":"data data set using mapping aesthetics used ... arguments supplied geom_jitter","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Grouped dot plot — ggally_dot","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grouped dot plot — ggally_dot","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_dot(tips, mapping = ggplot2::aes(x = total_bill, y = sex)))  p_(ggally_dot(   tips,   mapping = ggplot2::aes(sex, total_bill, color = sex) ))  p_(ggally_dot(   tips,   mapping = ggplot2::aes(sex, total_bill, color = sex, shape = sex) ) + ggplot2::scale_shape(solid = FALSE))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot_and_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Box and dot plot — ggally_dot_and_box","title":"Box and dot plot — ggally_dot_and_box","text":"Place box plots dot plots graph","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot_and_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box and dot plot — ggally_dot_and_box","text":"","code":"ggally_dot_and_box(data, mapping, ..., boxPlot = TRUE)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot_and_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box and dot plot — ggally_dot_and_box","text":"data data set using mapping aesthetics used ... parameters passed either geom_jitter geom_boxplot boxPlot boolean decide plot either box plots (TRUE) dot plots (FALSE)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot_and_box.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Box and dot plot — ggally_dot_and_box","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_dot_and_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box and dot plot — ggally_dot_and_box","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_dot_and_box(   tips,   mapping = ggplot2::aes(x = total_bill, y = sex, color = sex),   boxPlot = TRUE ))  p_(ggally_dot_and_box(   tips,   mapping = ggplot2::aes(x = total_bill, y = sex, color = sex),   boxPlot = FALSE ))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Faceted bar plot — ggally_facetbar","title":"Faceted bar plot — ggally_facetbar","text":"X variables plotted using geom_bar faceted Y variable.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Faceted bar plot — ggally_facetbar","text":"","code":"ggally_facetbar(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Faceted bar plot — ggally_facetbar","text":"data data set using mapping aesthetics used ... arguments sent geom_bar","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetbar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Faceted bar plot — ggally_facetbar","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Faceted bar plot — ggally_facetbar","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_facetbar(tips, ggplot2::aes(x = sex, y = smoker, fill = time)))  p_(ggally_facetbar(tips, ggplot2::aes(x = smoker, y = sex, fill = time)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Faceted density plot — ggally_facetdensity","title":"Faceted density plot — ggally_facetdensity","text":"Make density plots displaying subsets data different panels.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Faceted density plot — ggally_facetdensity","text":"","code":"ggally_facetdensity(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Faceted density plot — ggally_facetdensity","text":"data data set using mapping aesthetics used ... arguments sent stat_density","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Faceted density plot — ggally_facetdensity","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Faceted density plot — ggally_facetdensity","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_facetdensity(tips, mapping = ggplot2::aes(x = total_bill, y = sex)))  p_(ggally_facetdensity(   tips,   mapping = ggplot2::aes(sex, total_bill, color = sex) ))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensitystrip.html","id":null,"dir":"Reference","previous_headings":"","what":"Density or tiles plot with facets — ggally_facetdensitystrip","title":"Density or tiles plot with facets — ggally_facetdensitystrip","text":"Make tile plot density plot compact possible.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensitystrip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density or tiles plot with facets — ggally_facetdensitystrip","text":"","code":"ggally_facetdensitystrip(data, mapping, ..., den_strip = FALSE)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensitystrip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density or tiles plot with facets — ggally_facetdensitystrip","text":"data data set using mapping aesthetics used ... arguments sent either geom_histogram stat_density den_strip boolean decide whether plot density strip(TRUE) facet density(FALSE) plot.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensitystrip.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density or tiles plot with facets — ggally_facetdensitystrip","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facetdensitystrip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density or tiles plot with facets — ggally_facetdensitystrip","text":"","code":"example(ggally_facetdensity) #>  #> gglly_> # Small function to display plots only if it's interactive #> gglly_> p_ <- GGally::print_if_interactive #>  #> gglly_> data(tips) #>  #> gglly_> p_(ggally_facetdensity(tips, mapping = ggplot2::aes(x = total_bill, y = sex)))  #>  #> gglly_> p_(ggally_facetdensity( #> gglly_+   tips, #> gglly_+   mapping = ggplot2::aes(sex, total_bill, color = sex) #> gglly_+ ))  example(ggally_denstrip) #>  #> gglly_> # Small function to display plots only if it's interactive #> gglly_> p_ <- GGally::print_if_interactive #>  #> gglly_> data(tips) #>  #> gglly_> p_(ggally_denstrip(tips, mapping = ggplot2::aes(x = total_bill, y = sex))) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Removed 15 rows containing missing values or values outside the scale #> range (`geom_bar()`).  #>  #> gglly_> p_(ggally_denstrip( #> gglly_+   tips, #> gglly_+   mapping = ggplot2::aes(sex, tip), binwidth = 0.2 #> gglly_+ ) + ggplot2::scale_fill_gradient(low = \"grey80\", high = \"black\")) #> Warning: Removed 41 rows containing missing values or values outside the scale #> range (`geom_bar()`)."},{"path":"https://ggobi.github.io/ggally/reference/ggally_facethist.html","id":null,"dir":"Reference","previous_headings":"","what":"Faceted histogram — ggally_facethist","title":"Faceted histogram — ggally_facethist","text":"Display subsetted histograms data different panels.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facethist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Faceted histogram — ggally_facethist","text":"","code":"ggally_facethist(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_facethist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Faceted histogram — ggally_facethist","text":"data data set using mapping aesthetics used ... parameters sent stat_bin()","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facethist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Faceted histogram — ggally_facethist","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_facethist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Faceted histogram — ggally_facethist","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_facethist(tips, mapping = ggplot2::aes(x = tip, y = sex))) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  p_(ggally_facethist(tips, mapping = ggplot2::aes(x = tip, y = sex), binwidth = 0.1))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_na.html","id":null,"dir":"Reference","previous_headings":"","what":"NA plot — ggally_na","title":"NA plot — ggally_na","text":"Draws large NA middle plotting area.  plot useful X Y data NA","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NA plot — ggally_na","text":"","code":"ggally_na(data = NULL, mapping = NULL, size = 10, color = \"grey20\", ...)  ggally_naDiag(...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NA plot — ggally_na","text":"data ignored mapping ignored size size geom_text 'NA' color color geom_text 'NA' ... arguments sent geom_text","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NA plot — ggally_na","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_cooksd.html","id":null,"dir":"Reference","previous_headings":"","what":"ggnostic Cook's distance — ggally_nostic_cooksd","title":"ggnostic Cook's distance — ggally_nostic_cooksd","text":"function display stats::cooks.distance().","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_cooksd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggnostic Cook's distance — ggally_nostic_cooksd","text":"","code":"ggally_nostic_cooksd(   data,   mapping,   ...,   linePosition = pf(0.5, length(attr(data, \"var_x\")), nrow(data) - length(attr(data,     \"var_x\"))),   lineColor = brew_colors(\"grey\"),   lineType = 2 )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_cooksd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggnostic Cook's distance — ggally_nostic_cooksd","text":"data, mapping, ..., lineColor, lineType parameters supplied ggally_nostic_line linePosition 4 / n general cutoff point Cook's Distance","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_cooksd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggnostic Cook's distance — ggally_nostic_cooksd","text":"ggplot2 plot object","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_cooksd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggnostic Cook's distance — ggally_nostic_cooksd","text":"line added \\(F_{p,n-p}(0.5)\\) display general cutoff point Cook's Distance. Reference: Michael H. Kutner, Christopher J. Nachtsheim, John Neter, William Li. Applied linear statistical models. McGraw-Hill / Irwin series operations decision sciences. McGraw-Hill Irwin, 2005, p. 403","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_cooksd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggnostic Cook's distance — ggally_nostic_cooksd","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  dt <- broomify(stats::lm(mpg ~ wt + qsec + am, data = mtcars)) p_(ggally_nostic_cooksd(dt, ggplot2::aes(wt, .cooksd)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_hat.html","id":null,"dir":"Reference","previous_headings":"","what":"ggnostic leverage points — ggally_nostic_hat","title":"ggnostic leverage points — ggally_nostic_hat","text":"function display stats::influence's hat information given explanatory variable.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_hat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggnostic leverage points — ggally_nostic_hat","text":"","code":"ggally_nostic_hat(   data,   mapping,   ...,   linePosition = 2 * sum(eval_data_col(data, mapping$y))/nrow(data),   lineColor = brew_colors(\"grey\"),   lineSize = 0.5,   lineAlpha = 1,   lineType = 2,   avgLinePosition = sum(eval_data_col(data, mapping$y))/nrow(data),   avgLineColor = brew_colors(\"grey\"),   avgLineSize = lineSize,   avgLineAlpha = lineAlpha,   avgLineType = 1 )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_hat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggnostic leverage points — ggally_nostic_hat","text":"data, mapping, ... supplied directly ggally_nostic_line linePosition, lineColor, lineSize, lineAlpha, lineType parameters supplied ggplot2::geom_line() cutoff line avgLinePosition, avgLineColor, avgLineSize, avgLineAlpha, avgLineType parameters supplied ggplot2::geom_line() average line","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_hat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggnostic leverage points — ggally_nostic_hat","text":"ggplot2 plot object","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_hat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggnostic leverage points — ggally_nostic_hat","text":"stated stats::influence() documentation: hat: vector containing diagonal 'hat' matrix. diagonal elements 'hat' matrix describe influence response value fitted value observation. suggested \"cutoff\" line added plot height 2 * p / n expected line height p / n. either linePosition avgLinePosition NULL, respective line drawn.","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_hat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggnostic leverage points — ggally_nostic_hat","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  dt <- broomify(stats::lm(mpg ~ wt + qsec + am, data = mtcars)) p_(ggally_nostic_hat(dt, ggplot2::aes(wt, .hat)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_line.html","id":null,"dir":"Reference","previous_headings":"","what":"ggnostic background line with geom — ggally_nostic_line","title":"ggnostic background line with geom — ggally_nostic_line","text":"non-null linePosition value given, line drawn given continuous_geom combo_geom added plot.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggnostic background line with geom — ggally_nostic_line","text":"","code":"ggally_nostic_line(   data,   mapping,   ...,   linePosition = NULL,   lineColor = \"red\",   lineSize = 0.5,   lineAlpha = 1,   lineType = 1,   continuous_geom = ggplot2::geom_point,   combo_geom = ggplot2::geom_boxplot,   mapColorToFill = TRUE )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggnostic background line with geom — ggally_nostic_line","text":"data, mapping supplied directly ggplot2::ggplot() ... parameters supplied continuous_geom combo_geom linePosition, lineColor, lineSize, lineAlpha, lineType parameters supplied ggplot2::geom_line() continuous_geom ggplot2 geom executed line (possibly) added x data continuous combo_geom ggplot2 geom executed line (possibly) added x data discrete mapColorToFill boolean determine combo plots cut color mapping fill mapping","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggnostic background line with geom — ggally_nostic_line","text":"ggplot2 plot object","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_line.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggnostic background line with geom — ggally_nostic_line","text":"Functions color name different default color behavior.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_resid.html","id":null,"dir":"Reference","previous_headings":"","what":"ggnostic residuals — ggally_nostic_resid","title":"ggnostic residuals — ggally_nostic_resid","text":"non-null pVal sigma values given, confidence interval lines added plot specified pVal percentiles N(0, sigma) distribution.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_resid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggnostic residuals — ggally_nostic_resid","text":"","code":"ggally_nostic_resid(   data,   mapping,   ...,   linePosition = 0,   lineColor = brew_colors(\"grey\"),   lineSize = 0.5,   lineAlpha = 1,   lineType = 1,   lineConfColor = brew_colors(\"grey\"),   lineConfSize = lineSize,   lineConfAlpha = lineAlpha,   lineConfType = 2,   pVal = c(0.025, 0.975),   sigma = attr(data, \"broom_glance\")$sigma,   se = TRUE,   method = \"auto\",   formula = y ~ x )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_resid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggnostic residuals — ggally_nostic_resid","text":"data, mapping, ... parameters supplied ggally_nostic_line linePosition, lineColor, lineSize, lineAlpha, lineType parameters supplied ggplot2::geom_line() lineConfColor, lineConfSize, lineConfAlpha, lineConfType parameters supplied confidence interval lines pVal percentiles N(0, sigma) distribution drawn sigma sigma value pVal percentiles se boolean determine confidence intervals displayed method, formula parameters supplied ggplot2::geom_smooth(). Defaults \"auto\" \"y ~ x\"","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_resid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggnostic residuals — ggally_nostic_resid","text":"ggplot2 plot object","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_resid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggnostic residuals — ggally_nostic_resid","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  dt <- broomify(stats::lm(mpg ~ wt + qsec + am, data = mtcars)) p_(ggally_nostic_resid(dt, ggplot2::aes(wt, .resid))) #> `geom_smooth()` using method = 'loess'"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_se_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"ggnostic fitted value's standard error — ggally_nostic_se_fit","title":"ggnostic fitted value's standard error — ggally_nostic_se_fit","text":"function display stats::predict's standard errors","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_se_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggnostic fitted value's standard error — ggally_nostic_se_fit","text":"","code":"ggally_nostic_se_fit(   data,   mapping,   ...,   lineColor = brew_colors(\"grey\"),   linePosition = NULL )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_se_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggnostic fitted value's standard error — ggally_nostic_se_fit","text":"data, mapping, ..., lineColor parameters supplied ggally_nostic_line linePosition base comparison perfect fit","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_se_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggnostic fitted value's standard error — ggally_nostic_se_fit","text":"ggplot2 plot object","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_se_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggnostic fitted value's standard error — ggally_nostic_se_fit","text":"stated stats::predict documentation: logical 'se.fit' 'TRUE', standard errors predictions calculated.  numeric argument 'scale' set (optional ”df'), used residual standard deviation computation standard errors, otherwise extracted model fit. Since se.fit TRUE scale unset default, standard errors extracted model fit. base line 0 added give reference perfect fit.","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_se_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggnostic fitted value's standard error — ggally_nostic_se_fit","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  dt <- broomify(stats::lm(mpg ~ wt + qsec + am, data = mtcars)) p_(ggally_nostic_se_fit(dt, ggplot2::aes(wt, .se.fit)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"ggnostic leave one out model sigma — ggally_nostic_sigma","title":"ggnostic leave one out model sigma — ggally_nostic_sigma","text":"function display stats::influence()'s sigma value.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggnostic leave one out model sigma — ggally_nostic_sigma","text":"","code":"ggally_nostic_sigma(   data,   mapping,   ...,   lineColor = brew_colors(\"grey\"),   linePosition = attr(data, \"broom_glance\")$sigma )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggnostic leave one out model sigma — ggally_nostic_sigma","text":"data, mapping, ..., lineColor parameters supplied ggally_nostic_line linePosition line drawn background plot. Defaults overall model's sigma value.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggnostic leave one out model sigma — ggally_nostic_sigma","text":"ggplot2 plot object","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggnostic leave one out model sigma — ggally_nostic_sigma","text":"stated stats::influence() documentation: sigma: vector whose -th element contains estimate residual standard deviation obtained -th case dropped regression.  (approximations needed GLMs can result 'NaN'.) line added display overall model's sigma value. gives baseline comparison","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggnostic leave one out model sigma — ggally_nostic_sigma","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  dt <- broomify(stats::lm(mpg ~ wt + qsec + am, data = mtcars)) p_(ggally_nostic_sigma(dt, ggplot2::aes(wt, .sigma)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_std_resid.html","id":null,"dir":"Reference","previous_headings":"","what":"ggnostic standardized residuals — ggally_nostic_std_resid","title":"ggnostic standardized residuals — ggally_nostic_std_resid","text":"non-null pVal sigma values given, confidence interval lines added plot specified pVal locations N(0, 1) distribution.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_std_resid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggnostic standardized residuals — ggally_nostic_std_resid","text":"","code":"ggally_nostic_std_resid(data, mapping, ..., sigma = 1)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_std_resid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggnostic standardized residuals — ggally_nostic_std_resid","text":"data, mapping, ... parameters supplied ggally_nostic_resid sigma sigma value pVal percentiles. Set 1 standardized residuals","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_std_resid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggnostic standardized residuals — ggally_nostic_std_resid","text":"ggplot2 plot object","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_nostic_std_resid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggnostic standardized residuals — ggally_nostic_std_resid","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  dt <- broomify(stats::lm(mpg ~ wt + qsec + am, data = mtcars)) p_(ggally_nostic_std_resid(dt, ggplot2::aes(wt, .std.resid))) #> `geom_smooth()` using method = 'loess'"},{"path":"https://ggobi.github.io/ggally/reference/ggally_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot — ggally_points","title":"Scatter plot — ggally_points","text":"Make scatter plot given data set.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot — ggally_points","text":"","code":"ggally_points(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot — ggally_points","text":"data data set using mapping aesthetics used ... arguments sent geom_point","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_points.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scatter plot — ggally_points","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot — ggally_points","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(mtcars) p_(ggally_points(mtcars, mapping = ggplot2::aes(disp, hp)))  p_(ggally_points(mtcars, mapping = ggplot2::aes(disp, hp)))  p_(ggally_points(   mtcars,   mapping = ggplot2::aes(     x     = disp,     y     = hp,     color = as.factor(cyl),     size  = gear   ) ))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Mosaic plot — ggally_ratio","title":"Mosaic plot — ggally_ratio","text":"Plots mosaic plot using fluctuation.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mosaic plot — ggally_ratio","text":"","code":"ggally_ratio(   data,   mapping = ggplot2::aes(!!!stats::setNames(lapply(colnames(data)[1:2], as.name), c(\"x\",     \"y\"))),   ...,   floor = 0,   ceiling = NULL )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mosaic plot — ggally_ratio","text":"data data set using mapping aesthetics used. x y used required ... passed geom_tile(...) floor display cells smaller value ceiling max value scale frequencies.  frequency larger ceiling, fill color displayed darker rectangles","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_ratio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mosaic plot — ggally_ratio","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mosaic plot — ggally_ratio","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_ratio(tips, ggplot2::aes(sex, day)))  p_(ggally_ratio(tips, ggplot2::aes(sex, day)) + ggplot2::coord_equal())  # only plot tiles greater or equal to 20 and scale to a max of 50 p_(ggally_ratio(   tips, ggplot2::aes(sex, day),   floor = 20, ceiling = 50 ) + ggplot2::theme(aspect.ratio = 4 / 2))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot with a smoothed line — ggally_smooth","title":"Scatter plot with a smoothed line — ggally_smooth","text":"Add smoothed condition mean given scatter plot.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot with a smoothed line — ggally_smooth","text":"","code":"ggally_smooth(   data,   mapping,   ...,   method = \"lm\",   formula = y ~ x,   se = TRUE,   shrink = TRUE )  ggally_smooth_loess(data, mapping, ...)  ggally_smooth_lm(data, mapping, ...)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot with a smoothed line — ggally_smooth","text":"data data set using mapping aesthetics used method, se parameters supplied geom_smooth formula, ... arguments add geom_smooth shrink boolean determine y range reduced range points points error ribbon","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_smooth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatter plot with a smoothed line — ggally_smooth","text":"Y limits reduced match original Y range goal keeping Y axis across plots.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_smooth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scatter plot with a smoothed line — ggally_smooth","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot with a smoothed line — ggally_smooth","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_smooth(tips, mapping = ggplot2::aes(x = total_bill, y = tip)))  p_(ggally_smooth(tips, mapping = ggplot2::aes(total_bill, tip, color = sex)))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_statistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized text display — ggally_statistic","title":"Generalized text display — ggally_statistic","text":"Generalized text display","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_statistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized text display — ggally_statistic","text":"","code":"ggally_statistic(   data,   mapping,   text_fn,   title,   na.rm = NA,   display_grid = FALSE,   justify_labels = \"right\",   justify_text = \"left\",   sep = \": \",   family = \"mono\",   title_args = list(),   group_args = list(),   align_percent = 0.5,   title_hjust = 0.5,   group_hjust = 0.5 )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_statistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized text display — ggally_statistic","text":"data data set using mapping aesthetics used text_fn function takes x y returns text string title title text displayed na.rm logical value determines NA values removed. TRUE, warning message displayed. display_grid TRUE, display aligned panel grid lines. FALSE (default), display thin panel border. justify_labels justify argument supplied formatting labels justify_text justify argument supplied formatting returned text_fn(x, y) values sep separation value placed labels text family font family used displaying text.  value set title_args group_args family value exists.  using \"mono\", groups align . title_args arguments supplied title's geom_text() group_args arguments supplied split--color group's geom_text() align_percent relative align position text. title_hjust = 0.5 group_hjust = 0.5, needed set. title_hjust, group_hjust hjust sent geom_text() title group values respectively. hjust value supplied title_args group_args take precedence.","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggally_summarise_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a continuous variable by each value of a discrete variable — ggally_summarise_by","title":"Summarize a continuous variable by each value of a discrete variable — ggally_summarise_by","text":"Display summary statistics continuous variable value discrete variable.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_summarise_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a continuous variable by each value of a discrete variable — ggally_summarise_by","text":"","code":"ggally_summarise_by(   data,   mapping,   text_fn = weighted_median_iqr,   text_fn_vertical = NULL,   ... )  weighted_median_iqr(x, weights = NULL)  weighted_mean_sd(x, weights = NULL)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_summarise_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a continuous variable by each value of a discrete variable — ggally_summarise_by","text":"data data set using mapping aesthetics used text_fn function takes x weights returns text string text_fn_vertical function takes x weights returns text string, used x discrete y continuous. provided, use text_fn, replacing spaces carriage returns. ... arguments passed geom_text(...) x numeric vector weights optional numeric vectors weights. NULL, equal weights 1 taken account.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_summarise_by.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize a continuous variable by each value of a discrete variable — ggally_summarise_by","text":"weighted_median_iqr computes weighted median interquartile range. weighted_mean_sd computes weighted mean standard deviation.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_summarise_by.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize a continuous variable by each value of a discrete variable — ggally_summarise_by","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_summarise_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a continuous variable by each value of a discrete variable — ggally_summarise_by","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  if (require(Hmisc)) {   data(tips)   p_(ggally_summarise_by(tips, mapping = aes(x = total_bill, y = day)))   p_(ggally_summarise_by(tips, mapping = aes(x = day, y = total_bill)))    # colour is kept only if equal to the discrete variable   p_(ggally_summarise_by(tips, mapping = aes(x = total_bill, y = day, color = day)))   p_(ggally_summarise_by(tips, mapping = aes(x = total_bill, y = day, color = sex)))   p_(ggally_summarise_by(tips, mapping = aes(x = day, y = total_bill, color = day)))    # custom text size   p_(ggally_summarise_by(tips, mapping = aes(x = total_bill, y = day), size = 6))    # change statistic to display   p_(ggally_summarise_by(tips, mapping = aes(x = total_bill, y = day), text_fn = weighted_mean_sd))    # custom stat function   weighted_sum <- function(x, weights = NULL) {     if (is.null(weights)) weights <- 1     paste0(\"Total : \", round(sum(x * weights, na.rm = TRUE), digits = 1))   }   p_(ggally_summarise_by(tips, mapping = aes(x = total_bill, y = day), text_fn = weighted_sum)) } #> Loading required package: Hmisc #>  #> Attaching package: ‘Hmisc’ #> The following objects are masked from ‘package:base’: #>  #>     format.pval, units"},{"path":"https://ggobi.github.io/ggally/reference/ggally_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a table of the number of observations — ggally_table","title":"Display a table of the number of observations — ggally_table","text":"Plot number observations table. statistics computed stat_cross  used (see examples).","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a table of the number of observations — ggally_table","text":"","code":"ggally_table(   data,   mapping,   keep.zero.cells = FALSE,   ...,   geom_tile_args = NULL )  ggally_tableDiag(   data,   mapping,   keep.zero.cells = FALSE,   ...,   geom_tile_args = NULL )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a table of the number of observations — ggally_table","text":"data data set using mapping aesthetics used keep.zero.cells TRUE, display cells observation. ... arguments passed geom_text(...) geom_tile_args arguments passed geom_tile(...)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Display a table of the number of observations — ggally_table","text":"colour aesthetic taken account equal x y.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display a table of the number of observations — ggally_table","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a table of the number of observations — ggally_table","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggally_table(tips, mapping = aes(x = smoker, y = sex)))  p_(ggally_table(tips, mapping = aes(x = day, y = time)))  p_(ggally_table(tips, mapping = aes(x = smoker, y = sex, colour = smoker)))   # colour is kept only if equal to x or y p_(ggally_table(tips, mapping = aes(x = smoker, y = sex, colour = day)))   # diagonal version p_(ggally_tableDiag(tips, mapping = aes(x = smoker)))   # custom label size and color p_(ggally_table(tips, mapping = aes(x = smoker, y = sex), size = 16, color = \"red\"))   # display column proportions p_(ggally_table(   tips,   mapping = aes(x = day, y = sex, label = scales::percent(after_stat(col.prop))) ))   # draw table cells p_(ggally_table(   tips,   mapping = aes(x = smoker, y = sex),   geom_tile_args = list(colour = \"black\", fill = \"white\") ))   # Use standardized residuals to fill table cells p_(ggally_table(   as.data.frame(Titanic),   mapping = aes(     x = Class, y = Survived, weight = Freq,     fill = after_stat(std.resid),     label = scales::percent(after_stat(col.prop), accuracy = .1)   ),   geom_tile_args = list(colour = \"black\") ) +   scale_fill_steps2(breaks = c(-3, -2, 2, 3), show.limits = TRUE))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Text plot — ggally_text","title":"Text plot — ggally_text","text":"Plot text plot.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text plot — ggally_text","text":"","code":"ggally_text(   label,   mapping = ggplot2::aes(color = I(\"black\")),   xP = 0.5,   yP = 0.5,   xrange = c(0, 1),   yrange = c(0, 1),   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggally_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text plot — ggally_text","text":"label text want appear mapping aesthetics relate position (color) xP horizontal position percentage yP vertical position percentage xrange range data around .  nice plotting matrix yrange range data around .  nice plotting matrix ... arguments geom_text","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_text.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Text plot — ggally_text","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text plot — ggally_text","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  p_(ggally_text(\"Example 1\"))  p_(ggally_text(\"Example\\nTwo\", mapping = ggplot2::aes(size = 15), color = I(\"red\")))"},{"path":"https://ggobi.github.io/ggally/reference/ggally_trends.html","id":null,"dir":"Reference","previous_headings":"","what":"Trends line plot — ggally_trends","title":"Trends line plot — ggally_trends","text":"Plot trends using line plots. continuous y variables, plot evolution mean. binary y variables, plot evolution proportion.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_trends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trends line plot — ggally_trends","text":"","code":"ggally_trends(data, mapping, ..., include_zero = FALSE)"},{"path":"https://ggobi.github.io/ggally/reference/ggally_trends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trends line plot — ggally_trends","text":"data data set using mapping aesthetics used ... arguments passed ggplot2::geom_line() include_zero 0 included y-axis?","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_trends.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trends line plot — ggally_trends","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggally_trends.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trends line plot — ggally_trends","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) tips_f <- tips tips_f$day <- factor(tips$day, c(\"Thur\", \"Fri\", \"Sat\", \"Sun\"))  # Numeric variable p_(ggally_trends(tips_f, mapping = aes(x = day, y = total_bill)))  p_(ggally_trends(tips_f, mapping = aes(x = day, y = total_bill, colour = time)))   # Binary variable p_(ggally_trends(tips_f, mapping = aes(x = day, y = smoker)))  p_(ggally_trends(tips_f, mapping = aes(x = day, y = smoker, colour = sex)))   # Discrete variable with 3 or more categories p_(ggally_trends(tips_f, mapping = aes(x = smoker, y = day)))  p_(ggally_trends(tips_f, mapping = aes(x = smoker, y = day, color = sex)))   # Include zero on Y axis p_(ggally_trends(tips_f, mapping = aes(x = day, y = total_bill), include_zero = TRUE))  p_(ggally_trends(tips_f, mapping = aes(x = day, y = smoker), include_zero = TRUE))   # Change line size p_(ggally_trends(tips_f, mapping = aes(x = day, y = smoker, colour = sex), size = 3))   # Define weights with the appropriate aesthetic d <- as.data.frame(Titanic) p_(ggally_trends(   d,   mapping = aes(x = Class, y = Survived, weight = Freq, color = Sex),   include_zero = TRUE ))"},{"path":"https://ggobi.github.io/ggally/reference/ggbivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Display an outcome using several potential explanatory variables — ggbivariate","title":"Display an outcome using several potential explanatory variables — ggbivariate","text":"ggbivariate variant ggduo plotting outcome variable several potential explanatory variables.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggbivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display an outcome using several potential explanatory variables — ggbivariate","text":"","code":"ggbivariate(   data,   outcome,   explanatory = NULL,   mapping = NULL,   types = NULL,   ...,   rowbar_args = NULL )"},{"path":"https://ggobi.github.io/ggally/reference/ggbivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display an outcome using several potential explanatory variables — ggbivariate","text":"data dataset used, can categorical numerical variables outcome name position outcome variable (one variable ) explanatory names positions explanatory variables (NULL, take variables outcome) mapping additional aesthetic used, example indicate weights (see examples) types custom types plots use, see ggduo ... additional arguments passed ggduo (see examples) rowbar_args additional arguments passed ggally_rowbar (see examples)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggbivariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display an outcome using several potential explanatory variables — ggbivariate","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggbivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display an outcome using several potential explanatory variables — ggbivariate","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggbivariate(tips, \"smoker\", c(\"day\", \"time\", \"sex\", \"tip\")))   # Personalize plot title and legend title p_(ggbivariate(   tips, \"smoker\", c(\"day\", \"time\", \"sex\", \"tip\"),   title = \"Custom title\" ) +   labs(fill = \"Smoker ?\"))   # Customize fill colour scale p_(ggbivariate(tips, \"smoker\", c(\"day\", \"time\", \"sex\", \"tip\")) +   scale_fill_brewer(type = \"qual\"))   # Customize labels p_(ggbivariate(   tips, \"smoker\", c(\"day\", \"time\", \"sex\", \"tip\"),   rowbar_args = list(     colour = \"white\",     size = 4,     fontface = \"bold\",     label_format = scales::label_percent(accurary = 1)   ) ))   # Choose the sub-plot from which get legend p_(ggbivariate(tips, \"smoker\"))  p_(ggbivariate(tips, \"smoker\", legend = 3))   # Use mapping to indicate weights d <- as.data.frame(Titanic) p_(ggbivariate(d, \"Survived\", mapping = aes(weight = Freq)))   # outcome can be numerical p_(ggbivariate(tips, outcome = \"tip\", title = \"tip\"))"},{"path":"https://ggobi.github.io/ggally/reference/ggcoef.html","id":null,"dir":"Reference","previous_headings":"","what":"Model coefficients with broom and ggplot2 — ggcoef","title":"Model coefficients with broom and ggplot2 — ggcoef","text":"Plot coefficients model broom ggplot2. updated improved version, see ggcoef_model().","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggcoef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model coefficients with broom and ggplot2 — ggcoef","text":"","code":"ggcoef(   x,   mapping = aes(!!as.name(\"estimate\"), !!as.name(\"term\")),   conf.int = TRUE,   conf.level = 0.95,   exponentiate = FALSE,   exclude_intercept = FALSE,   vline = TRUE,   vline_intercept = \"auto\",   vline_color = \"gray50\",   vline_linetype = \"dotted\",   vline_size = 1,   errorbar_color = \"gray25\",   errorbar_height = 0,   errorbar_linetype = \"solid\",   errorbar_size = 0.5,   sort = c(\"none\", \"ascending\", \"descending\"),   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggcoef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model coefficients with broom and ggplot2 — ggcoef","text":"x model object tidied broom::tidy() data frame (see Details) mapping default aesthetic mapping conf.int display confidence intervals error bars? conf.level level confidence intervals (passed broom::tidy() x data frame) exponentiate TRUE, x-axis logarithmic (also passed broom::tidy() x data frame) exclude_intercept intercept excluded plot? vline print vertical line? vline_intercept xintercept vertical line. \"auto\" x = 0 (x = 1 exponentiate TRUE) vline_color color vertical line vline_linetype line type vertical line vline_size size vertical line errorbar_color color error bars errorbar_height height error bars errorbar_linetype line type error bars errorbar_size size error bars sort \"none\" (default) sort, \"ascending\" sort increasing coefficient value, \"descending\" sort decreasing coefficient value ... additional arguments sent ggplot2::geom_point()","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggcoef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model coefficients with broom and ggplot2 — ggcoef","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  library(broom) reg <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data = iris) p_(ggcoef(reg))  # \\donttest{ d <- as.data.frame(Titanic) reg2 <- glm(Survived ~ Sex + Age + Class, family = binomial, data = d, weights = d$Freq) ggcoef(reg2, exponentiate = TRUE)  ggcoef(   reg2,   exponentiate = TRUE, exclude_intercept = TRUE,   errorbar_height = .2, color = \"blue\", sort = \"ascending\" )  # }"},{"path":"https://ggobi.github.io/ggally/reference/ggcorr.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation matrix — ggcorr","title":"Correlation matrix — ggcorr","text":"Function making correlation matrix plot, using ggplot2. function directly inspired Tian Zheng Yu-Sung Su's corrplot function 'arm' package. Please visit https://github.com/briatte/ggcorr latest version ggcorr, see vignette https://briatte.github.io/ggcorr/ many examples use .","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggcorr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation matrix — ggcorr","text":"","code":"ggcorr(   data,   method = c(\"pairwise\", \"pearson\"),   cor_matrix = NULL,   nbreaks = NULL,   digits = 2,   name = \"\",   low = \"#3B9AB2\",   mid = \"#EEEEEE\",   high = \"#F21A00\",   midpoint = 0,   palette = NULL,   geom = \"tile\",   min_size = 2,   max_size = 6,   label = FALSE,   label_alpha = FALSE,   label_color = \"black\",   label_round = 1,   label_size = 4,   limits = c(-1, 1),   drop = is.null(limits) || identical(limits, FALSE),   layout.exp = 0,   legend.position = \"right\",   legend.size = 9,   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggcorr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation matrix — ggcorr","text":"data data frame matrix containing numeric (continuous) data. columns contain non-numeric data, dropped warning. method vector two character strings. first value gives method computing covariances presence missing values, must (abbreviation ) one \"everything\", \".obs\", \"complete.obs\", \"na..complete\" \"pairwise.complete.obs\". second value gives type correlation coefficient compute, must one \"pearson\", \"kendall\" \"spearman\". See cor details. Defaults c(\"pairwise\", \"pearson\"). cor_matrix named correlation matrix use calculations. Defaults correlation matrix data data supplied. nbreaks number breaks apply correlation coefficients, results categorical color scale. See 'Note'. Defaults NULL (breaks, continuous scaling). digits number digits show breaks correlation coefficients: see cut details. Defaults 2. name character string legend shows colors correlation coefficients. Defaults \"\" (legend name). low lower color gradient continuous scaling correlation coefficients. Defaults \"#3B9AB2\" (blue). mid midpoint color gradient continuous scaling correlation coefficients. Defaults \"#EEEEEE\" (light grey). high upper color gradient continuous scaling correlation coefficients. Defaults \"#F21A00\" (red). midpoint midpoint value continuous scaling correlation coefficients. Defaults 0. palette nbreaks used, ColorBrewer palette use instead colors specified low, mid high. Defaults NULL. geom geom object use. Accepts either \"tile\", \"circle\", \"text\" \"blank\". min_size geom set \"circle\", minimum size circles. Defaults 2. max_size geom set \"circle\", maximum size circles. Defaults 6. label whether add correlation coefficients plot. Defaults FALSE. label_alpha whether make correlation coefficients increasingly transparent come close 0. Also accepts numeric value 0 1, case level transparency set fixed value. Defaults FALSE (transparency). label_color color correlation coefficients. Defaults \"grey75\". label_round decimal rounding correlation coefficients. Defaults 1. label_size size correlation coefficients. Defaults 4. limits bounding color scaling correlations, set limits = NULL FALSE remove drop using nbreaks, whether drop unused breaks color scale. Defaults FALSE (recommended). layout.exp multiplier expand horizontal axis left variable names get clipped. Defaults 0 (expansion). legend.position put legend correlation coefficients: see theme details. Defaults \"bottom\". legend.size size legend title labels, points: see theme details. Defaults 9. ... arguments supplied geom_text diagonal labels.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggcorr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Correlation matrix — ggcorr","text":"Recommended values nbreaks argument 3 11, values 11 visually difficult separate supported diverging ColorBrewer palettes.","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggcorr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Correlation matrix — ggcorr","text":"Francois Briatte, contributions Amos B. Elberg Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggcorr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation matrix — ggcorr","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  # Basketball statistics provided by Nathan Yau at Flowing Data. dt <- read.csv(\"http://datasets.flowingdata.com/ppg2008.csv\")  # Default output. p_(ggcorr(dt[, -1]))   # Labeled output, with coefficient transparency. p_(ggcorr(dt[, -1],   label = TRUE,   label_alpha = TRUE ))   # Custom options. p_(ggcorr(   dt[, -1],   name = expression(rho),   geom = \"circle\",   max_size = 10,   min_size = 2,   size = 3,   hjust = 0.75,   nbreaks = 6,   angle = -45,   palette = \"PuOr\" # colorblind safe, photocopy-able ))   # Supply your own correlation matrix p_(ggcorr(   data = NULL,   cor_matrix = cor(dt[, -1], use = \"pairwise\") ))"},{"path":"https://ggobi.github.io/ggally/reference/ggduo.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 generalized pairs plot for two columns sets of data — ggduo","title":"ggplot2 generalized pairs plot for two columns sets of data — ggduo","text":"Make matrix plots given data set two different column sets","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggduo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 generalized pairs plot for two columns sets of data — ggduo","text":"","code":"ggduo(   data,   mapping = NULL,   columnsX = 1:ncol(data),   columnsY = 1:ncol(data),   title = NULL,   types = list(continuous = \"smooth_loess\", comboVertical = \"box_no_facet\",     comboHorizontal = \"facethist\", discrete = \"count\"),   axisLabels = c(\"show\", \"none\"),   columnLabelsX = colnames(data[columnsX]),   columnLabelsY = colnames(data[columnsY]),   labeller = \"label_value\",   switch = NULL,   xlab = NULL,   ylab = NULL,   showStrips = NULL,   legend = NULL,   cardinality_threshold = 15,   progress = NULL,   xProportions = NULL,   yProportions = NULL,   legends = deprecated() )"},{"path":"https://ggobi.github.io/ggally/reference/ggduo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 generalized pairs plot for two columns sets of data — ggduo","text":"data data set using.  Can numerical categorical data. mapping aesthetic mapping (besides x y).  See aes().  mapping numeric, columns set mapping value mapping set NULL. columnsX, columnsY columns used make plots.  Defaults columns. title, xlab, ylab title, x label, y label graph types see Details axisLabels either \"show\" display axisLabels \"none\" axis labels columnLabelsX, columnLabelsY label names displayed.  Defaults names columns used. labeller labeller facets. See labellers. Common values \"label_value\" (default) \"label_parsed\". switch switch parameter facet_grid. See ggplot2::facet_grid.  default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\" showStrips boolean determine plot's strips displayed. NULL default top right side plots . TRUE FALSE turn strips respectively. legend May two objects described default NULL value.  legend position can moved using ggplot2's theme element pm + theme(legend.position = \"bottom\") single numeric value provides location plot according display order. legend = 3 plot matrix 2 rows 5 columns displayed column return plot position c(1,2) object grab_legend() predetermined plot legend displayed directly cardinality_threshold maximum number levels allowed character / factor column.  Set value NULL check factor columns. Defaults 15 progress NULL (default) progress bar interactive sessions 15 plots, TRUE progress bar, FALSE progress bar, function accepts least plot matrix returns new progress::progress_bar.  See ggmatrix_progress. xProportions, yProportions Value change much area given plot. Either NULL (default), numeric value matching respective length, grid::unit object matching respective length \"auto\" automatic relative proportions based number levels categorical variables. legends","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggduo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggplot2 generalized pairs plot for two columns sets of data — ggduo","text":"types list may contain variables 'continuous', 'combo', 'discrete', 'na'. element list may function string.  string supplied, string supplied, must character string representing tail end ggally_NAME function. list current valid ggally_NAME functions visible dedicated vignette. continuous option used continuous X Y data. comboHorizontal option used either continuous X categorical Y data categorical X continuous Y data. comboVertical option used either continuous X categorical Y data categorical X continuous Y data. discrete option used categorical X Y data. na option used X data NA, Y data NA, either X Y data NA. 'blank' ever chosen option, ggduo produce empty plot. function supplied option, implement function api function(data, mapping, ...){#make ggplot2 plot}.  specific function needs parameters set, wrap(fn, param1 = val1, param2 = val2) function parameters.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggduo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 generalized pairs plot for two columns sets of data — ggduo","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(baseball)  # Keep players from 1990-1995 with at least one at bat # Add how many singles a player hit # (must do in two steps as X1b is used in calculations) dt <- transform(   subset(baseball, year >= 1990 & year <= 1995 & ab > 0),   X1b = h - X2b - X3b - hr ) # Add #  the player's batting average, #  the player's slugging percentage, #  and the player's on base percentage # Make factor a year, as each season is discrete dt <- transform(   dt,   batting_avg = h / ab,   slug = (X1b + 2 * X2b + 3 * X3b + 4 * hr) / ab,   on_base = (h + bb + hbp) / (ab + bb + hbp),   year = as.factor(year) )   pm <- ggduo(   dt,   c(\"year\", \"g\", \"ab\", \"lg\"),   c(\"batting_avg\", \"slug\", \"on_base\"),   mapping = ggplot2::aes(color = lg) ) # Prints, but #   there is severe over plotting in the continuous plots #   the labels could be better #   want to add more hitting information p_(pm)   # address overplotting issues and add a title pm <- ggduo(   dt,   c(\"year\", \"g\", \"ab\", \"lg\"),   c(\"batting_avg\", \"slug\", \"on_base\"),   columnLabelsX = c(\"year\", \"player game count\", \"player at bat count\", \"league\"),   columnLabelsY = c(\"batting avg\", \"slug %\", \"on base %\"),   title = \"Baseball Hitting Stats from 1990-1995\",   mapping = ggplot2::aes(color = lg),   types = list(     # change the shape and add some transparency to the points     continuous = wrap(\"smooth_loess\", alpha = 0.50, shape = \"+\")   ),   showStrips = FALSE )  p_(pm)   # Use \"auto\" to adapt width of the sub-plots pm <- ggduo(   dt,   c(\"year\", \"g\", \"ab\", \"lg\"),   c(\"batting_avg\", \"slug\", \"on_base\"),   mapping = ggplot2::aes(color = lg),   xProportions = \"auto\" )  p_(pm)   # Custom widths & heights of the sub-plots pm <- ggduo(   dt,   c(\"year\", \"g\", \"ab\", \"lg\"),   c(\"batting_avg\", \"slug\", \"on_base\"),   mapping = ggplot2::aes(color = lg),   xProportions = c(6, 4, 3, 2),   yProportions = c(1, 2, 1) )  p_(pm)   # Example derived from: ## R Data Analysis Examples | Canonical Correlation Analysis.  UCLA: Institute for Digital ##   Research and Education. ##   from http://www.stats.idre.ucla.edu/r/dae/canonical-correlation-analysis ##   (accessed May 22, 2017). # \"Example 1. A researcher has collected data on three psychological variables, four #  academic variables (standardized test scores) and gender for 600 college freshman. #  She is interested in how the set of psychological variables relates to the academic #  variables and gender. In particular, the researcher is interested in how many #  dimensions (canonical variables) are necessary to understand the association between #  the two sets of variables.\" data(psychademic) summary(psychademic) #>  locus_of_control    self_concept        motivation        #>  Min.   :-2.23000   Min.   :-2.620000   Length:600         #>  1st Qu.:-0.37250   1st Qu.:-0.300000   Class :character   #>  Median : 0.21000   Median : 0.030000   Mode  :character   #>  Mean   : 0.09653   Mean   : 0.004917                      #>  3rd Qu.: 0.51000   3rd Qu.: 0.440000                      #>  Max.   : 1.36000   Max.   : 1.190000                      #>       read          write            math          science      #>  Min.   :28.3   Min.   :25.50   Min.   :31.80   Min.   :26.00   #>  1st Qu.:44.2   1st Qu.:44.30   1st Qu.:44.50   1st Qu.:44.40   #>  Median :52.1   Median :54.10   Median :51.30   Median :52.60   #>  Mean   :51.9   Mean   :52.38   Mean   :51.85   Mean   :51.76   #>  3rd Qu.:60.1   3rd Qu.:59.90   3rd Qu.:58.38   3rd Qu.:58.65   #>  Max.   :76.0   Max.   :67.10   Max.   :75.50   Max.   :74.20   #>      sex            #>  Length:600         #>  Class :character   #>  Mode  :character   #>                     #>                     #>                      (psych_variables <- attr(psychademic, \"psychology\")) #> [1] \"locus_of_control\" \"self_concept\"     \"motivation\"       (academic_variables <- attr(psychademic, \"academic\")) #> [1] \"read\"    \"write\"   \"math\"    \"science\" \"sex\"      ## Within correlation p_(ggpairs(psychademic, columns = psych_variables)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  p_(ggpairs(psychademic, columns = academic_variables)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   ## Between correlation loess_with_cor <- function(data, mapping, ..., method = \"pearson\") {   x <- eval_data_col(data, mapping$x)   y <- eval_data_col(data, mapping$y)   cor <- cor(x, y, method = method)   ggally_smooth_loess(data, mapping, ...) +     ggplot2::geom_label(       data = data.frame(         x = min(x, na.rm = TRUE),         y = max(y, na.rm = TRUE),         lab = round(cor, digits = 3)       ),       mapping = ggplot2::aes(x = x, y = y, label = lab),       hjust = 0, vjust = 1,       size = 5, fontface = \"bold\",       inherit.aes = FALSE # do not inherit anything from the ...     ) } pm <- ggduo(   psychademic,   rev(psych_variables), academic_variables,   types = list(continuous = loess_with_cor),   showStrips = FALSE ) suppressWarnings(p_(pm)) # ignore warnings from loess #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   # add color according to sex pm <- ggduo(   psychademic,   mapping = ggplot2::aes(color = sex),   rev(psych_variables), academic_variables,   types = list(continuous = loess_with_cor),   showStrips = FALSE,   legend = c(5, 2) ) suppressWarnings(p_(pm)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.    # add color according to sex pm <- ggduo(   psychademic,   mapping = ggplot2::aes(color = motivation),   rev(psych_variables), academic_variables,   types = list(continuous = loess_with_cor),   showStrips = FALSE,   legend = c(5, 2) ) +   ggplot2::theme(legend.position = \"bottom\") suppressWarnings(p_(pm)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #  dt, #  c(\"year\", \"g\", \"ab\", \"lg\", \"lg\"), #  c(\"batting_avg\", \"slug\", \"on_base\", \"hit_type\"), #  columnLabelsX = c(\"year\", \"player game count\", \"player at bat count\", \"league\", \"\"), #  columnLabelsY = c(\"batting avg\", \"slug %\", \"on base %\", \"hit type\"), #  title = \"Baseball Hitting Stats from 1990-1995 (player strike in 1994)\", #  mapping = aes(color = year), #  types = list( #    continuous = wrap(\"smooth_loess\", alpha = 0.50, shape = \"+\"), #    comboHorizontal = wrap(display_hit_type_combo, binwidth = 15), #    discrete = wrap(display_hit_type_discrete, color = \"black\", size = 0.15) #  ), #  showStrips = FALSE ## make the 5th column blank, except for the legend #  australia_PISA2012, #  c(\"gender\", \"age\", \"homework\", \"possessions\"), #  c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\"), #  types = list( #    continuous = \"points\", #    combo = \"box\", #    discrete = \"ratio\" #  ) #  australia_PISA2012, #  c(\"gender\", \"age\", \"homework\", \"possessions\"), #  c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\"), #  mapping = ggplot2::aes(color = gender), #  types = list( #    continuous = wrap(\"smooth\", alpha = 0.25, method = \"loess\"), #    combo = \"box\", #    discrete = \"ratio\" #  )"},{"path":"https://ggobi.github.io/ggally/reference/ggfacet.html","id":null,"dir":"Reference","previous_headings":"","what":"Single ggplot2 plot matrix with facet_grid — ggfacet","title":"Single ggplot2 plot matrix with facet_grid — ggfacet","text":"Single ggplot2 plot matrix facet_grid","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggfacet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single ggplot2 plot matrix with facet_grid — ggfacet","text":"","code":"ggfacet(   data,   mapping = NULL,   columnsX = 1:ncol(data),   columnsY = 1:ncol(data),   fn = ggally_points,   ...,   columnLabelsX = names(data[columnsX]),   columnLabelsY = names(data[columnsY]),   xlab = NULL,   ylab = NULL,   title = NULL,   scales = \"free\" )"},{"path":"https://ggobi.github.io/ggally/reference/ggfacet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single ggplot2 plot matrix with facet_grid — ggfacet","text":"data data.frame contains columns displayed.  data melted passed function fn mapping aesthetic mapping (besides x y).  See aes() columnsX columns displayed plot matrix columnsY rows displayed plot matrix fn function executed. Similar ggpairs ggduo, function may either string identifier real function wrap understands. ... extra arguments passed directly fn columnLabelsX, columnLabelsY column row labels display plot matrix xlab, ylab, title plot matrix labels scales parameter supplied ggplot2::facet_grid. Default behavior \"free\"","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggfacet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single ggplot2 plot matrix with facet_grid — ggfacet","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive if (requireNamespace(\"chemometrics\", quietly = TRUE)) {   data(NIR, package = \"chemometrics\")   NIR_sub <- data.frame(NIR$yGlcEtOH, NIR$xNIR[, 1:3])   str(NIR_sub)   x_cols <- c(\"X1115.0\", \"X1120.0\", \"X1125.0\")   y_cols <- c(\"Glucose\", \"Ethanol\")    # using ggduo directly   p <- ggduo(NIR_sub, x_cols, y_cols, types = list(continuous = \"points\"))   p_(p)    # using ggfacet   p <- ggfacet(NIR_sub, x_cols, y_cols)   p_(p)    # add a smoother   p <- ggfacet(NIR_sub, x_cols, y_cols, fn = \"smooth_loess\")   p_(p)   # same output   p <- ggfacet(NIR_sub, x_cols, y_cols, fn = ggally_smooth_loess)   p_(p)    # Change scales to be the same in for every row and for every column   p <- ggfacet(NIR_sub, x_cols, y_cols, scales = \"fixed\")   p_(p) } #> 'data.frame':\t166 obs. of  5 variables: #>  $ Glucose: num  9.78 17.08 27.05 33.41 39.5 ... #>  $ Ethanol: num  40.3 39.1 37.9 37.3 36.4 ... #>  $ X1115.0: num  0.00319 0.00324 0.00317 0.00315 0.00315 ... #>  $ X1120.0: num  0.00401 0.00404 0.00398 0.00397 0.00397 ... #>  $ X1125.0: num  0.00458 0.0046 0.00457 0.00455 0.00456 ..."},{"path":"https://ggobi.github.io/ggally/reference/gglegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot only legend of plot function — gglegend","title":"Plot only legend of plot function — gglegend","text":"Plot legend plot function","code":""},{"path":"https://ggobi.github.io/ggally/reference/gglegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot only legend of plot function — gglegend","text":"","code":"gglegend(fn)"},{"path":"https://ggobi.github.io/ggally/reference/gglegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot only legend of plot function — gglegend","text":"fn value passed directly empty wrap call.  Please see ?wrap details.","code":""},{"path":"https://ggobi.github.io/ggally/reference/gglegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot only legend of plot function — gglegend","text":"function called arguments produce legend plotting function supplied.","code":""},{"path":"https://ggobi.github.io/ggally/reference/gglegend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot only legend of plot function — gglegend","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  # display regular plot p_(ggally_points(iris, ggplot2::aes(Sepal.Length, Sepal.Width, color = Species)))  # Make a function that will only print the legend points_legend <- gglegend(ggally_points) p_(points_legend(iris, ggplot2::aes(Sepal.Length, Sepal.Width, color = Species)))  # produce the sample legend plot, but supply a string that 'wrap' understands same_points_legend <- gglegend(\"points\") identical(   attr(attr(points_legend, \"fn\"), \"original_fn\"),   attr(attr(same_points_legend, \"fn\"), \"original_fn\") ) #> [1] TRUE  # Complicated examples custom_legend <- wrap(gglegend(\"points\"), size = 6) p_(custom_legend(iris, ggplot2::aes(Sepal.Length, Sepal.Width, color = Species)))   # Use within ggpairs pm <- ggpairs(   iris, 1:2,   mapping = ggplot2::aes(color = Species),   upper = list(continuous = gglegend(\"points\")) ) p_(pm)   # Place a legend in a specific location pm <- ggpairs(iris, 1:2, mapping = ggplot2::aes(color = Species)) # Make the legend pm[1, 2] <- points_legend(iris, ggplot2::aes(Sepal.Width, Sepal.Length, color = Species)) p_(pm)"},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 plot matrix — ggmatrix","title":"ggplot2 plot matrix — ggmatrix","text":"Make generic matrix ggplot2 plots.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 plot matrix — ggmatrix","text":"","code":"ggmatrix(   plots,   nrow,   ncol,   xAxisLabels = NULL,   yAxisLabels = NULL,   title = NULL,   xlab = NULL,   ylab = NULL,   byrow = TRUE,   showStrips = NULL,   showAxisPlotLabels = TRUE,   showXAxisPlotLabels = TRUE,   showYAxisPlotLabels = TRUE,   labeller = NULL,   switch = NULL,   xProportions = NULL,   yProportions = NULL,   progress = NULL,   data = NULL,   gg = NULL,   legend = NULL )"},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 plot matrix — ggmatrix","text":"plots list plots put matrix nrow, ncol number rows columns xAxisLabels, yAxisLabels strip titles x y axis respectively. Set NULL displayed title, xlab, ylab title, x label, y label graph. Set NULL displayed byrow boolean determines whether plots ordered row column showStrips boolean determine plot's strips displayed. NULL default top right side plots . TRUE FALSE turn strips respectively. showAxisPlotLabels, showXAxisPlotLabels, showYAxisPlotLabels booleans determine plots axis labels printed X (bottom) Y (left) part plot matrix. showAxisPlotLabels set, showXAxisPlotLabels showYAxisPlotLabels set given value. labeller labeller facets. See labellers. Common values \"label_value\" (default) \"label_parsed\". switch switch parameter facet_grid. See ggplot2::facet_grid.  default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\" xProportions, yProportions Value change much area given plot. Either NULL (default), numeric value matching respective length, grid::unit object matching respective length progress NULL (default) progress bar interactive sessions 15 plots, TRUE progress bar, FALSE progress bar, function accepts least plot matrix returns new progress::progress_bar.  See ggmatrix_progress. data data set using. data used place 'ggally_data' plot string evaluated print time gg ggplot2 theme objects applied every plot legend May two objects described default NULL value.  legend position can moved using ggplot2's theme element pm + theme(legend.position = \"bottom\") single numeric value provides location plot according display order. legend = 3 plot matrix 2 rows 5 columns displayed column return plot position c(1,2) object grab_legend() predetermined plot legend displayed directly","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix.html","id":"memory-usage","dir":"Reference","previous_headings":"","what":"Memory usage","title":"ggplot2 plot matrix — ggmatrix","text":"Now print.ggmatrix method uses large gtable object, rather print plot independently, memory usage may concern.  small tests, memory usage flutters around object.size(data) * 0.3 * length(plots).  , 80Mb random noise dataset 100 plots, 2.4 Gb memory needed print. 3.46 Mb diamonds dataset 100 plots, 100 Mb memory needed print.  benefits using ggplot2 format greatly outweigh price 20% increase memory usage prior ad-hoc print method.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggplot2 plot matrix — ggmatrix","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 plot matrix — ggmatrix","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  plotList <- list() for (i in 1:6) {   plotList[[i]] <- ggally_text(paste(\"Plot #\", i, sep = \"\")) } pm <- ggmatrix(   plotList,   2, 3,   c(\"A\", \"B\", \"C\"),   c(\"D\", \"E\"),   byrow = TRUE ) p_(pm)   pm <- ggmatrix(   plotList,   2, 3,   xAxisLabels = c(\"A\", \"B\", \"C\"),   yAxisLabels = NULL,   byrow = FALSE,   showXAxisPlotLabels = FALSE ) p_(pm)"},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_gtable.html","id":null,"dir":"Reference","previous_headings":"","what":"ggmatrix gtable object — ggmatrix_gtable","title":"ggmatrix gtable object — ggmatrix_gtable","text":"Specialized method print ggmatrix object.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_gtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggmatrix gtable object — ggmatrix_gtable","text":"","code":"ggmatrix_gtable(   pm,   ...,   progress = NULL,   progress_format = formals(ggmatrix_progress)$format )"},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_gtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggmatrix gtable object — ggmatrix_gtable","text":"pm ggmatrix object plotted ... ignored progress, progress_format Please use 'progress' parameter ggmatrix-like function.  See ggmatrix_progress examples.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_gtable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggmatrix gtable object — ggmatrix_gtable","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_gtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggmatrix gtable object — ggmatrix_gtable","text":"","code":"data(tips) pm <- ggpairs(tips, c(1, 3, 2), mapping = ggplot2::aes(color = sex)) ggmatrix_gtable(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> TableGrob (21 x 18) \"layout\": 40 grobs #>     z         cells             name #> 1   0 ( 1-21, 1-18)       background #> 2   1 (10-10, 7- 7)        panel-1-1 #> 3   1 (12-12, 7- 7)        panel-2-1 #> 4   1 (14-14, 7- 7)        panel-3-1 #> 5   1 (10-10, 9- 9)        panel-1-2 #> 6   1 (12-12, 9- 9)        panel-2-2 #> 7   1 (14-14, 9- 9)        panel-3-2 #> 8   1 (10-10,11-11)        panel-1-3 #> 9   1 (12-12,11-11)        panel-2-3 #> 10  1 (14-14,11-11)        panel-3-3 #> 11  3 ( 8- 8, 7- 7)         axis-t-1 #> 12  3 ( 8- 8, 9- 9)         axis-t-2 #> 13  3 ( 8- 8,11-11)         axis-t-3 #> 14  3 (15-15, 7- 7)         axis-b-1 #> 15  3 (15-15, 9- 9)         axis-b-2 #> 16  3 (15-15,11-11)         axis-b-3 #> 17  3 (10-10, 6- 6)         axis-l-1 #> 18  3 (12-12, 6- 6)         axis-l-2 #> 19  3 (14-14, 6- 6)         axis-l-3 #> 20  3 (10-10,13-13)         axis-r-1 #> 21  3 (12-12,13-13)         axis-r-2 #> 22  3 (14-14,13-13)         axis-r-3 #> 23  2 ( 9- 9, 7- 7)        strip-t-1 #> 24  2 ( 9- 9, 9- 9)        strip-t-2 #> 25  2 ( 9- 9,11-11)        strip-t-3 #> 26  2 (10-10,12-12)        strip-r-1 #> 27  2 (12-12,12-12)        strip-r-2 #> 28  2 (14-14,12-12)        strip-r-3 #> 29  4 ( 7- 7, 7-11)           xlab-t #> 30  5 (16-16, 7-11)           xlab-b #> 31  6 (10-14, 5- 5)           ylab-l #> 32  7 (10-14,14-14)           ylab-r #> 33  8 (10-14,16-16)  guide-box-right #> 34  9 (10-14, 3- 3)   guide-box-left #> 35 10 (18-18, 7-11) guide-box-bottom #> 36 11 ( 5- 5, 7-11)    guide-box-top #> 37 12 (10-14, 7-11) guide-box-inside #> 38 13 ( 4- 4, 7-11)         subtitle #> 39 14 ( 3- 3, 7-11)            title #> 40 15 (19-19, 7-11)          caption #>                                       grob #> 1        rect[plot.background..rect.38495] #> 2                           gtable[layout] #> 3                           gtable[layout] #> 4                           gtable[layout] #> 5                           gtable[layout] #> 6                           gtable[layout] #> 7                           gtable[layout] #> 8                           gtable[layout] #> 9                           gtable[layout] #> 10                          gtable[layout] #> 11                          zeroGrob[NULL] #> 12                          zeroGrob[NULL] #> 13                          zeroGrob[NULL] #> 14                          gtable[layout] #> 15                          gtable[layout] #> 16                          gtable[layout] #> 17                          gtable[layout] #> 18                          gtable[layout] #> 19                          gtable[layout] #> 20                          zeroGrob[NULL] #> 21                          zeroGrob[NULL] #> 22                          zeroGrob[NULL] #> 23                           gtable[strip] #> 24                           gtable[strip] #> 25                           gtable[strip] #> 26                           gtable[strip] #> 27                           gtable[strip] #> 28                           gtable[strip] #> 29                          zeroGrob[NULL] #> 30                          zeroGrob[NULL] #> 31                          zeroGrob[NULL] #> 32                          zeroGrob[NULL] #> 33                          zeroGrob[NULL] #> 34                          zeroGrob[NULL] #> 35                          zeroGrob[NULL] #> 36                          zeroGrob[NULL] #> 37                          zeroGrob[NULL] #> 38 zeroGrob[plot.subtitle..zeroGrob.38492] #> 39    zeroGrob[plot.title..zeroGrob.38491] #> 40  zeroGrob[plot.caption..zeroGrob.38493]"},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggmatrix plot locations — ggmatrix_location","text":"","code":"ggmatrix_location(pm, location = NULL, rows = NULL, cols = NULL)"},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggmatrix plot locations — ggmatrix_location","text":"pm ggmatrix plot object location \"\", TRUE row col combinations \"none\" row column combinations \"upper\" Locations column value higher row value \"lower\" Locations row value higher column value \"diag\" Locations column value equal row value matrix data.frame matrix values converted data.frames. data.frame exact column names c(\"row\", \"col\") data.frame number rows columns matching plot matrix object provided.  cell tested \"truthy\" value determine location kept. rows numeric vector rows used. used  cols location NULL cols numeric vector cols used. used rows location NULL","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggmatrix plot locations — ggmatrix_location","text":"Data frame columns c(\"row\", \"col\") containing locations plot matrix","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggmatrix plot locations — ggmatrix_location","text":"Convert many types location values consistent data.frame row col values.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggmatrix plot locations — ggmatrix_location","text":"","code":"pm <- ggpairs(tips, 1:3)  # All locations ggmatrix_location(pm, location = \"all\") #>   row col #> 1   1   1 #> 2   2   1 #> 3   3   1 #> 4   1   2 #> 5   2   2 #> 6   3   2 #> 7   1   3 #> 8   2   3 #> 9   3   3 ggmatrix_location(pm, location = TRUE) #>   row col #> 1   1   1 #> 2   2   1 #> 3   3   1 #> 4   1   2 #> 5   2   2 #> 6   3   2 #> 7   1   3 #> 8   2   3 #> 9   3   3  # No locations ggmatrix_location(pm, location = \"none\") #> [1] row col #> <0 rows> (or 0-length row.names)  # \"upper\" triangle locations ggmatrix_location(pm, location = \"upper\") #>   row col #> 4   1   2 #> 7   1   3 #> 8   2   3  # \"lower\" triangle locations ggmatrix_location(pm, location = \"lower\") #>   row col #> 2   2   1 #> 3   3   1 #> 6   3   2  # \"diag\" locations ggmatrix_location(pm, location = \"diag\") #>   row col #> 1   1   1 #> 5   2   2 #> 9   3   3  # specific rows ggmatrix_location(pm, rows = 2) #>   row col #> 1   2   1 #> 2   2   2 #> 3   2   3  # specific columns ggmatrix_location(pm, cols = 2) #>   row col #> 1   1   2 #> 2   2   2 #> 3   3   2  # row and column combinations ggmatrix_location(pm, rows = c(1, 2), cols = c(1, 3)) #>   row col #> 1   1   1 #> 2   2   1 #> 3   1   3 #> 4   2   3  # matrix locations mat <- matrix(TRUE, ncol = 3, nrow = 3) mat[1, 1] <- FALSE locs <- ggmatrix_location(pm, location = mat) ## does not contain the 1, 1 cell locs #>   row col #> 1   1   2 #> 2   1   3 #> 3   2   1 #> 4   2   2 #> 5   2   3 #> 6   3   1 #> 7   3   2 #> 8   3   3  # Use the output of a prior ggmatrix_location ggmatrix_location(pm, location = locs) #>   row col #> 1   1   2 #> 2   1   3 #> 3   2   1 #> 4   2   2 #> 5   2   3 #> 6   3   1 #> 7   3   2 #> 8   3   3"},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"ggmatrix default progress bar — ggmatrix_progress","title":"ggmatrix default progress bar — ggmatrix_progress","text":"ggmatrix default progress bar","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggmatrix default progress bar — ggmatrix_progress","text":"","code":"ggmatrix_progress(   format = \" plot: [:plot_i, :plot_j] [:bar]:percent est::eta \",   clear = TRUE,   show_after = 0,   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggmatrix default progress bar — ggmatrix_progress","text":"format, clear, show_after, ... parameters supplied directly progress::progress_bar$new()","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggmatrix default progress bar — ggmatrix_progress","text":"function accepts plot matrix first argument ... future expansion. Internally, plot matrix used determine total number plots progress bar.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggmatrix_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggmatrix default progress bar — ggmatrix_progress","text":"","code":"p_ <- GGally::print_if_interactive  pm <- ggpairs(iris, 1:2, progress = ggmatrix_progress()) p_(pm)   # does not clear after finishing pm <- ggpairs(iris, 1:2, progress = ggmatrix_progress(clear = FALSE)) p_(pm)"},{"path":"https://ggobi.github.io/ggally/reference/ggnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Network plot — ggnet","title":"Network plot — ggnet","text":"Function plotting network objects using ggplot2, now replaced ggnet2 function, provides additional control plotting parameters. Please visit https://github.com/briatte/ggnet latest version ggnet2, https://briatte.github.io/ggnet/ vignette contains many examples explanations.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network plot — ggnet","text":"","code":"ggnet(   net,   mode = \"fruchtermanreingold\",   layout.par = NULL,   layout.exp = 0,   size = 9,   alpha = 1,   weight = \"none\",   weight.legend = NA,   weight.method = weight,   weight.min = NA,   weight.max = NA,   weight.cut = FALSE,   group = NULL,   group.legend = NA,   node.group = group,   node.color = NULL,   node.alpha = alpha,   segment.alpha = alpha,   segment.color = \"grey50\",   segment.label = NULL,   segment.size = 0.25,   arrow.size = 0,   arrow.gap = 0,   arrow.type = \"closed\",   label = FALSE,   label.nodes = label,   label.size = size/2,   label.trim = FALSE,   legend.size = 9,   legend.position = \"right\",   names = deprecated(),   quantize.weights = deprecated(),   subset.threshold = deprecated(),   top8.nodes = deprecated(),   trim.labels = deprecated(),   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network plot — ggnet","text":"net object class network, object can coerced class, adjacency incidence matrix, edge list: see edgeset.constructors network details. object class igraph intergraph package installed, used convert object: see asNetwork details. mode placement method provided sna package: see gplot.layout details. Also accepts names two numeric vertex attributes net, matrix numeric coordinates, case first two columns matrix used. Defaults Fruchterman-Reingold force-directed algorithm. layout.par options passed placement method, listed gplot.layout. Defaults NULL. layout.exp multiplier expand horizontal axis node labels get clipped: see expand_range details. Defaults 0 (expansion). size size network nodes. nodes weighted, area proportionally scaled size set size. Defaults 9. alpha level transparency nodes, vertices arrows. Defaults 1. weight weighting method nodes, might vertex attribute vector size values. Also accepts \"indegree\", \"outdegree\", \"degree\" \"freeman\" size nodes unweighted degree centrality (\"degree\" \"freeman\" equivalent): see degree details. node weights must positive. Defaults \"none\" (weighting). weight.legend name assign legend created weight. Defaults NA (name). weight.method see weight weight.min whether subset network nodes minimum size, based values weight. Defaults NA (preserves nodes). weight.max whether subset network nodes maximum size, based values weight. Defaults NA (preserves nodes). weight.cut whether cut size nodes certain number quantiles. Accepts TRUE, tries cut sizes quartiles, positive numeric value, tries cut sizes many quantiles. size nodes contain specified number distinct quantiles, largest possible number used. See quantile cut details. Defaults FALSE (nothing). group groups nodes, either vector values vertex attribute. set mode bipartite network, nodes grouped \"actor\" belong primary mode \"event\" belong secondary mode. group.legend name assign legend created group. node.group see group node.color vector character strings color nodes , holding many colors levels node.group. Defaults NULL, assign grayscale colors group. node.alpha transparency nodes. Inherits alpha. segment.alpha level transparency edges. Defaults alpha, defaults 1. segment.color color edges, color value, vector color values, edge attribute containing color values. Defaults \"grey50\". segment.label labels plot middle edges, single value, vector values, edge attribute. Defaults NULL (edge labels). segment.size size edges, points, single numeric value, vector values, edge attribute. Defaults 0.25. arrow.size size arrows directed network edges, points. See arrow details. Defaults 0 (arrows). arrow.gap setting aimed improving display edge arrows plotting slightly shorter edges. Accepts value 0 1, value 0.05 generally achieve good results size nodes reasonably small. Defaults 0 (shortening). arrow.type type arrows directed network edges. See arrow details. Defaults \"closed\". label whether label nodes. set TRUE, nodes labeled vertex names. set vector contains many elements nodes net, nodes labeled . set vector values, nodes labeled vertex name matches one values. Defaults FALSE (labels). label.nodes see label label.size size node labels, points, numeric value, vector numeric values, vertex attribute containing numeric values. Defaults size / 2 (half maximum node size), defaults 6. label.trim whether apply trimming node labels. Accepts function can process character vector, strictly positive numeric value, case labels trimmed fixed-length substring length: see substr details. Defaults FALSE (nothing). legend.size size legend symbols text, points. Defaults 9. legend.position location plot legend(s). Accepts legend.position values supported theme. Defaults \"right\". names see group.legend size.legend quantize.weights see weight.cut subset.threshold see weight.min top8.nodes functionality experimental removed entirely ggnet trim.labels see label.trim ... arguments passed geom_text object sets node labels: see geom_text details.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network plot — ggnet","text":"degree centrality measures can produced weight argument take directedness network account, unweighted. compute weighted network measures, see tnet package Tore Opsahl (help(\"tnet\", package = \"tnet\")).","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggnet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Network plot — ggnet","text":"Moritz Marbach Francois Briatte, help Heike Hofmann, Pedro Jordano Ming-Yu Liu","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network plot — ggnet","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  library(network) #>  #> ‘network’ 1.19.0 (2024-12-08), part of the Statnet Project #> * ‘news(package=\"network\")’ for changes since last version #> * ‘citation(\"network\")’ for citation information #> * ‘https://statnet.org’ for help, support, and other information #>  #> Attaching package: ‘network’ #> The following object is masked from ‘package:Hmisc’: #>  #>     is.discrete  # random adjacency matrix x           <- 10 ndyads      <- x * (x - 1) density     <- x / ndyads m           <- matrix(0, nrow = x, ncol = x) dimnames(m) <- list(letters[1:x], letters[1:x]) m[row(m) != col(m)] <- runif(ndyads) < density m #>   a b c d e f g h i j #> a 0 0 0 0 0 0 0 0 0 0 #> b 0 0 0 1 0 0 0 0 0 0 #> c 0 0 0 0 0 0 0 0 0 0 #> d 0 1 1 0 1 0 0 0 0 0 #> e 0 0 0 0 0 0 0 0 0 0 #> f 0 0 0 0 1 0 0 0 0 0 #> g 0 0 0 0 0 0 0 0 0 0 #> h 1 0 0 0 0 0 0 0 1 0 #> i 0 0 1 0 1 0 0 0 0 0 #> j 0 1 0 0 1 0 0 0 0 0  # random undirected network n <- network::network(m, directed = FALSE) n #>  Network attributes: #>   vertices = 10  #>   directed = FALSE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   total edges= 10  #>     missing edges= 0  #>     non-missing edges= 10  #>  #>  Vertex attribute names:  #>     vertex.names  #>  #> No edge attributes  ggnet(n, label = TRUE, alpha = 1, color = \"white\", segment.color = \"black\") #> Warning: `ggnet()` was deprecated in GGally 2.2.2. #> ℹ Please use `ggnet2()` instead.   # random groups g <- sample(letters[1:3], 10, replace = TRUE) g #>  [1] \"c\" \"b\" \"b\" \"a\" \"a\" \"a\" \"c\" \"a\" \"c\" \"c\"  # color palette p <- c(\"a\" = \"steelblue\", \"b\" = \"forestgreen\", \"c\" = \"tomato\")  p_(ggnet(n, node.group = g, node.color = p, label = TRUE, color = \"white\"))   # edge arrows on a directed network p_(ggnet(network(m, directed = TRUE), arrow.gap = 0.05, arrow.size = 10)) #> Warning: Removed 1 row containing missing values or values outside the scale #> range (`geom_segment()`). #> Warning: Removed 1 row containing missing values or values outside the scale #> range (`geom_segment()`)."},{"path":"https://ggobi.github.io/ggally/reference/ggnet2.html","id":null,"dir":"Reference","previous_headings":"","what":"Network plot — ggnet2","title":"Network plot — ggnet2","text":"Function plotting network objects using ggplot2, additional control graphical parameters supported ggnet function. Please visit https://github.com/briatte/ggnet latest version ggnet2, https://briatte.github.io/ggnet/ vignette contains many examples explanations.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnet2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network plot — ggnet2","text":"","code":"ggnet2(   net,   mode = \"fruchtermanreingold\",   layout.par = NULL,   layout.exp = 0,   alpha = 1,   color = \"grey75\",   shape = 19,   size = 9,   max_size = 9,   na.rm = NA,   palette = NULL,   alpha.palette = NULL,   alpha.legend = NA,   color.palette = palette,   color.legend = NA,   shape.palette = NULL,   shape.legend = NA,   size.palette = NULL,   size.legend = NA,   size.zero = FALSE,   size.cut = FALSE,   size.min = NA,   size.max = NA,   label = FALSE,   label.alpha = 1,   label.color = \"black\",   label.size = max_size/2,   label.trim = FALSE,   node.alpha = alpha,   node.color = color,   node.label = label,   node.shape = shape,   node.size = size,   edge.alpha = 1,   edge.color = \"grey50\",   edge.lty = \"solid\",   edge.size = 0.25,   edge.label = NULL,   edge.label.alpha = 1,   edge.label.color = label.color,   edge.label.fill = \"white\",   edge.label.size = max_size/2,   arrow.size = 0,   arrow.gap = 0,   arrow.type = \"closed\",   legend.size = 9,   legend.position = \"right\",   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggnet2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network plot — ggnet2","text":"net object class network, object can coerced class, adjacency incidence matrix, edge list: see edgeset.constructors network details. object class igraph intergraph package installed, used convert object: see asNetwork details. mode placement method provided sna package: see gplot.layout details. Also accepts names two numeric vertex attributes net, matrix numeric coordinates, case first two columns matrix used. Defaults Fruchterman-Reingold force-directed algorithm. layout.par options passed placement method, listed gplot.layout. Defaults NULL. layout.exp multiplier expand horizontal axis node labels get clipped: see expand_range details. Defaults 0 (expansion). alpha level transparency edges nodes, might single value, vertex attribute, vector values. Also accepts \"mode\" bipartite networks (see 'Details'). Defaults 1 (transparency). color color nodes, might single value, vertex attribute, vector values. Also accepts \"mode\" bipartite networks (see 'Details'). Defaults grey75. shape shape nodes, might single value, vertex attribute, vector values. Also accepts \"mode\" bipartite networks (see 'Details'). Defaults 19 (solid circle). size size nodes, points, might single value, vertex attribute, vector values. Also accepts \"indegree\", \"outdegree\", \"degree\" \"freeman\" size nodes unweighted degree centrality (\"degree\" \"freeman\" equivalent): see degree details. node sizes must strictly positive. Also accepts \"mode\" bipartite networks (see 'Details'). Defaults 9. max_size maximum size node size produces nodes different sizes, points. Defaults 9. na.rm whether subset network nodes missing given vertex attribute. set vertex attribute net, nodes attribute NA removed. Defaults NA (nothing). palette palette color nodes, color color value vector color values. Accepts named vectors color values, RColorBrewer installed, ColorBrewer palette name: see RColorBrewer::brewer.pal() https://colorbrewer2.org/ details. Defaults NULL, create array grayscale color values color color value vector color values. alpha.palette palette control transparency levels nodes set alpha levels numeric values. Defaults NULL, create array alpha transparency values alpha numeric value vector numeric values. alpha.legend name assign legend created alpha levels numeric values. Defaults NA (name). color.palette see palette color.legend name assign legend created palette. Defaults NA (name). shape.palette palette control shapes nodes set shape shapes numeric values. Defaults NULL, create array shape values shape numeric value vector numeric values. shape.legend name assign legend created shape levels numeric values. Defaults NA (name). size.palette palette control sizes nodes set size sizes numeric values. size.legend name assign legend created size. Defaults NA (name). size.zero whether accept zero-sized nodes based value(s) size. Defaults FALSE, ensures zero-sized nodes still shown plot size legend. size.cut whether cut size nodes certain number quantiles. Accepts TRUE, tries cut sizes quartiles, positive numeric value, tries cut sizes many quantiles. size nodes contain specified number distinct quantiles, largest possible number used. See quantile cut details. Defaults FALSE (nothing). size.min whether subset network nodes minimum size, based values size. Defaults NA (preserves nodes). size.max whether subset network nodes maximum size, based values size. Defaults NA (preserves nodes). label whether label nodes. set TRUE, nodes labeled vertex names. set vector contains many elements nodes net, nodes labeled . set vector values, nodes labeled vertex name matches one values. Defaults FALSE (labels). label.alpha level transparency node labels, numeric value, vector numeric values, vertex attribute containing numeric values. Defaults 1 (transparency). label.color color node labels, color value, vector color values, vertex attribute containing color values. Defaults \"black\". label.size size node labels, points, numeric value, vector numeric values, vertex attribute containing numeric values. Defaults max_size / 2 (half maximum node size), defaults 4.5. label.trim whether apply trimming node labels. Accepts function can process character vector, strictly positive numeric value, case labels trimmed fixed-length substring length: see substr details. Defaults FALSE (nothing). node.alpha see alpha node.color see color node.label see label node.shape see shape node.size see size edge.alpha level transparency edges. Defaults value alpha, defaults 1. edge.color color edges, color value, vector color values, edge attribute containing color values. Defaults \"grey50\". edge.lty linetype edges, linetype value, vector linetype values, edge attribute containing linetype values. Defaults \"solid\". edge.size size edges, points, numeric value, vector numeric values, edge attribute containing numeric values. edge sizes must strictly positive. Defaults 0.25. edge.label labels plot middle edges, single value, vector values, edge attribute. Defaults NULL (edge labels). edge.label.alpha level transparency edge labels, numeric value, vector numeric values, edge attribute containing numeric values. Defaults 1 (transparency). edge.label.color color edge labels, color value, vector color values, edge attribute containing color values. Defaults label.color, defaults \"black\". edge.label.fill background color edge labels. Defaults \"white\". edge.label.size size edge labels, points, numeric value, vector numeric values, edge attribute containing numeric values. edge label sizes must strictly positive. Defaults max_size / 2 (half maximum node size), defaults 4.5. arrow.size size arrows directed network edges, points. See arrow details. Defaults 0 (arrows). arrow.gap setting aimed improving display edge arrows plotting slightly shorter edges. Accepts value 0 1, value 0.05 generally achieve good results size nodes reasonably small. Defaults 0 (shortening). arrow.type type arrows directed network edges. See arrow details. Defaults \"closed\". legend.size size legend symbols text, points. Defaults 9. legend.position location plot legend(s). Accepts legend.position values supported theme. Defaults \"right\". ... arguments passed geom_text object sets node labels: see geom_text details.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnet2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network plot — ggnet2","text":"degree centrality measures can produced size argument take directedness network account, unweighted. compute weighted network measures, see tnet package Tore Opsahl (help(\"tnet\", package = \"tnet\")). nodes bipartite networks can mapped mode passing \"mode\" argument alpha, color, shape size, case nodes primary mode mapped \"actor\", nodes secondary mode mapped \"event\".","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggnet2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Network plot — ggnet2","text":"Moritz Marbach Francois Briatte, help Heike Hofmann, Pedro Jordano Ming-Yu Liu","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnet2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network plot — ggnet2","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  library(network)  # random adjacency matrix x           <- 10 ndyads      <- x * (x - 1) density     <- x / ndyads m           <- matrix(0, nrow = x, ncol = x) dimnames(m) <- list(letters[1:x], letters[1:x]) m[row(m) != col(m)] <- runif(ndyads) < density m #>   a b c d e f g h i j #> a 0 0 0 0 0 0 0 0 1 0 #> b 0 0 1 0 0 0 1 0 1 0 #> c 0 0 0 0 0 0 0 0 0 0 #> d 0 0 0 0 0 0 0 0 0 0 #> e 0 1 0 1 0 0 0 0 0 1 #> f 0 1 0 0 0 0 0 0 0 0 #> g 0 1 0 0 0 0 0 0 0 0 #> h 0 0 1 0 1 0 0 0 0 0 #> i 0 0 0 0 0 0 0 0 0 0 #> j 0 0 0 0 0 0 1 0 0 0  # random undirected network n <- network::network(m, directed = FALSE) n #>  Network attributes: #>   vertices = 10  #>   directed = FALSE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   total edges= 11  #>     missing edges= 0  #>     non-missing edges= 11  #>  #>  Vertex attribute names:  #>     vertex.names  #>  #> No edge attributes  p_(ggnet2(n, label = TRUE))  p_(ggnet2(n, label = TRUE, shape = 15))  p_(ggnet2(n, label = TRUE, shape = 15, color = \"black\", label.color = \"white\"))   # add vertex attribute x = network.vertex.names(n) x = ifelse(x %in% c(\"a\", \"e\", \"i\"), \"vowel\", \"consonant\") n %v% \"phono\" = x  p_(ggnet2(n, color = \"phono\"))  p_(ggnet2(n, color = \"phono\", palette = c(\"vowel\" = \"gold\", \"consonant\" = \"grey\")))  p_(ggnet2(n, shape = \"phono\", color = \"phono\")) #> Warning: Duplicated `override.aes` is ignored.   if (require(RColorBrewer)) {    # random groups   n %v% \"group\" <- sample(LETTERS[1:3], 10, replace = TRUE)    p_(ggnet2(n, color = \"group\", palette = \"Set2\"))  } #> Loading required package: RColorBrewer   # random weights n %e% \"weight\" <- sample(1:3, network.edgecount(n), replace = TRUE) p_(ggnet2(n, edge.size = \"weight\", edge.label = \"weight\"))   # edge arrows on a directed network p_(ggnet2(network(m, directed = TRUE), arrow.gap = 0.05, arrow.size = 10))   # Padgett's Florentine wedding data data(flo, package = \"network\") flo #>              Acciaiuoli Albizzi Barbadori Bischeri Castellani Ginori #> Acciaiuoli            0       0         0        0          0      0 #> Albizzi               0       0         0        0          0      1 #> Barbadori             0       0         0        0          1      0 #> Bischeri              0       0         0        0          0      0 #> Castellani            0       0         1        0          0      0 #> Ginori                0       1         0        0          0      0 #> Guadagni              0       1         0        1          0      0 #> Lamberteschi          0       0         0        0          0      0 #> Medici                1       1         1        0          0      0 #> Pazzi                 0       0         0        0          0      0 #> Peruzzi               0       0         0        1          1      0 #> Pucci                 0       0         0        0          0      0 #> Ridolfi               0       0         0        0          0      0 #> Salviati              0       0         0        0          0      0 #> Strozzi               0       0         0        1          1      0 #> Tornabuoni            0       0         0        0          0      0 #>              Guadagni Lamberteschi Medici Pazzi Peruzzi Pucci Ridolfi #> Acciaiuoli          0            0      1     0       0     0       0 #> Albizzi             1            0      1     0       0     0       0 #> Barbadori           0            0      1     0       0     0       0 #> Bischeri            1            0      0     0       1     0       0 #> Castellani          0            0      0     0       1     0       0 #> Ginori              0            0      0     0       0     0       0 #> Guadagni            0            1      0     0       0     0       0 #> Lamberteschi        1            0      0     0       0     0       0 #> Medici              0            0      0     0       0     0       1 #> Pazzi               0            0      0     0       0     0       0 #> Peruzzi             0            0      0     0       0     0       0 #> Pucci               0            0      0     0       0     0       0 #> Ridolfi             0            0      1     0       0     0       0 #> Salviati            0            0      1     1       0     0       0 #> Strozzi             0            0      0     0       1     0       1 #> Tornabuoni          1            0      1     0       0     0       1 #>              Salviati Strozzi Tornabuoni #> Acciaiuoli          0       0          0 #> Albizzi             0       0          0 #> Barbadori           0       0          0 #> Bischeri            0       1          0 #> Castellani          0       1          0 #> Ginori              0       0          0 #> Guadagni            0       0          1 #> Lamberteschi        0       0          0 #> Medici              1       0          1 #> Pazzi               1       0          0 #> Peruzzi             0       1          0 #> Pucci               0       0          0 #> Ridolfi             0       1          1 #> Salviati            0       0          0 #> Strozzi             0       0          0 #> Tornabuoni          0       0          0  p_(ggnet2(flo, label = TRUE))  p_(ggnet2(flo, label = TRUE, label.trim = 4, vjust = -1, size = 3, color = 1))  p_(ggnet2(flo, label = TRUE, size = 12, color = \"white\"))"},{"path":"https://ggobi.github.io/ggally/reference/ggnetworkmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Network plot map overlay — ggnetworkmap","title":"Network plot map overlay — ggnetworkmap","text":"Plots network ggplot2 suitable overlay ggmap plot ggplot2","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnetworkmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network plot map overlay — ggnetworkmap","text":"","code":"ggnetworkmap(   gg,   net,   size = 3,   alpha = 0.75,   weight,   node.group,   node.color = NULL,   node.alpha = NULL,   ring.group,   segment.alpha = NULL,   segment.color = \"grey\",   great.circles = FALSE,   segment.size = 0.25,   arrow.size = 0,   label.nodes = FALSE,   label.size = size/2,   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggnetworkmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network plot map overlay — ggnetworkmap","text":"gg object class ggplot. net object class network, object can coerced class, adjacency incidence matrix, edge list: see edgeset.constructors network details. object class igraph intergraph package installed, used convert object: see asNetwork details. size size network nodes. Defaults 3. nodes weighted, area proportionally scaled size set size. alpha level transparency nodes, vertices arrows. Defaults 0.75. weight present, unquoted name vertex attribute data.  Otherwise nodes unweighted. node.group NULL, default, unquoted name vertex attribute used determine color node. node.color node.group null, character string specifying color. node.alpha transparency nodes. Inherits alpha. ring.group NULL, default, unquoted name vertex attribute used determine color node border. segment.alpha transparency vertex links. Inherits alpha segment.color color vertex links. Defaults \"grey\". great.circles whether draw edges great circles using geosphere package.  Defaults FALSE segment.size size vertex links, vector values single value. Defaults 0.25. arrow.size size vertex arrows directed network plotting, centimeters. Defaults 0. label.nodes label nodes vertex names attribute. set TRUE, nodes labelled. Also accepts vector character strings match vertex names. label.size size labels.  Defaults size / 2. ... arguments supplied geom_text node labels. Arguments pertaining title items can achieved ggplot2 methods.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnetworkmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network plot map overlay — ggnetworkmap","text":"descendant original ggnet function.  ggnet added innovation plotting network geographically. However, ggnet needed first object ggplot chain.  ggnetworkmap .  passed ggplot object first argument, output ggmap, ggnetworkmap plot top chart, looking vertex attributes lon lat coordinates. Otherwise, ggnetworkmap generate coordinates using Fruchterman-Reingold algorithm. function plotting graphs generated network igraph flexible elegant manner permitted ggnet.  function need first plot ggplot chain, graph can plotted top map chart.  Segments can straight lines, plotted great circles.  Note great circles feature can produce odd results arrows vertices beyond plot edges; ggplot2 limitation yet fixed.  Nodes can two color schemes, plotted center ring around node.  color schemes selected adding scale_fill_ scale_color_ just like ggplot2 plot. rings, scale_color sets color nodes.  rings, scale_color sets color rings, scale_fill sets color centers.  Note additional arguments ... passed geom_text plotting labels.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnetworkmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Network plot map overlay — ggnetworkmap","text":"Amos Elberg. Original Moritz Marbach, Francois Briatte","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnetworkmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network plot map overlay — ggnetworkmap","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  invisible(lapply(c(\"ggplot2\", \"maps\", \"network\", \"sna\"), base::library, character.only = TRUE)) #> Loading required package: statnet.common #>  #> Attaching package: ‘statnet.common’ #> The following objects are masked from ‘package:base’: #>  #>     attr, order, replace #> sna: Tools for Social Network Analysis #> Version 2.8 created on 2024-09-07. #> copyright (c) 2005, Carter T. Butts, University of California-Irvine #>  For citation information, type citation(\"sna\"). #>  Type help(package=\"sna\") to get started.  ## Example showing great circles on a simple map of the USA ## http://flowingdata.com/2011/05/11/how-to-map-connections-with-great-circles/ # \\donttest{ airports <- read.csv(\"http://datasets.flowingdata.com/tuts/maparcs/airports.csv\", header = TRUE) rownames(airports) <- airports$iata  # select some random flights set.seed(123) flights <- data.frame(   origin = sample(airports[200:400, ]$iata, 200, replace = TRUE),   destination = sample(airports[200:400, ]$iata, 200, replace = TRUE) )  # convert to network flights <- network(flights, directed = TRUE)  # add geographic coordinates flights %v% \"lat\" <- airports[network.vertex.names(flights), \"lat\"] flights %v% \"lon\" <- airports[network.vertex.names(flights), \"long\"]  # drop isolated airports delete.vertices(flights, which(degree(flights) < 2))  # compute degree centrality flights %v% \"degree\" <- degree(flights, gmode = \"digraph\")  # add random groups flights %v% \"mygroup\" <- sample(letters[1:4], network.size(flights), replace = TRUE)  # create a map of the USA usa <- ggplot(map_data(\"usa\"), aes(x = long, y = lat)) +   geom_polygon(aes(group = group),     color = \"grey65\",     fill = \"#f9f9f9\", linewidth = 0.2   )  # overlay network data to map p <- ggnetworkmap(   usa, flights,   size = 4, great.circles = TRUE,   node.group = mygroup, segment.color = \"steelblue\",   ring.group = degree, weight = degree ) p_(p)   ## Exploring a community of spambots found on Twitter ## Data by Amos Elberg: see ?twitter_spambots for details  data(twitter_spambots)  # create a world map world <- fortify(map(\"world\", plot = FALSE, fill = TRUE)) world <- ggplot(world, aes(x = long, y = lat)) +   geom_polygon(aes(group = group),     color = \"grey65\",     fill = \"#f9f9f9\", linewidth = 0.2   )  # view global structure p <- ggnetworkmap(world, twitter_spambots) p_(p)   # domestic distribution p <- ggnetworkmap(net = twitter_spambots) p_(p)   # topology p <- ggnetworkmap(net = twitter_spambots, arrow.size = 0.5) p_(p)   # compute indegree and outdegree centrality twitter_spambots %v% \"indegree\" <- degree(twitter_spambots, cmode = \"indegree\") twitter_spambots %v% \"outdegree\" <- degree(twitter_spambots, cmode = \"outdegree\")  p <- ggnetworkmap(   net = twitter_spambots,   arrow.size = 0.5,   node.group = indegree,   ring.group = outdegree, size = 4 ) +   scale_fill_continuous(\"Indegree\", high = \"red\", low = \"yellow\") +   labs(color = \"Outdegree\") p_(p)   # show some vertex attributes associated with each account p <- ggnetworkmap(   net = twitter_spambots,   arrow.size = 0.5,   node.group = followers,   ring.group = friends,   size = 4,   weight = indegree,   label.nodes = TRUE, vjust = -1.5 ) +   scale_fill_continuous(\"Followers\", high = \"red\", low = \"yellow\") +   labs(color = \"Friends\") +   scale_color_continuous(low = \"lightgreen\", high = \"darkgreen\") p_(p)  # }"},{"path":"https://ggobi.github.io/ggally/reference/ggnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot matrix of statistical model diagnostics — ggnostic","title":"Plot matrix of statistical model diagnostics — ggnostic","text":"Plot matrix statistical model diagnostics","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot matrix of statistical model diagnostics — ggnostic","text":"","code":"ggnostic(   model,   ...,   columnsX = attr(data, \"var_x\"),   columnsY = c(\".resid\", \".sigma\", \".hat\", \".cooksd\"),   columnLabelsX = attr(data, \"var_x_label\"),   columnLabelsY = gsub(\"\\\\.\", \" \", gsub(\"^\\\\.\", \"\", columnsY)),   xlab = \"explanatory variables\",   ylab = \"diagnostics\",   title = paste(deparse(model$call, width.cutoff = 500L), collapse = \"\\n\"),   continuous = list(default = ggally_points, .fitted = ggally_points, .se.fit =     ggally_nostic_se_fit, .resid = ggally_nostic_resid, .hat = ggally_nostic_hat, .sigma     = ggally_nostic_sigma, .cooksd = ggally_nostic_cooksd, .std.resid =     ggally_nostic_std_resid),   combo = list(default = ggally_box_no_facet, .fitted = ggally_box_no_facet, .se.fit =     ggally_nostic_se_fit, .resid = ggally_nostic_resid, .hat = ggally_nostic_hat, .sigma     = ggally_nostic_sigma, .cooksd = ggally_nostic_cooksd, .std.resid =     ggally_nostic_std_resid),   discrete = list(default = ggally_ratio, .fitted = ggally_ratio, .se.fit = ggally_ratio,     .resid = ggally_ratio, .hat = ggally_ratio, .sigma = ggally_ratio, .cooksd =     ggally_ratio, .std.resid = ggally_ratio),   progress = NULL,   data = broomify(model) )"},{"path":"https://ggobi.github.io/ggally/reference/ggnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot matrix of statistical model diagnostics — ggnostic","text":"model statistical model object output stats::lm stats::glm ... arguments passed directly ggduo columnsX columns displayed plot matrix. Defaults predictor columns model columnsY rows displayed plot matrix. Defaults residuals, leave one sigma value, diagonal hat matrix, Cook's Distance. possible values response variables model added columns provided broom::augment(). See details information. columnLabelsX, columnLabelsY column row labels display plot matrix xlab, ylab, title plot matrix labels passed directly ggmatrix continuous, combo, discrete list functions y variable.  See details information. progress NULL (default) progress bar interactive sessions 15 plots, TRUE progress bar, FALSE progress bar, function accepts least plot matrix returns new progress::progress_bar.  See ggmatrix_progress. data data defaults 'broomify'ed model object.  object contain information X variables, Y variables, multiple broom outputs. See broomify(model) information","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnostic.html","id":"columnsy","dir":"Reference","previous_headings":"","what":"columnsY","title":"Plot matrix of statistical model diagnostics — ggnostic","text":"broom::augment() collects data supplied model returns data.frame following columns (taken directly broom documentation).  columns allowed values columnsY parameter ggnostic. .resid Residuals .hat Diagonal hat matrix .sigma Estimate residual standard deviation corresponding observation dropped model .cooksd Cooks distance, stats::cooks.distance() .fitted Fitted values model .se.fit Standard errors fitted values .std.resid Standardized residuals response variable name response variable model may added. \"mpg\" model lm(mpg ~ ., data = mtcars)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnostic.html","id":"continuous-combo-discrete-types","dir":"Reference","previous_headings":"","what":"continuous, combo, discrete types","title":"Plot matrix of statistical model diagnostics — ggnostic","text":"Similar ggduo ggpairs, functions may supplied display different column types.  However, since Y rows fixed, row corresponding function plot types: continuous, combo, discrete.  plot type list can keys correspond broom::augment() output: \".fitted\", \".resid\", \".std.resid\", \".sigma\", \".se.fit\", \".hat\", \".cooksd\". extra key, \"default\", used plot response variables model included.  function diagnostic allows fine control diagnostics plot matrix.  functions type list wrapped switch function calls function corresponding y variable plotted.  switch functions passed directly types parameter ggduo.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggnostic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot matrix of statistical model diagnostics — ggnostic","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive data(mtcars)  # use mtcars dataset and alter the 'am' column to display actual name values mtc <- mtcars mtc$am <- c(\"0\" = \"automatic\", \"1\" = \"manual\")[as.character(mtc$am)]  # step the complete model down to a smaller model mod <- stats::step(stats::lm(mpg ~ ., data = mtc), trace = FALSE)  # display using defaults pm <- ggnostic(mod) p_(pm) #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess'   # color by am value pm <- ggnostic(mod, mapping = ggplot2::aes(color = am)) p_(pm) #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess'   # turn resid smooth error ribbon off pm <- ggnostic(mod, continuous = list(.resid = wrap(\"nostic_resid\", se = FALSE))) p_(pm) #> `geom_smooth()` using method = 'loess' #> `geom_smooth()` using method = 'loess'    ## plot residuals vs fitted in a ggpairs plot matrix dt <- broomify(mod) pm <- ggpairs(   dt, c(\".fitted\", \".resid\"),   columnLabels = c(\"fitted\", \"residuals\"),   lower = list(continuous = ggally_nostic_resid) ) p_(pm) #> `geom_smooth()` using method = 'loess'"},{"path":"https://ggobi.github.io/ggally/reference/ggpairs.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 generalized pairs plot — ggpairs","title":"ggplot2 generalized pairs plot — ggpairs","text":"Make matrix plots given data set","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggpairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 generalized pairs plot — ggpairs","text":"","code":"ggpairs(   data,   mapping = NULL,   columns = 1:ncol(data),   title = NULL,   upper = list(continuous = \"cor\", combo = \"box_no_facet\", discrete = \"count\", na = \"na\"),   lower = list(continuous = \"points\", combo = \"facethist\", discrete = \"facetbar\", na =     \"na\"),   diag = list(continuous = \"densityDiag\", discrete = \"barDiag\", na = \"naDiag\"),   params = deprecated(),   ...,   xlab = NULL,   ylab = NULL,   axisLabels = c(\"show\", \"internal\", \"none\"),   columnLabels = colnames(data[columns]),   labeller = \"label_value\",   switch = NULL,   showStrips = NULL,   legend = NULL,   cardinality_threshold = 15,   progress = NULL,   proportions = NULL,   legends = deprecated() )"},{"path":"https://ggobi.github.io/ggally/reference/ggpairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 generalized pairs plot — ggpairs","text":"data data set using.  Can numerical categorical data. mapping aesthetic mapping (besides x y).  See aes().  mapping numeric, columns set mapping value mapping set NULL. columns columns used make plots.  Defaults columns. title, xlab, ylab title, x label, y label graph upper see Details lower see Details diag see Details params see wrap_fn_with_param_arg ... use mapping axisLabels either \"show\" display axisLabels, \"internal\" labels diagonal plots, \"none\" axis labels columnLabels label names displayed.  Defaults names columns used. labeller labeller facets. See labellers. Common values \"label_value\" (default) \"label_parsed\". switch switch parameter facet_grid. See ggplot2::facet_grid.  default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\" showStrips boolean determine plot's strips displayed. NULL default top right side plots . TRUE FALSE turn strips respectively. legend May two objects described default NULL value.  legend position can moved using ggplot2's theme element pm + theme(legend.position = \"bottom\") single numeric value provides location plot according display order. legend = 3 plot matrix 2 rows 5 columns displayed column return plot position c(1,2) object grab_legend() predetermined plot legend displayed directly cardinality_threshold maximum number levels allowed character / factor column.  Set value NULL check factor columns. Defaults 15 progress NULL (default) progress bar interactive sessions 15 plots, TRUE progress bar, FALSE progress bar, function accepts least plot matrix returns new progress::progress_bar.  See ggmatrix_progress. proportions Value change much area given plot. Either NULL (default), numeric value matching respective length, grid::unit object matching respective length \"auto\" automatic relative proportions based number levels categorical variables. legends","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggpairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 generalized pairs plot — ggpairs","text":"ggmatrix object called, print","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggpairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggplot2 generalized pairs plot — ggpairs","text":"upper lower lists may contain variables 'continuous', 'combo', 'discrete', 'na'. element list may function string.  string supplied, must character string representing tail end ggally_NAME function. list current valid ggally_NAME functions visible dedicated vignette. continuous option used continuous X Y data. combo option used either continuous X categorical Y data categorical X continuous Y data. discrete option used categorical X Y data. na option used X data NA, Y data NA, either X Y data NA. diag list may contain variables 'continuous', 'discrete', 'na'. element diag list string implementing following options: continuous exactly one ('densityDiag', 'barDiag', 'blankDiag'). option used continuous X data. discrete exactly one ('barDiag', 'blankDiag'). option used categorical X Y data. na exactly one ('naDiag', 'blankDiag').  option used X data NA. 'blank' ever chosen option, ggpairs produce empty plot. function supplied option upper, lower, diag, implement function api function(data, mapping, ...){#make ggplot2 plot}.  specific function needs parameters set, wrap(fn, param1 = val1, param2 = val2) function parameters.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggpairs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ggplot2 generalized pairs plot — ggpairs","text":"John W Emerson, Walton Green, Barret Schloerke, Jason Crowley, Dianne Cook, Heike Hofmann, Hadley Wickham. Generalized Pairs Plot. Journal Computational Graphical Statistics, vol. 22, . 1, pp. 79-91, 2012.","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/ggpairs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggplot2 generalized pairs plot — ggpairs","text":"Barret Schloerke, Jason Crowley, Di Cook, Heike Hofmann, Hadley Wickham","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggpairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 generalized pairs plot — ggpairs","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive   ## Quick example, with and without colour data(flea) ggpairs(flea, columns = 2:4)  pm <- ggpairs(flea, columns = 2:4, ggplot2::aes(colour = species)) p_(pm)  # Note: colour should be categorical, else you will need to reset # the upper triangle to use points instead of trying to compute corr  data(tips) pm <- ggpairs(tips[, 1:3]) p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  pm <- ggpairs(tips, 1:3, columnLabels = c(\"Total Bill\", \"Tip\", \"Sex\")) p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  pm <- ggpairs(tips, upper = \"blank\") p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   ## Plot Types # Change default plot behavior pm <- ggpairs(   tips[, c(1, 3, 4, 2)],   upper = list(continuous = \"density\", combo = \"box_no_facet\"),   lower = list(continuous = \"points\", combo = \"dot_no_facet\") ) p_(pm)  # Supply Raw Functions (may be user defined functions!) pm <- ggpairs(   tips[, c(1, 3, 4, 2)],   upper = list(continuous = ggally_density, combo = ggally_box_no_facet),   lower = list(continuous = ggally_points, combo = ggally_dot_no_facet) ) p_(pm)   # Use sample of the diamonds data data(diamonds, package = \"ggplot2\") diamonds.samp <- diamonds[sample(1:dim(diamonds)[1], 1000), ]  # Different aesthetics for different plot sections and plot types pm <- ggpairs(   diamonds.samp[, 1:5],   mapping = ggplot2::aes(color = cut),   upper = list(continuous = wrap(\"density\", alpha = 0.5), combo = \"box_no_facet\"),   lower = list(continuous = wrap(\"points\", alpha = 0.3), combo = wrap(\"dot_no_facet\", alpha = 0.4)),   title = \"Diamonds\" ) p_(pm)   ## Axis Label Variations # Only Variable Labels on the diagonal (no axis labels) pm <- ggpairs(tips[, 1:3], axisLabels = \"internal\") p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  # Only Variable Labels on the outside (no axis labels) pm <- ggpairs(tips[, 1:3], axisLabels = \"none\") p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   ## Facet Label Variations #  Default: df_x <- rnorm(100) df_y <- df_x + rnorm(100, 0, 0.1) df <- data.frame(x = df_x, y = df_y, c = sqrt(df_x^2 + df_y^2)) pm <- ggpairs(   df,   columnLabels = c(\"alpha[foo]\", \"alpha[bar]\", \"sqrt(alpha[foo]^2 + alpha[bar]^2)\") ) p_(pm)  #  Parsed labels: pm <- ggpairs(   df,   columnLabels = c(\"alpha[foo]\", \"alpha[bar]\", \"sqrt(alpha[foo]^2 + alpha[bar]^2)\"),   labeller = \"label_parsed\" ) p_(pm)   ## Plot Insertion Example custom_car <- ggpairs(mtcars[, c(\"mpg\", \"wt\", \"cyl\")], upper = \"blank\", title = \"Custom Example\") # ggplot example taken from example(geom_text) plot <- ggplot2::ggplot(mtcars, ggplot2::aes(x = wt, y = mpg, label = rownames(mtcars))) plot <- plot +   ggplot2::geom_text(ggplot2::aes(colour = factor(cyl)), size = 3) +   ggplot2::scale_colour_discrete(l = 40) custom_car[1, 2] <- plot personal_plot <- ggally_text(   \"ggpairs allows you\\nto put in your\\nown plot.\\nLike that one.\\n <---\" ) custom_car[1, 3] <- personal_plot p_(custom_car)   ## Remove binwidth warning from ggplot2 # displays warning about picking a better binwidth pm <- ggpairs(tips, 2:3) p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  # no warning displayed pm <- ggpairs(tips, 2:3, lower = list(combo = wrap(\"facethist\", binwidth = 0.5))) p_(pm)  # no warning displayed with user supplied function pm <- ggpairs(tips, 2:3, lower = list(combo = wrap(ggally_facethist, binwidth = 0.5))) p_(pm)   ## Remove panel grid lines from correlation plots pm <- ggpairs(   flea,   columns = 2:4,   upper = list(continuous = wrap(ggally_cor, displayGrid = FALSE)) ) p_(pm)   ## Custom with/height of subplots pm <- ggpairs(tips, columns = c(2, 3, 5)) p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   pm <- ggpairs(tips, columns = c(2, 3, 5), proportions = \"auto\") p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   pm <- ggpairs(tips, columns = c(2, 3, 5), proportions = c(1, 3, 2)) p_(pm) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/reference/ggparcoord.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel coordinate plot — ggparcoord","title":"Parallel coordinate plot — ggparcoord","text":"function plotting static parallel coordinate plots, utilizing ggplot2 graphics package.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggparcoord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel coordinate plot — ggparcoord","text":"","code":"ggparcoord(   data,   columns = 1:ncol(data),   groupColumn = NULL,   scale = \"std\",   scaleSummary = \"mean\",   centerObsID = 1,   missing = \"exclude\",   order = columns,   showPoints = FALSE,   splineFactor = FALSE,   alphaLines = 1,   boxplot = FALSE,   shadeBox = NULL,   mapping = NULL,   title = \"\" )"},{"path":"https://ggobi.github.io/ggally/reference/ggparcoord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel coordinate plot — ggparcoord","text":"data dataset plot columns vector variables (either names indices) axes plot groupColumn single variable group (color) scale method used scale variables (see Details) scaleSummary scale==\"center\", summary statistic univariately center variable centerObsID scale==\"centerObs\", row number case plot univariately centered missing method used handle missing values (see Details) order method used order axes (see Details) showPoints logical operator indicating whether points plotted splineFactor logical numeric operator indicating whether spline interpolation used.  Numeric values multiplied number columns, TRUE default cubic interpolation, AsIs set knot count directly 0, FALSE, non-numeric values use spline interpolation. alphaLines value alpha scaler lines parcoord plot column name data boxplot logical operator indicating whether boxplots underlay distribution variable shadeBox color underlying box extends min max variable (box plotted shadeBox == NULL) mapping aes string pass ggplot object title character string denoting title plot","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggparcoord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel coordinate plot — ggparcoord","text":"ggplot object called, print","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggparcoord.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parallel coordinate plot — ggparcoord","text":"scale character string denotes scale variables parallel coordinate plot. Options: std : univariately, subtract mean divide standard deviation robust : univariately, subtract median divide median absolute deviation uniminmax : univariately, scale minimum variable zero, maximum one globalminmax : scaling done; range graphs defined global minimum global maximum center : use uniminmax standardize vertical height, center variable value specified scaleSummary param centerObs : use uniminmax standardize vertical height, center variable value observation specified centerObsID param missing character string denotes handle missing missing values. Options: exclude : remove cases missing values mean : set missing values mean variable median : set missing values median variable min10 : set missing values 10% minimum variable random : set missing values value randomly chosen observation variable order either vector indices character string denotes order axes (variables) parallel coordinate plot. Options: (default) : order vector denoted columns (given vector) : order vector specified anyClass : order variables separation one class rest (opposed overall variation classes). accomplished calculating F-statistic class vs. rest, axis variable. axis variables ordered (decreasing) maximum k F-statistics, k number classes. allClass : order variables overall F statistic (decreasing) ANOVA groupColumn explanatory variable (note: required specify groupColumn ordering method). Basically, method orders variables variation classes (least). skewness : order variables sample skewness (skewed least skewed) Outlying : order scagnostic measure, Outlying, calculated package scagnostics. scagnostic measures available order Skewed, Clumpy, Sparse, Striated, Convex, Skinny, Stringy, Monotonic. Note: use methods ordering, must scagnostics package loaded.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggparcoord.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallel coordinate plot — ggparcoord","text":"Jason Crowley, Barret Schloerke, Dianne Cook, Heike Hofmann, Hadley Wickham","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggparcoord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parallel coordinate plot — ggparcoord","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  # use sample of the diamonds data for illustrative purposes data(diamonds, package = \"ggplot2\") diamonds.samp <- diamonds[sample(1:dim(diamonds)[1], 100), ]  # basic parallel coordinate plot, using default settings p <- ggparcoord(data = diamonds.samp, columns = c(1, 5:10)) p_(p)   # this time, color by diamond cut p <- ggparcoord(data = diamonds.samp, columns = c(1, 5:10), groupColumn = 2) p_(p)   # underlay univariate boxplots, add title, use uniminmax scaling p <- ggparcoord(   data = diamonds.samp, columns = c(1, 5:10), groupColumn = 2,   scale = \"uniminmax\", boxplot = TRUE, title = \"Parallel Coord. Plot of Diamonds Data\" ) p_(p) #> Warning: The following aesthetics were dropped during statistical #> transformation: colour. #> ℹ This can happen when ggplot fails to infer the correct grouping #>   structure in the data. #> ℹ Did you forget to specify a `group` aesthetic or to convert a #>   numerical variable into a factor?   # utilize ggplot2 aes to switch to thicker lines p <- ggparcoord(   data = diamonds.samp, columns = c(1, 5:10), groupColumn = 2,   title = \"Parallel Coord. Plot of Diamonds Data\", mapping = ggplot2::aes(linewidth = 1) ) +   ggplot2::scale_linewidth_identity() p_(p)   # basic parallel coord plot of the msleep data, using 'random' imputation and # coloring by diet (can also use variable names in the columns and groupColumn # arguments) data(msleep, package = \"ggplot2\") p <- ggparcoord(   data = msleep, columns = 6:11, groupColumn = \"vore\", missing =     \"random\", scale = \"uniminmax\" ) p_(p)   # center each variable by its median, using the default missing value handler, # 'exclude' p <- ggparcoord(   data = msleep, columns = 6:11, groupColumn = \"vore\", scale =     \"center\", scaleSummary = \"median\" ) p_(p)   # with the iris data, order the axes by overall class (Species) separation using # the anyClass option p <- ggparcoord(data = iris, columns = 1:4, groupColumn = 5, order = \"anyClass\") p_(p)   # add points to the plot, add a title, and use an alpha scalar to make the lines # transparent p <- ggparcoord(   data = iris, columns = 1:4, groupColumn = 5, order = \"anyClass\",   showPoints = TRUE, title = \"Parallel Coordinate Plot for the Iris Data\",   alphaLines = 0.3 ) p_(p)   # color according to a column iris2 <- iris iris2$alphaLevel <- c(\"setosa\" = 0.2, \"versicolor\" = 0.3, \"virginica\" = 0)[iris2$Species] p <- ggparcoord(   data = iris2, columns = 1:4, groupColumn = 5, order = \"anyClass\",   showPoints = TRUE, title = \"Parallel Coordinate Plot for the Iris Data\",   alphaLines = \"alphaLevel\" ) p_(p)   ## Use splines on values, rather than lines (all produce the same result) columns <- c(1, 5:10) p <- ggparcoord(diamonds.samp, columns, groupColumn = 2, splineFactor = TRUE) p_(p)  p <- ggparcoord(diamonds.samp, columns, groupColumn = 2, splineFactor = 3) p_(p)"},{"path":"https://ggobi.github.io/ggally/reference/ggscatmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Traditional scatterplot matrix for purely quantitative variables — ggscatmat","title":"Traditional scatterplot matrix for purely quantitative variables — ggscatmat","text":"function makes scatterplot matrix quantitative variables density plots diagonal correlation printed upper triangle.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggscatmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Traditional scatterplot matrix for purely quantitative variables — ggscatmat","text":"","code":"ggscatmat(   data,   columns = 1:ncol(data),   color = NULL,   alpha = 1,   corMethod = \"pearson\" )"},{"path":"https://ggobi.github.io/ggally/reference/ggscatmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Traditional scatterplot matrix for purely quantitative variables — ggscatmat","text":"data data matrix. contain numerical (continuous) data. columns option choose column used raw dataset. Defaults 1:ncol(data). color option group dataset factor variable color different colors. Defaults NULL, .e. coloring. supplied, converted factor. alpha option set transparency scatterplots large data. Defaults 1. corMethod method argument supplied cor","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggscatmat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Traditional scatterplot matrix for purely quantitative variables — ggscatmat","text":"Mengjia Ni, Di Cook","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggscatmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Traditional scatterplot matrix for purely quantitative variables — ggscatmat","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(flea)  p_(ggscatmat(flea, columns = 2:4))  p_(ggscatmat(flea, columns = 2:4, color = \"species\"))"},{"path":"https://ggobi.github.io/ggally/reference/ggsurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival curves — ggsurv","title":"Survival curves — ggsurv","text":"function produces Kaplan-Meier plots using ggplot2. first argument needs survfit object, created survival package. Default settings differ single stratum multiple strata objects.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggsurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival curves — ggsurv","text":"","code":"ggsurv(   s,   CI = \"def\",   plot.cens = TRUE,   surv.col = \"gg.def\",   cens.col = \"gg.def\",   lty.est = 1,   lty.ci = 2,   size.est = 0.5,   size.ci = size.est,   cens.size = 2,   cens.shape = 3,   back.white = FALSE,   xlab = \"Time\",   ylab = \"Survival\",   main = \"\",   order.legend = TRUE )"},{"path":"https://ggobi.github.io/ggally/reference/ggsurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival curves — ggsurv","text":"s object class survfit CI confidence interval plotted? Defaults TRUE single stratum objects FALSE multiple strata objects. plot.cens mark censored observations? surv.col colour survival estimate. Defaults black one stratum, default ggplot2 colours multiple strata. Length vector colour names either 1 equal number strata. cens.col colour points mark censored observations. lty.est linetype survival curve(s). Vector length either 1 equal number strata. lty.ci linetype bounds mark 95% CI. size.est line width survival curve size.ci line width 95% CI cens.size point size censoring points cens.shape shape points mark censored observations. back.white TRUE background default grey ggplot2 white borders around plot. xlab label x-axis. ylab label y-axis. main plot label. order.legend boolean determine legend display ordered final survival time","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggsurv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival curves — ggsurv","text":"object class ggplot","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggsurv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Survival curves — ggsurv","text":"Edwin Thoen","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggsurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival curves — ggsurv","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  if (require(survival) && require(scales)) {   lung <- survival::lung   sf.lung <- survival::survfit(Surv(time, status) ~ 1, data = lung)   p_(ggsurv(sf.lung))    # Multiple strata examples   sf.sex <- survival::survfit(Surv(time, status) ~ sex, data = lung)   pl.sex <- ggsurv(sf.sex)   p_(pl.sex)    # Adjusting the legend of the ggsurv fit   p_(pl.sex +     ggplot2::guides(linetype = \"none\") +     ggplot2::scale_colour_discrete(       name   = \"Sex\",       breaks = c(1, 2),       labels = c(\"Male\", \"Female\")     ))    # Multiple factors   lung2 <- dplyr::mutate(lung, older = as.factor(age > 60))   sf.sex2 <- survival::survfit(Surv(time, status) ~ sex + older, data = lung2)   pl.sex2 <- ggsurv(sf.sex2)   p_(pl.sex2)    # Change legend title   p_(pl.sex2 + labs(color = \"New Title\", linetype = \"New Title\"))    # We can still adjust the plot after fitting   kidney <- survival::kidney   sf.kid <- survival::survfit(Surv(time, status) ~ disease, data = kidney)   pl.kid <- ggsurv(sf.kid, plot.cens = FALSE)   p_(pl.kid)    # Zoom in to first 80 days   p_(pl.kid + ggplot2::coord_cartesian(xlim = c(0, 80), ylim = c(0.45, 1)))    # Add the diseases names to the plot and remove legend   p_(pl.kid +     ggplot2::annotate(       \"text\",       label = c(\"PKD\", \"Other\", \"GN\", \"AN\"),       x = c(90, 125, 5, 60),       y = c(0.8, 0.65, 0.55, 0.30),       size = 5,       colour = scales::pal_hue(         h         = c(0, 360) + 15,         c         = 100,         l         = 65,         h.start   = 0,         direction = 1       )(4)     ) +     ggplot2::guides(color = \"none\", linetype = \"none\")) } #> Loading required package: survival #> Loading required package: scales   #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing #> scale."},{"path":"https://ggobi.github.io/ggally/reference/ggtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-tabulated tables of discrete variables — ggtable","title":"Cross-tabulated tables of discrete variables — ggtable","text":"ggtable variant ggduo quick cross-tabulated tables discrete variables.","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-tabulated tables of discrete variables — ggtable","text":"","code":"ggtable(   data,   columnsX = 1:ncol(data),   columnsY = 1:ncol(data),   cells = c(\"observed\", \"prop\", \"row.prop\", \"col.prop\", \"expected\", \"resid\", \"std.resid\"),   fill = c(\"none\", \"std.resid\", \"resid\"),   mapping = NULL,   ... )"},{"path":"https://ggobi.github.io/ggally/reference/ggtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-tabulated tables of discrete variables — ggtable","text":"data dataset used, can categorical numerical variables columnsX, columnsY names positions columns used make plots. Defaults columns. cells statistic displayed table cells? fill statistic used filling table cells? mapping additional aesthetic used, example indicate weights (see examples) ... additional arguments passed ggduo (see examples)","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggtable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cross-tabulated tables of discrete variables — ggtable","text":"Joseph Larmarange","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-tabulated tables of discrete variables — ggtable","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(tips) p_(ggtable(tips, \"smoker\", c(\"day\", \"time\", \"sex\")))   # displaying row proportions p_(ggtable(tips, \"smoker\", c(\"day\", \"time\", \"sex\"), cells = \"row.prop\"))   # filling cells with standardized residuals p_(ggtable(tips, \"smoker\", c(\"day\", \"time\", \"sex\"), fill = \"std.resid\", legend = 1))   # if continuous variables are provided, just displaying some summary statistics p_(ggtable(tips, c(\"smoker\", \"total_bill\"), c(\"day\", \"time\", \"sex\", \"tip\")))   # specifying weights d <- as.data.frame(Titanic) p_(ggtable(   d,   \"Survived\",   c(\"Class\", \"Sex\", \"Age\"),   mapping = aes(weight = Freq),   cells = \"row.prop\",   fill = \"std.resid\" ))"},{"path":"https://ggobi.github.io/ggally/reference/ggts.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple time series — ggts","title":"Multiple time series — ggts","text":"GGally implementation ts.plot. Wraps around ggduo function removes column strips","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple time series — ggts","text":"","code":"ggts(..., columnLabelsX = NULL, xlab = \"time\")"},{"path":"https://ggobi.github.io/ggally/reference/ggts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple time series — ggts","text":"... supplied directly ggduo columnLabelsX remove top strips X axis default xlab defaults \"time\"","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple time series — ggts","text":"ggmatrix object","code":""},{"path":"https://ggobi.github.io/ggally/reference/ggts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple time series — ggts","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  p_(ggts(pigs, \"time\", c(\"gilts\", \"profit\", \"s_per_herdsz\", \"production\", \"herdsz\")))"},{"path":"https://ggobi.github.io/ggally/reference/glyphplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Glyph plot class — glyphplot","title":"Glyph plot class — glyphplot","text":"Glyph plot class","code":""},{"path":"https://ggobi.github.io/ggally/reference/glyphplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glyph plot class — glyphplot","text":"","code":"glyphplot(data, width, height, polar, x_major, y_major)  is.glyphplot(x)  # S3 method for class 'glyphplot' x[...]  # S3 method for class 'glyphplot' print(x, ...)"},{"path":"https://ggobi.github.io/ggally/reference/glyphplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glyph plot class — glyphplot","text":"data data frame containing variables named x_major, x_minor, y_major y_minor. height, width height width glyph. Defaults 95% resolution data. Specify width absolutely supplying numeric vector length 1, relative polar logical length 1, specifying whether glyphs drawn polar coordinates.  Defaults FALSE. x_major, y_major name variable (string) major x y axes.  Together, x glyphplot printed ... ignored","code":""},{"path":"https://ggobi.github.io/ggally/reference/glyphplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Glyph plot class — glyphplot","text":"Di Cook, Heike Hofmann, Hadley Wickham","code":""},{"path":"https://ggobi.github.io/ggally/reference/glyphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create glyphplot data — glyphs","title":"Create glyphplot data — glyphs","text":"Create data needed generate glyph plot.","code":""},{"path":"https://ggobi.github.io/ggally/reference/glyphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create glyphplot data — glyphs","text":"","code":"glyphs(   data,   x_major,   x_minor,   y_major,   y_minor,   polar = FALSE,   height = ggplot2::rel(0.95),   width = ggplot2::rel(0.95),   y_scale = identity,   x_scale = identity )"},{"path":"https://ggobi.github.io/ggally/reference/glyphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create glyphplot data — glyphs","text":"data data frame containing variables named x_major, x_minor, y_major y_minor. x_major, x_minor, y_major, y_minor name variable (string) major minor x y axes.  Together, unique polar logical length 1, specifying whether glyphs drawn polar coordinates.  Defaults FALSE. height, width height width glyph. Defaults 95% resolution data. Specify width absolutely supplying numeric vector length 1, relative y_scale, x_scale scaling function applied set minor values within grid cell.  Defaults identity scaling performed.","code":""},{"path":"https://ggobi.github.io/ggally/reference/glyphs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create glyphplot data — glyphs","text":"Di Cook, Heike Hofmann, Hadley Wickham","code":""},{"path":"https://ggobi.github.io/ggally/reference/glyphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create glyphplot data — glyphs","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(nasa) nasaLate <- nasa[   nasa$date >= as.POSIXct(\"1998-01-01\") &     nasa$lat >= 20 &     nasa$lat <= 40 &     nasa$long >= -80 &     nasa$long <= -60, ] temp.gly <- glyphs(nasaLate, \"long\", \"day\", \"lat\", \"surftemp\", height = 2.5) #> Using width 2.38 p_(ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +   add_ref_lines(temp.gly, color = \"grey90\") +   add_ref_boxes(temp.gly, color = \"grey90\") +   ggplot2::geom_path() +   ggplot2::theme_bw() +   ggplot2::labs(x = \"\", y = \"\"))"},{"path":"https://ggobi.github.io/ggally/reference/grab_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab the legend and print it as a plot — grab_legend","title":"Grab the legend and print it as a plot — grab_legend","text":"Grab legend print plot","code":""},{"path":"https://ggobi.github.io/ggally/reference/grab_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab the legend and print it as a plot — grab_legend","text":"","code":"grab_legend(p)  # S3 method for class 'legend_guide_box' print(x, ..., plotNew = FALSE)"},{"path":"https://ggobi.github.io/ggally/reference/grab_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab the legend and print it as a plot — grab_legend","text":"p ggplot2 plot object x legend object grabbed ggplot2 object ... ignored plotNew boolean determine grid.newpage() command new blank rectangle printed","code":""},{"path":"https://ggobi.github.io/ggally/reference/grab_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab the legend and print it as a plot — grab_legend","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  library(ggplot2) histPlot <-   ggplot(iris, aes(Sepal.Length, fill = Species)) +   geom_histogram(binwidth = 1 / 4) (right <- histPlot)  (bottom <- histPlot + theme(legend.position = \"bottom\"))  (top <- histPlot + theme(legend.position = \"top\"))  (left <- histPlot + theme(legend.position = \"left\"))  p_(grab_legend(right)) p_(grab_legend(bottom)) p_(grab_legend(top)) p_(grab_legend(left))"},{"path":"https://ggobi.github.io/ggally/reference/happy.html","id":null,"dir":"Reference","previous_headings":"","what":"Data related to happiness from the General Social Survey, 1972-2006. — happy","title":"Data related to happiness from the General Social Survey, 1972-2006. — happy","text":"data extract taken Hadley Wickham's productplots package. original description follows, minor edits.","code":""},{"path":"https://ggobi.github.io/ggally/reference/happy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data related to happiness from the General Social Survey, 1972-2006. — happy","text":"","code":"data(happy)"},{"path":"https://ggobi.github.io/ggally/reference/happy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data related to happiness from the General Social Survey, 1972-2006. — happy","text":"data frame 51020 rows 10 variables","code":""},{"path":"https://ggobi.github.io/ggally/reference/happy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data related to happiness from the General Social Survey, 1972-2006. — happy","text":"data small sample variables related happiness General Social Survey (GSS). GSS yearly cross-sectional survey Americans, run 1972. combine data 25 years yield 51,020 observations, 5,000 variables, select nine related happiness: age. age years: 18–89. degree. highest education: lt high school, high school, junior college, bachelor, graduate. finrela. relative financial status: far , average, average, average, far . happy. happiness: happy, pretty happy, happy. health. health: excellent, good, fair, poor. marital. marital status: married, never married, divorced, widowed, separated. sex. sex: female, male. wtsall. probability weight. 0.43–6.43.","code":""},{"path":"https://ggobi.github.io/ggally/reference/happy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data related to happiness from the General Social Survey, 1972-2006. — happy","text":"Smith, Tom W., Peter V. Marsden, Michael Hout, Jibum Kim. General Social Surveys, 1972-2006. [machine-readable data file]. Principal Investigator, Tom W. Smith; Co-Principal Investigators, Peter V. Marsden Michael Hout, NORC ed. Chicago: National Opinion Research Center, producer, 2005; Storrs, CT: Roper Center Public Opinion Research, University Connecticut, distributor. 1 data file (57,061 logical records) 1 codebook (3,422 pp).","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_blank_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Blank Plot? Find out if the plot equals a blank plot — is_blank_plot","title":"Is Blank Plot? Find out if the plot equals a blank plot — is_blank_plot","text":"Blank Plot? Find plot equals blank plot","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_blank_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Blank Plot? Find out if the plot equals a blank plot — is_blank_plot","text":"","code":"is_blank_plot(p)"},{"path":"https://ggobi.github.io/ggally/reference/is_blank_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is Blank Plot? Find out if the plot equals a blank plot — is_blank_plot","text":"","code":"GGally:::is_blank_plot(ggally_blank()) #> [1] TRUE GGally:::is_blank_plot(ggally_points(mtcars, ggplot2::aes(disp, hp))) #> [1] FALSE"},{"path":"https://ggobi.github.io/ggally/reference/is_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is a date — is_date","title":"Check if object is a date — is_date","text":"Check object date","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is a date — is_date","text":"","code":"is_date(x)"},{"path":"https://ggobi.github.io/ggally/reference/is_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is a date — is_date","text":"x vector","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_ggmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is a ggmatrix — is_ggmatrix","title":"Check if an object is a ggmatrix — is_ggmatrix","text":"Check object ggmatrix","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_ggmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is a ggmatrix — is_ggmatrix","text":"","code":"is_ggmatrix(x)"},{"path":"https://ggobi.github.io/ggally/reference/is_ggmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is a ggmatrix — is_ggmatrix","text":"x object check","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_ggmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is a ggmatrix — is_ggmatrix","text":"Logical value indicating object ggmatrix","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_ggmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an object is a ggmatrix — is_ggmatrix","text":"","code":"is_ggmatrix(ggpairs(mtcars)) #> [1] TRUE is_ggmatrix(ggplot2::ggplot()) #> [1] FALSE"},{"path":"https://ggobi.github.io/ggally/reference/is_horizontal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if plot is horizontal — is_horizontal","title":"Check if plot is horizontal — is_horizontal","text":"Check plot horizontal","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_horizontal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if plot is horizontal — is_horizontal","text":"","code":"is_horizontal(data, mapping, val = \"y\")  is_character_column(data, mapping, val = \"y\")"},{"path":"https://ggobi.github.io/ggally/reference/is_horizontal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if plot is horizontal — is_horizontal","text":"data data used ggplot2 plot mapping ggplot2 aes() mapping val key retrieve mapping","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_horizontal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if plot is horizontal — is_horizontal","text":"Boolean determining data character-like data","code":""},{"path":"https://ggobi.github.io/ggally/reference/is_horizontal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if plot is horizontal — is_horizontal","text":"","code":"is_horizontal(iris, ggplot2::aes(Sepal.Length, Species)) # TRUE #> [1] TRUE is_horizontal(iris, ggplot2::aes(Sepal.Length, Species), \"x\") # FALSE #> [1] FALSE is_horizontal(iris, ggplot2::aes(Sepal.Length, Sepal.Width)) # FALSE #> [1] FALSE"},{"path":"https://ggobi.github.io/ggally/reference/lowertriangle.html","id":null,"dir":"Reference","previous_headings":"","what":"lowertriangle - rearrange dataset as the preparation of ggscatmat function — lowertriangle","title":"lowertriangle - rearrange dataset as the preparation of ggscatmat function — lowertriangle","text":"function making melted dataset used plot lowertriangle scatterplots.","code":""},{"path":"https://ggobi.github.io/ggally/reference/lowertriangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lowertriangle - rearrange dataset as the preparation of ggscatmat function — lowertriangle","text":"","code":"lowertriangle(data, columns = 1:ncol(data), color = NULL)"},{"path":"https://ggobi.github.io/ggally/reference/lowertriangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lowertriangle - rearrange dataset as the preparation of ggscatmat function — lowertriangle","text":"data data matrix. contain numerical (continuous) data. columns option choose column used raw dataset. Defaults 1:ncol(data) color option choose factor variable grouped . Defaults (NULL)","code":""},{"path":"https://ggobi.github.io/ggally/reference/lowertriangle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lowertriangle - rearrange dataset as the preparation of ggscatmat function — lowertriangle","text":"Mengjia Ni, Di Cook","code":""},{"path":"https://ggobi.github.io/ggally/reference/lowertriangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lowertriangle - rearrange dataset as the preparation of ggscatmat function — lowertriangle","text":"","code":"data(flea) head(lowertriangle(flea, columns = 2:4)) #>   xvalue yvalue xslot yslot  xlab  ylab #> 1    191     NA     1     1 tars1 tars1 #> 2    185     NA     1     1 tars1 tars1 #> 3    200     NA     1     1 tars1 tars1 #> 4    173     NA     1     1 tars1 tars1 #> 5    171     NA     1     1 tars1 tars1 #> 6    160     NA     1     1 tars1 tars1 head(lowertriangle(flea)) #>   xvalue yvalue xslot yslot  xlab  ylab #> 1    191     NA     1     1 tars1 tars1 #> 2    185     NA     1     1 tars1 tars1 #> 3    200     NA     1     1 tars1 tars1 #> 4    173     NA     1     1 tars1 tars1 #> 5    171     NA     1     1 tars1 tars1 #> 6    160     NA     1     1 tars1 tars1 head(lowertriangle(flea, color = \"species\")) #>   xvalue yvalue xslot yslot  xlab  ylab colorcolumn #> 1    191     NA     1     1 tars1 tars1    Concinna #> 2    185     NA     1     1 tars1 tars1    Concinna #> 3    200     NA     1     1 tars1 tars1    Concinna #> 4    173     NA     1     1 tars1 tars1    Concinna #> 5    171     NA     1     1 tars1 tars1    Concinna #> 6    160     NA     1     1 tars1 tars1    Concinna"},{"path":"https://ggobi.github.io/ggally/reference/mapping_color_to_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Aesthetic mapping color fill — mapping_color_to_fill","title":"Aesthetic mapping color fill — mapping_color_to_fill","text":"Replace fill color make color NULL.","code":""},{"path":"https://ggobi.github.io/ggally/reference/mapping_color_to_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aesthetic mapping color fill — mapping_color_to_fill","text":"","code":"mapping_color_to_fill(current)"},{"path":"https://ggobi.github.io/ggally/reference/mapping_color_to_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aesthetic mapping color fill — mapping_color_to_fill","text":"current current aesthetics","code":""},{"path":"https://ggobi.github.io/ggally/reference/mapping_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Aes name — mapping_string","title":"Aes name — mapping_string","text":"Aes name","code":""},{"path":"https://ggobi.github.io/ggally/reference/mapping_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aes name — mapping_string","text":"","code":"mapping_string(aes_col)"},{"path":"https://ggobi.github.io/ggally/reference/mapping_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aes name — mapping_string","text":"aes_col Single value ggplot2::aes(...)","code":""},{"path":"https://ggobi.github.io/ggally/reference/mapping_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aes name — mapping_string","text":"character string","code":""},{"path":"https://ggobi.github.io/ggally/reference/mapping_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aes name — mapping_string","text":"","code":"mapping <- ggplot2::aes(Petal.Length) mapping_string(mapping$x) #> [1] \"Petal.Length\""},{"path":"https://ggobi.github.io/ggally/reference/mapping_swap_x_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap x and y mapping — mapping_swap_x_y","title":"Swap x and y mapping — mapping_swap_x_y","text":"Swap x y mapping","code":""},{"path":"https://ggobi.github.io/ggally/reference/mapping_swap_x_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap x and y mapping — mapping_swap_x_y","text":"","code":"mapping_swap_x_y(mapping)"},{"path":"https://ggobi.github.io/ggally/reference/mapping_swap_x_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap x and y mapping — mapping_swap_x_y","text":"mapping output ggplot2::aes(...)","code":""},{"path":"https://ggobi.github.io/ggally/reference/mapping_swap_x_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap x and y mapping — mapping_swap_x_y","text":"Aes mapping x y values switched","code":""},{"path":"https://ggobi.github.io/ggally/reference/mapping_swap_x_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap x and y mapping — mapping_swap_x_y","text":"","code":"mapping <- ggplot2::aes(Petal.Length, Sepal.Width) mapping #> Aesthetic mapping:  #> * `x` -> `Petal.Length` #> * `y` -> `Sepal.Width` mapping_swap_x_y(mapping) #> Aesthetic mapping:  #> * `x` -> `Sepal.Width` #> * `y` -> `Petal.Length`"},{"path":"https://ggobi.github.io/ggally/reference/model_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Model term names — model_response_variables","title":"Model term names — model_response_variables","text":"Retrieve either response variable names, beta variable names, beta variable names.  model object class 'lm', default, beta variable names include anova significance stars.","code":""},{"path":"https://ggobi.github.io/ggally/reference/model_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model term names — model_response_variables","text":"","code":"model_response_variables(model, data = broom::augment(model))  model_beta_variables(model, data = broom::augment(model))  model_beta_label(model, data = broom::augment(model), lmStars = TRUE)"},{"path":"https://ggobi.github.io/ggally/reference/model_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model term names — model_response_variables","text":"model model question data equivalent broom::augment(model) lmStars boolean determines stars added labels","code":""},{"path":"https://ggobi.github.io/ggally/reference/model_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model term names — model_response_variables","text":"character vector names","code":""},{"path":"https://ggobi.github.io/ggally/reference/nasa.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Data Expo JSM 2006. — nasa","title":"Data from the Data Expo JSM 2006. — nasa","text":"data provided NASA competition.","code":""},{"path":"https://ggobi.github.io/ggally/reference/nasa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Data Expo JSM 2006. — nasa","text":"","code":"data(nasa)"},{"path":"https://ggobi.github.io/ggally/reference/nasa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Data Expo JSM 2006. — nasa","text":"data frame 41472 rows 17 variables","code":""},{"path":"https://ggobi.github.io/ggally/reference/nasa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data from the Data Expo JSM 2006. — nasa","text":"data shows 6 years monthly measurements 24x24 spatial grid Central America: time integer specifying temporal order measurements x, y, lat, long spatial location measurements. cloudhigh, cloudlow, cloudmid, ozone, pressure, surftemp, temperature various satellite measurements. date, day, month, year specifying time measurements. id unique ide spatial position.","code":""},{"path":"https://ggobi.github.io/ggally/reference/nasa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from the Data Expo JSM 2006. — nasa","text":"Murrell, P. (2010) 2006 Data Expo American Statistical Association. Computational Statistics, 25:551-554.","code":""},{"path":"https://ggobi.github.io/ggally/reference/pigs.html","id":null,"dir":"Reference","previous_headings":"","what":"United Kingdom Pig Production — pigs","title":"United Kingdom Pig Production — pigs","text":"data contains United Kingdom Pig Production book 'Data' Andrews Herzberg. original data can Statlib: http://lib.stat.cmu.edu/datasets/Andrews/T62.1","code":""},{"path":"https://ggobi.github.io/ggally/reference/pigs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United Kingdom Pig Production — pigs","text":"","code":"data(pigs)"},{"path":"https://ggobi.github.io/ggally/reference/pigs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United Kingdom Pig Production — pigs","text":"data frame 48 rows 8 variables","code":""},{"path":"https://ggobi.github.io/ggally/reference/pigs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"United Kingdom Pig Production — pigs","text":"time variable added combination year quarter time year + (quarter - 1) / 4 year year production quarter quarter year production gilts number sows giving birth first time profit ratio price index feed price s_per_herdsz ratio number breeding pigs slaughtered total breeding herd size production number pigs slaughtered reared meat herdsz breeding herd size","code":""},{"path":"https://ggobi.github.io/ggally/reference/pigs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"United Kingdom Pig Production — pigs","text":"Andrews, David F., Agnes M. Herzberg. Data: collection problems many fields student research worker. Springer Science & Business Media, 2012.","code":""},{"path":"https://ggobi.github.io/ggally/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ggobi.github.io/ggally/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ggobi.github.io/ggally/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ggobi.github.io/ggally/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://ggobi.github.io/ggally/reference/plot_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Types — plot_types","title":"Plot Types — plot_types","text":"Retrieves type plot used combinations","code":""},{"path":"https://ggobi.github.io/ggally/reference/plot_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Types — plot_types","text":"","code":"plot_types(data, columnsX, columnsY, allowDiag = TRUE)"},{"path":"https://ggobi.github.io/ggally/reference/plot_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Types — plot_types","text":"data data set used","code":""},{"path":"https://ggobi.github.io/ggally/reference/plot_types.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Types — plot_types","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/plotting_data_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get plotting data type — plotting_data_type","title":"Get plotting data type — plotting_data_type","text":"Get plotting data type","code":""},{"path":"https://ggobi.github.io/ggally/reference/plotting_data_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get plotting data type — plotting_data_type","text":"","code":"plotting_data_type(x)"},{"path":"https://ggobi.github.io/ggally/reference/plotting_data_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get plotting data type — plotting_data_type","text":"x vector","code":""},{"path":"https://ggobi.github.io/ggally/reference/print.ggmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ggmatrix object — print.ggmatrix","title":"Print ggmatrix object — print.ggmatrix","text":"Print method taken ggplot2:::print.ggplot altered ggmatrix object","code":""},{"path":"https://ggobi.github.io/ggally/reference/print.ggmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ggmatrix object — print.ggmatrix","text":"x plot display newpage draw new (empty) page first? vp viewport draw plot ... arguments passed onto ggmatrix_gtable","code":""},{"path":"https://ggobi.github.io/ggally/reference/print.ggmatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print ggmatrix object — print.ggmatrix","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/print.ggmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ggmatrix object — print.ggmatrix","text":"","code":"data(tips) pMat <- ggpairs(tips, c(1, 3, 2), mapping = ggplot2::aes(color = sex)) pMat # calls print(pMat), which calls print.ggmatrix(pMat) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ggobi.github.io/ggally/reference/print_if_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Print if not CRAN — print_if_interactive","title":"Print if not CRAN — print_if_interactive","text":"Small function print plot R session interactive CI build","code":""},{"path":"https://ggobi.github.io/ggally/reference/print_if_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print if not CRAN — print_if_interactive","text":"","code":"print_if_interactive(p)"},{"path":"https://ggobi.github.io/ggally/reference/print_if_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print if not CRAN — print_if_interactive","text":"p plot displayed","code":""},{"path":"https://ggobi.github.io/ggally/reference/psychademic.html","id":null,"dir":"Reference","previous_headings":"","what":"UCLA canonical correlation analysis data — psychademic","title":"UCLA canonical correlation analysis data — psychademic","text":"data contains 600 observations eight variables","code":""},{"path":"https://ggobi.github.io/ggally/reference/psychademic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UCLA canonical correlation analysis data — psychademic","text":"","code":"data(psychademic)"},{"path":"https://ggobi.github.io/ggally/reference/psychademic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UCLA canonical correlation analysis data — psychademic","text":"data frame 600 rows 8 variables","code":""},{"path":"https://ggobi.github.io/ggally/reference/psychademic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UCLA canonical correlation analysis data — psychademic","text":"locus_of_control - psychological self_concept - psychological motivation - psychological. Converted four character groups read - academic write - academic math - academic science - academic female - academic. Dropped original source sex - academic. Added character version female column","code":""},{"path":"https://ggobi.github.io/ggally/reference/psychademic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"UCLA canonical correlation analysis data — psychademic","text":"R Data Analysis Examples | Canonical Correlation Analysis.  UCLA: Institute Digital Research Education. http://www.stats.idre.ucla.edu/r/dae/canonical-correlation-analysis (accessed May 22, 2017).","code":""},{"path":"https://ggobi.github.io/ggally/reference/putPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert a plot into a ggmatrix object — putPlot","title":"Insert a plot into a ggmatrix object — putPlot","text":"Function place plot layout.","code":""},{"path":"https://ggobi.github.io/ggally/reference/putPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert a plot into a ggmatrix object — putPlot","text":"","code":"putPlot(pm, value, i, j)  # S3 method for class 'ggmatrix' pm[i, j, ...] <- value"},{"path":"https://ggobi.github.io/ggally/reference/putPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert a plot into a ggmatrix object — putPlot","text":"pm ggally object altered value ggplot object placed row top j column left ... ignored","code":""},{"path":[]},{"path":"https://ggobi.github.io/ggally/reference/putPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Insert a plot into a ggmatrix object — putPlot","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/putPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert a plot into a ggmatrix object — putPlot","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  custom_car <- ggpairs(mtcars[, c(\"mpg\", \"wt\", \"cyl\")], upper = \"blank\", title = \"Custom Example\") # ggplot example taken from example(geom_text) plot <- ggplot2::ggplot(mtcars, ggplot2::aes(x = wt, y = mpg, label = rownames(mtcars))) plot <- plot +   ggplot2::geom_text(ggplot2::aes(colour = factor(cyl)), size = 3) +   ggplot2::scale_colour_discrete(l = 40) custom_car[1, 2] <- plot personal_plot <- ggally_text(   \"ggpairs allows you\\nto put in your\\nown plot.\\nLike that one.\\n <---\" ) custom_car[1, 3] <- personal_plot # custom_car  # remove plots after creating a plot matrix custom_car[2, 1] <- NULL custom_car[3, 1] <- \"blank\" # the same as storing null custom_car[3, 2] <- NULL p_(custom_car)"},{"path":"https://ggobi.github.io/ggally/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggstats geom_stripped_cols, geom_stripped_rows, ggcoef_compare, ggcoef_model, ggcoef_multinom, ggcoef_plot, signif_stars, stat_cross, stat_prop, stat_weighted_mean, StatCross, StatProp, StatWeightedMean","code":""},{"path":"https://ggobi.github.io/ggally/reference/remove_color_unless_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove colour mapping unless found in select mapping keys — remove_color_unless_equal","title":"Remove colour mapping unless found in select mapping keys — remove_color_unless_equal","text":"Remove colour mapping unless found select mapping keys","code":""},{"path":"https://ggobi.github.io/ggally/reference/remove_color_unless_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove colour mapping unless found in select mapping keys — remove_color_unless_equal","text":"","code":"remove_color_unless_equal(mapping, to = c(\"x\", \"y\"))"},{"path":"https://ggobi.github.io/ggally/reference/remove_color_unless_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove colour mapping unless found in select mapping keys — remove_color_unless_equal","text":"mapping output ggplot2::aes(...) set mapping keys check","code":""},{"path":"https://ggobi.github.io/ggally/reference/remove_color_unless_equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove colour mapping unless found in select mapping keys — remove_color_unless_equal","text":"Aes mapping colour mapping kept found selected mapping keys.","code":""},{"path":"https://ggobi.github.io/ggally/reference/remove_color_unless_equal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove colour mapping unless found in select mapping keys — remove_color_unless_equal","text":"","code":"mapping <- aes(x = sex, y = age, colour = sex)  mapping <- aes(x = sex, y = age, colour = region) remove_color_unless_equal(mapping) #> Aesthetic mapping:  #> * `x` -> `sex` #> * `y` -> `age`"},{"path":"https://ggobi.github.io/ggally/reference/rescale01.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescaling functions — rescale01","title":"Rescaling functions — rescale01","text":"Rescaling functions","code":""},{"path":"https://ggobi.github.io/ggally/reference/rescale01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescaling functions — rescale01","text":"","code":"range01(x)  max1(x)  mean0(x)  min0(x)  rescale01(x, xlim = NULL)  rescale11(x, xlim = NULL)"},{"path":"https://ggobi.github.io/ggally/reference/rescale01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescaling functions — rescale01","text":"x numeric vector xlim value used range","code":""},{"path":"https://ggobi.github.io/ggally/reference/scag_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Find order of variables — scag_order","title":"Find order of variables — scag_order","text":"Find order variables based specified scagnostic measure maximizing index values measure along path.","code":""},{"path":"https://ggobi.github.io/ggally/reference/scag_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find order of variables — scag_order","text":"","code":"scag_order(scag, vars, measure)"},{"path":"https://ggobi.github.io/ggally/reference/scag_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find order of variables — scag_order","text":"scag scagnostics object vars character vector variables ordered measure scagnostics measure order according ","code":""},{"path":"https://ggobi.github.io/ggally/reference/scag_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find order of variables — scag_order","text":"character vector variable ordered according given scagnostic measure","code":""},{"path":"https://ggobi.github.io/ggally/reference/scag_order.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find order of variables — scag_order","text":"Barret Schloerke","code":""},{"path":"https://ggobi.github.io/ggally/reference/scatmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the lowertriangle and density plots of the scatter plot matrix. — scatmat","title":"Plots the lowertriangle and density plots of the scatter plot matrix. — scatmat","text":"Function making scatterplots lower triangle diagonal density plots.","code":""},{"path":"https://ggobi.github.io/ggally/reference/scatmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the lowertriangle and density plots of the scatter plot matrix. — scatmat","text":"","code":"scatmat(data, columns = 1:ncol(data), color = NULL, alpha = 1)"},{"path":"https://ggobi.github.io/ggally/reference/scatmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the lowertriangle and density plots of the scatter plot matrix. — scatmat","text":"data data matrix. contain numerical (continuous) data. columns option choose column used raw dataset. Defaults 1:ncol(data) color option group dataset factor variable color different colors. Defaults NULL alpha option set transparency scatterplots large data. Defaults 1.","code":""},{"path":"https://ggobi.github.io/ggally/reference/scatmat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots the lowertriangle and density plots of the scatter plot matrix. — scatmat","text":"Mengjia Ni, Di Cook","code":""},{"path":"https://ggobi.github.io/ggally/reference/scatmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the lowertriangle and density plots of the scatter plot matrix. — scatmat","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  data(flea)  p_(scatmat(flea, columns = 2:4))  p_(scatmat(flea, columns = 2:4, color = \"species\"))"},{"path":"https://ggobi.github.io/ggally/reference/singleClassOrder.html","id":null,"dir":"Reference","previous_headings":"","what":"Order axis variables — singleClassOrder","title":"Order axis variables — singleClassOrder","text":"Order axis variables separation one class rest (separation least).","code":""},{"path":"https://ggobi.github.io/ggally/reference/singleClassOrder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order axis variables — singleClassOrder","text":"","code":"singleClassOrder(classVar, axisVars, specClass = NULL)"},{"path":"https://ggobi.github.io/ggally/reference/singleClassOrder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order axis variables — singleClassOrder","text":"classVar class variable (vector original dataset) axisVars variables plotted axes (data frame) specClass character string matching level classVar; instead looking separation class rest, look separation class rest","code":""},{"path":"https://ggobi.github.io/ggally/reference/singleClassOrder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order axis variables — singleClassOrder","text":"character vector names axisVars ordered first variable separation one classes rest, last variable least (measured F-statistics ANOVA)","code":""},{"path":"https://ggobi.github.io/ggally/reference/singleClassOrder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Order axis variables — singleClassOrder","text":"Jason Crowley","code":""},{"path":"https://ggobi.github.io/ggally/reference/skewness.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample skewness — skewness","title":"Sample skewness — skewness","text":"Calculate sample skewness vector ignoring missing values.","code":""},{"path":"https://ggobi.github.io/ggally/reference/skewness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample skewness — skewness","text":"","code":"skewness(x)"},{"path":"https://ggobi.github.io/ggally/reference/skewness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample skewness — skewness","text":"x numeric vector","code":""},{"path":"https://ggobi.github.io/ggally/reference/skewness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample skewness — skewness","text":"sample skewness x","code":""},{"path":"https://ggobi.github.io/ggally/reference/skewness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample skewness — skewness","text":"Jason Crowley","code":""},{"path":"https://ggobi.github.io/ggally/reference/str.ggmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"ggmatrix structure — str.ggmatrix","title":"ggmatrix structure — str.ggmatrix","text":"View condensed version ggmatrix object. attribute \"class\" ALWAYS altered \"_class\" avoid recursion.","code":""},{"path":"https://ggobi.github.io/ggally/reference/str.ggmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggmatrix structure — str.ggmatrix","text":"object ggmatrix object viewed ... passed default str method raw boolean determine plots converted text kept original objects","code":""},{"path":"https://ggobi.github.io/ggally/reference/tips.html","id":null,"dir":"Reference","previous_headings":"","what":"Tipping data — tips","title":"Tipping data — tips","text":"One waiter recorded information tip received period months working one restaurant. collected several variables:","code":""},{"path":"https://ggobi.github.io/ggally/reference/tips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tipping data — tips","text":"","code":"tips"},{"path":"https://ggobi.github.io/ggally/reference/tips.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tipping data — tips","text":"data frame 244 rows 7 variables","code":""},{"path":"https://ggobi.github.io/ggally/reference/tips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tipping data — tips","text":"tip dollars, bill dollars, sex bill payer, whether smokers party, day week, time day, size party. recorded 244 tips. data reported collection case studies business statistics (Bryant & Smith 1995).","code":""},{"path":"https://ggobi.github.io/ggally/reference/tips.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tipping data — tips","text":"Bryant, P. G. Smith, M (1995) Practical Data Analysis: Case Studies Business Statistics.  Homewood, IL: Richard D. Irwin Publishing:","code":""},{"path":"https://ggobi.github.io/ggally/reference/twitter_spambots.html","id":null,"dir":"Reference","previous_headings":"","what":"Twitter spambots — twitter_spambots","title":"Twitter spambots — twitter_spambots","text":"network spambots found Twitter part data mining project.","code":""},{"path":"https://ggobi.github.io/ggally/reference/twitter_spambots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Twitter spambots — twitter_spambots","text":"","code":"data(twitter_spambots)"},{"path":"https://ggobi.github.io/ggally/reference/twitter_spambots.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Twitter spambots — twitter_spambots","text":"object class network 120 edges 94 vertices.","code":""},{"path":"https://ggobi.github.io/ggally/reference/twitter_spambots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Twitter spambots — twitter_spambots","text":"node network identified Twitter screen name account carries five vertex attributes: location user's location, provided user lat latitude, based user's location lon longitude, based user's location followers number Twitter accounts follow account friends number Twitter accounts followed account","code":""},{"path":"https://ggobi.github.io/ggally/reference/twitter_spambots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Twitter spambots — twitter_spambots","text":"Amos Elberg","code":""},{"path":"https://ggobi.github.io/ggally/reference/uppertriangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Rearrange dataset as the preparation of ggscatmat function — uppertriangle","title":"Rearrange dataset as the preparation of ggscatmat function — uppertriangle","text":"Function making dataset used plot uppertriangle plots.","code":""},{"path":"https://ggobi.github.io/ggally/reference/uppertriangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rearrange dataset as the preparation of ggscatmat function — uppertriangle","text":"","code":"uppertriangle(   data,   columns = 1:ncol(data),   color = NULL,   corMethod = \"pearson\" )"},{"path":"https://ggobi.github.io/ggally/reference/uppertriangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rearrange dataset as the preparation of ggscatmat function — uppertriangle","text":"data data matrix. contain numerical (continuous) data. columns option choose column used raw dataset. Defaults 1:ncol(data) color option choose factor variable grouped . Defaults (NULL) corMethod method argument supplied cor","code":""},{"path":"https://ggobi.github.io/ggally/reference/uppertriangle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rearrange dataset as the preparation of ggscatmat function — uppertriangle","text":"Mengjia Ni, Di Cook","code":""},{"path":"https://ggobi.github.io/ggally/reference/uppertriangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rearrange dataset as the preparation of ggscatmat function — uppertriangle","text":"","code":"data(flea) head(uppertriangle(flea, columns = 2:4)) #> # A tibble: 3 × 5 #> # Groups:   xlab [2] #>   xlab  ylab  r     xvalue yvalue #>   <fct> <fct> <chr>  <dbl>  <dbl> #> 1 tars2 tars1 0.03   126.    182  #> 2 head  tars1 -0.1    50.5   182  #> 3 head  tars2 0.67    50.5   126. head(uppertriangle(flea)) #> # A tibble: 6 × 5 #> # Groups:   xlab [3] #>   xlab  ylab  r     xvalue yvalue #>   <fct> <fct> <chr>  <dbl>  <dbl> #> 1 tars2 tars1 0.03   126.   182   #> 2 head  tars1 -0.1    50.5  182   #> 3 head  tars2 0.67    50.5  126.  #> 4 aede1 tars1 -0.33  136.   182   #> 5 aede1 tars2 0.56   136.   126.  #> 6 aede1 head  0.59   136.    50.5 head(uppertriangle(flea, color = \"species\")) #> # A tibble: 6 × 6 #> # Groups:   xlab, ylab [2] #>   xlab  ylab  colorcolumn r     xvalue yvalue #>   <fct> <fct> <fct>       <chr>  <dbl>  <dbl> #> 1 tars2 tars1 Concinna    0.77   126.     152 #> 2 tars2 tars1 Heikert.    0.64   126.     182 #> 3 tars2 tars1 Heptapot.   0.56   126.     212 #> 4 head  tars1 Concinna    0.68    50.5    152 #> 5 head  tars1 Heikert.    0.65    50.5    182 #> 6 head  tars1 Heptapot.   0.77    50.5    212"},{"path":"https://ggobi.github.io/ggally/reference/v1_ggmatrix_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify a ggmatrix object by adding an ggplot2 object to all — v1_ggmatrix_theme","title":"Modify a ggmatrix object by adding an ggplot2 object to all — v1_ggmatrix_theme","text":"function allows cleaner axis labels plots, deprecated. can achieve effect specifying strip's background placement properties (see Examples).","code":""},{"path":"https://ggobi.github.io/ggally/reference/v1_ggmatrix_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify a ggmatrix object by adding an ggplot2 object to all — v1_ggmatrix_theme","text":"","code":"v1_ggmatrix_theme()"},{"path":"https://ggobi.github.io/ggally/reference/v1_ggmatrix_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify a ggmatrix object by adding an ggplot2 object to all — v1_ggmatrix_theme","text":"","code":"# Small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  # Cleaner axis labels with v1_ggmatrix_theme p_(ggpairs(iris, 1:2) + v1_ggmatrix_theme()) #> Warning: `v1_ggmatrix_theme()` was deprecated in GGally 2.3.0. #> ℹ This function will be removed in future releases.   # Move the column names to the left and bottom p_(ggpairs(iris, 1:2, switch = \"both\") + v1_ggmatrix_theme())   # Manually specifying axis labels properties p_(   ggpairs(iris, 1:2) +   theme(     strip.background = element_rect(fill = \"white\"),     strip.placement = \"outside\"   ) )   # This way you have even more control over how the final plot looks. # For example, if you want to set the background color to yellow: p_(   ggpairs(iris, 1:2) +   theme(     strip.background = element_rect(fill = \"yellow\"),     strip.placement = \"outside\"   ) )"},{"path":"https://ggobi.github.io/ggally/reference/vig_ggally.html","id":null,"dir":"Reference","previous_headings":"","what":"View GGally vignettes — vig_ggally","title":"View GGally vignettes — vig_ggally","text":"function open directly vignette requested. name provided, index GGally vignettes opened.","code":""},{"path":"https://ggobi.github.io/ggally/reference/vig_ggally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View GGally vignettes — vig_ggally","text":"","code":"vig_ggally(name)"},{"path":"https://ggobi.github.io/ggally/reference/vig_ggally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View GGally vignettes — vig_ggally","text":"name Vignette name open. name provided, vignette index opened","code":""},{"path":"https://ggobi.github.io/ggally/reference/vig_ggally.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View GGally vignettes — vig_ggally","text":"method allows vignettes hosted remotely, reducing GGally's package size, installation time.","code":""},{"path":"https://ggobi.github.io/ggally/reference/vig_ggally.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View GGally vignettes — vig_ggally","text":"","code":"# \\donttest{ # View `ggnostic` vignette vig_ggally(\"ggnostic\")  # View all vignettes by GGally vig_ggally() # }"},{"path":"https://ggobi.github.io/ggally/reference/wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a function with different parameter values — wrap_fn_with_param_arg","title":"Wrap a function with different parameter values — wrap_fn_with_param_arg","text":"Wraps function supplied parameters force different default behavior.  useful functions supplied ggpairs.  allows change behavior one function, rather creating multiple functions different parameter settings.","code":""},{"path":"https://ggobi.github.io/ggally/reference/wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a function with different parameter values — wrap_fn_with_param_arg","text":"","code":"wrap_fn_with_param_arg(   funcVal,   params = NULL,   funcArgName = deparse(substitute(funcVal)) )  wrapp(funcVal, params = NULL, funcArgName = deparse(substitute(funcVal)))  wrap(funcVal, ..., funcArgName = deparse(substitute(funcVal)))  wrap_fn_with_params(funcVal, ..., funcArgName = deparse(substitute(funcVal)))"},{"path":"https://ggobi.github.io/ggally/reference/wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a function with different parameter values — wrap_fn_with_param_arg","text":"funcVal function params applied .  function follow api function(data, mapping, ...){}. funcVal allowed string one ggally_NAME functions, \"points\" ggally_points \"facetdensity\" ggally_facetdensity. params named vector list parameters applied funcVal funcArgName name function displayed ... named parameters supplied wrap_fn_with_param_arg","code":""},{"path":"https://ggobi.github.io/ggally/reference/wrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap a function with different parameter values — wrap_fn_with_param_arg","text":"function(data, mapping, ...){} wrap original function parameters applied arguments","code":""},{"path":"https://ggobi.github.io/ggally/reference/wrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrap a function with different parameter values — wrap_fn_with_param_arg","text":"wrap identical wrap_fn_with_params.  function take new parameters arguments. wrapp identical wrap_fn_with_param_arg.  functions take new parameters single list. params fn attributes debugging purposes.  either attribute altered, function must re-wrapped changes take effect.","code":""},{"path":"https://ggobi.github.io/ggally/reference/wrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap a function with different parameter values — wrap_fn_with_param_arg","text":"","code":"# small function to display plots only if it's interactive p_ <- GGally::print_if_interactive  # example function that prints 'val' fn <- function(data, mapping, val = 2) {   print(val) } fn(data = NULL, mapping = NULL) # 2 #> [1] 2  # wrap function to change default value 'val' to 5 instead of 2 wrapped_fn1 <- wrap(fn, val = 5) wrapped_fn1(data = NULL, mapping = NULL) # 5 #> [1] 5 # you may still supply regular values wrapped_fn1(data = NULL, mapping = NULL, val = 3) # 3 #> [1] 3  # wrap function to change 'val' to 5 using the arg list wrapped_fn2 <- wrap_fn_with_param_arg(fn, params = list(val = 5)) wrapped_fn2(data = NULL, mapping = NULL) # 5 #> [1] 5  # change parameter settings in ggpairs for a particular function ## Goal output: regularPlot <- ggally_points(   iris,   ggplot2::aes(Sepal.Length, Sepal.Width),   size = 5, color = \"red\" ) p_(regularPlot)   # Wrap ggally_points to have parameter values size = 5 and color = 'red' w_ggally_points <- wrap(ggally_points, size = 5, color = \"red\") wrappedPlot <- w_ggally_points(   iris,   ggplot2::aes(Sepal.Length, Sepal.Width) ) p_(wrappedPlot)   # Double check the aes parameters are the same for the geom_point layer identical(regularPlot$layers[[1]]$aes_params, wrappedPlot$layers[[1]]$aes_params) #> [1] TRUE  # Use a wrapped function in ggpairs pm <- ggpairs(iris, 1:3, lower = list(continuous = wrap(ggally_points, size = 5, color = \"red\"))) p_(pm)  pm <- ggpairs(iris, 1:3, lower = list(continuous = w_ggally_points)) p_(pm)"},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-230","dir":"Changelog","previous_headings":"","what":"GGally 2.3.0","title":"GGally 2.3.0","text":"ggplot2 v4.0.0, objects now +’ed together using S7. means startup message Registered S3 method overwritten 'GGally' removed. (Thank @teunbrand enhancement ggplot2! #545) Fixed bug correlations 0 ggcor() output silently dropped. Now correlations always displayed. (Thank @winterstat! #536) Fixed correlations values ggcor() formatted number decimal places via label_round. Now 0.2 0.001 label_round = 2 displayed \"0.20\" \"0.00\" respectively. (Thank @winterstat! #536) Added parameter ggally_cor(na.rm=) passed directly ggally_statistic(). (Thank @vinouselouane! #516) Deprecated parameter ggally_cor(use=). value never leveraged within code. Please use ggally_cor(na.rm=) instead. (Thank @vinouselouane! #516) Prepare GGally ggplot2 v4 (Thank @teunbrand! #528) Replace internal plyr usage dplyr. (Thank @MichaelChirico! #520, #521, #522, #523, #524, #525, #527, #530) General package dependency cleanup. (Thank @olivroy! #509) Fix anyClass ordering ggparcoord() data missing values (Thank @92amartins! #500) Use lifecycle deprecation warnings (Thank @92amartins! #494, #496) Leverage .data$ mask remove global variable declarations. (Thank @MichaelChirico! #533) Warn return \"NA\" less 3 values given combination ggally_cor(). (Thank @bk1n! #510) Added helper method is_ggmatrix() check object ggmatrix object. (#548) Remove gg class ggmatrix objects. longer needed due enhanced + S7 methods. (#549) Bumped minimum required version R 4.3 due S7 handling + operations. (#549)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-221","dir":"Changelog","previous_headings":"","what":"GGally 2.2.1","title":"GGally 2.2.1","text":"CRAN release: 2024-02-13 Fix compatibility ggplot2 3.5.0 (Thank @teunbrand! #481)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-220","dir":"Changelog","previous_headings":"","what":"GGally 2.2.0","title":"GGally 2.2.0","text":"CRAN release: 2023-11-22","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"bug-fixes-2-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"GGally 2.2.0","text":"Removed dependency reshape2 (#475) Reverse ordering y-axis ggally_count() (#420) Facets ordering ggcoef_compare() (#426) Fix ggcoef_compare() using tidy selectors no_reference_row (#430) Fix ggcoef_compare() regarding no_reference_row option (#430) Fix ggcoef_compare() include argument (#447) New default tidier ggcoef_model(), now using broom.helpers::tidy_with_broom_or_parameters() (#432) Re-export methods redirect vignettes ggstats package (#452, #457) Replaced ..scaled.. after_stat(scaled) ggscatmat (#467)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-212","dir":"Changelog","previous_headings":"","what":"GGally 2.1.2","title":"GGally 2.1.2","text":"CRAN release: 2021-06-21","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"bug-fixes-2-1-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"GGally 2.1.2","text":"Replace ggplot2 usage *_guide = FALSE *_guide = \"none\" (@larmarange, #418) Require network >= 1.17.1 (#418)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-211","dir":"Changelog","previous_headings":"","what":"GGally 2.1.1","title":"GGally 2.1.1","text":"CRAN release: 2021-03-08","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"bug-fixes-2-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"GGally 2.1.1","text":"Ignore colour aesthetic values NA. (@larmarange, #404) Avoid duplicates within stat_cross(). (@larmarange, #402) Avoid error tidiers return p-values. (@larmarange, #400) Suggest emmeans allow ggcoef() example execute. (#407)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-210","dir":"Changelog","previous_headings":"","what":"GGally 2.1.0","title":"GGally 2.1.0","text":"CRAN release: 2021-01-06","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"breaking-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"GGally 2.1.0","text":"Following version 7.0.0 broom, computed residuals stat_cross() now named \"resid\" \"std.resid\". cells fill arguments ggally_crosstable() ggtable() updated accordingly (@larmarange, #391)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"other-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"GGally 2.1.0","text":"ggcoef() redesign based broom.helpers four new functions: ggcoef_model(), ggcoef_compare(), ggcoef_multinom() ggcoef_plot() (informations dedicated vignette, @larmarange, #392) New geometries: geom_stripped_rows() geom_stripped_cols() (#392, @larmarange) New option reverse_fill_labels ggally_colbar() ggally_rowbar() (@larmarange, #374) stat_prop() now accepts x y aesthetic (#395, @larmarange) Temporarily listening ggally_statistic(family) avoid monospaced font issues. See #373 details. (#387)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-200","dir":"Changelog","previous_headings":"","what":"GGally 2.0.0","title":"GGally 2.0.0","text":"CRAN release: 2020-06-06","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"new-vignettes-2-0-0","dir":"Changelog","previous_headings":"","what":"New Vignettes","title":"GGally 2.0.0","text":"vig_ggally(\"ggally_plots\") - ggally_*(): List available high-level plots vig_ggally(\"ggally_stats\") - stat_*(): Additional statistics ggplot2 vig_ggally(\"ggbivariate\") - ggbivariate(): Plot outcome several potential explanatory variables vig_ggally(\"ggtable\") - ggtable(): Cross-tabulated tables view vignettes GGally, call GGally::vig_ggally()","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"new-functions-2-0-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"GGally 2.0.0","text":"ggbivariate() (@larmarange, #324) * Display outcome using several potential explanatory variables * vig_ggally(\"ggbivariate\") ggtable() (@larmarange, #351) * Cross-tabulated tables discrete variables * vig_ggally(\"ggtable\") add_to_ggmatrix() (#362) * Add ggplot2 objects ggmatrix objects selected locations * Locations can rows, columns, matrices, shorthand values. ggally_autopoint(), ggally_autopointDiag() (@larmarange, #325) * Make scatterplots compatible continuous categorical variables using ggforce::geom_autopoint(). ggally_colbar(), ggally_rowbar() (@larmarange, #324) * Plot column row percentage using bar plots. ggally_count(), ggally_countDiag() (@larmarange, #321) * Plot number observations using rectangles proportional areas. ggally_cross() (@larmarange, #326) * Plot number observations using square points proportional areas. ggally_crosstable() (@larmarange, #351) * Display cross-tabulated table. ggally_statistic() (#327) * generalized version ggally_cor() * Use method create functions similar ggally_cor() return text value given x y vector data ggally_summarise_by() (@larmarange, #325) * Display summary statistics continuous variable value discrete variable. ggally_table() (@larmarange, #326) * Plot number observations table. ggally_trends() (@larmarange, #333) * Plot trends using line plots. signif_stars() (@larmarange, #327) * Return appropriate number significance stars character vector provided numeric input values.","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"new-ggplot2-plot-statistics-2-0-0","dir":"Changelog","previous_headings":"","what":"New ggplot2 plot statistics:","title":"GGally 2.0.0","text":"stat_cross() (@larmarange, #326) * Computes statistics 2-dimensional matrix using broom::augment.htest. stat_prop() (@larmarange, #324) * Compute proportions according custom denominator. stat_weighted_mean() (@larmarange, #333) * Compute mean y aesthetic unique value x, taking account weight aesthetic provided.","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"major-updates-2-0-0","dir":"Changelog","previous_headings":"","what":"Major updates","title":"GGally 2.0.0","text":"ggally_cor() (#327) * New implementation using ggally_statistic() * now hide grid default add border (displayGrid = FALSE) * Added ability display significance stars (stars = TRUE) * Alignment fixed short long names displayed within view. alignPercent now corresponds center text. * Added ability separate arguments sent title groups (title_args group_args) * Digits now represents total number digits decimal place. * use old version, change ggally_cor() function calls ggally_cor_v1_5(). * Previously deprecated parameters removed Website * Updated use pkgdown (#335)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"features-and-bug-fixes-2-0-0","dir":"Changelog","previous_headings":"","what":"Features and bug fixes:","title":"GGally 2.0.0","text":"ggpairs() (#331) * New proportion argument control relative size sub-plots * option proportion = \"auto\" automatic guess based number levels discrete variables ggduo() (#331) * New xProportion yProportion arguments control relative size sub-plots * Set option xProportion = \"auto\" yProportion = \"auto\" automatic guess based number levels discrete variables ggscatmat() * lowertriangle() now preallocates ’s memory usage 2-5x speed improvement. (@vlepori, #328) * Fixed facet’ing error factor order preserved. error caused facets alphabetically sorted, cause plots appear unexpected locations. (#355)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-150","dir":"Changelog","previous_headings":"","what":"GGally 1.5.0","title":"GGally 1.5.0","text":"CRAN release: 2020-03-25 Updated work ggplot2 v3.3.0 (#308) ggnet ggnet2 * Fixed logic bugs newer R versions ggally_box ggally_dot * Label now appears axis displayed plot matrix. (#253) ggsurv * Provide sensible legend values multiple factors present. (#310) ggally_cor * Added displayGrid argument turn background grid. (#312)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-1-5-0","dir":"Changelog","previous_headings":"","what":"GGally 1.3.3","title":"GGally 1.5.0","text":"ggpairs ggduo Become ggplot2 v2.2.2 compliant (#266) retrieving functions wrap, ggally_* functions require GGally namespace (#269) Exported eval_data_col, mapping_string, mapping_swap_x_y (5d157f6) Exported is_horizontal is_character_column (#270) Logical values now treated discrete (#272) ggmatrix progress parameter added ggmatrix (appropriate parent functions). Allows TRUE, FALSE, NULL, function(pm){...} (#271) ggnostic Cooks distance cutoff now F_{p, n - p}(0.5) (#274) ggnet2 Replaced loading packages loading namespaces(#262) ggally_smooth Added shrink se parameters ggally_smooth (#247) ggcoef Added sort parameter sort beta values (#273) ggparcoord Fixed bug x axis breaks labels appear splineFactor = TRUE (#279)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-1-5-0-1","dir":"Changelog","previous_headings":"","what":"GGally 1.3.2","title":"GGally 1.5.0","text":"ggpairs ggduo Removed warning pure numeric names gave warning (#238, @lepennec) Fixed ordering issue horizontal boxplots (#239) ggparcoord Fixed missing x aes requirement shadebox provided (#237, @treysp) Package Made igraph non required dependency tests (#240)","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-1-5-0-2","dir":"Changelog","previous_headings":"","what":"GGally 1.3.1","title":"GGally 1.5.0","text":"Added new dataset psychademic See ?psychademic details (updated broken UCLA links) Added original ggmatrix theme added function set theme clear strip background rearrange strip positions added parameter switch ggmatrix (friends) allow strip repositioning. See ?ggplot::facet_grid documentation switch (#223, #224) ggsurv error reporting removed one error check covered places (#222) +.gg allow add list items ggmatrix (#228) ggmatrix.print fix strip issues ggplot2 name update","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-1-5-0-3","dir":"Changelog","previous_headings":"","what":"GGally 1.3.0","title":"GGally 1.5.0","text":"ggmatrix.print - massive update! Now prints ggplot2 facet’ed structure Column titles now placed strip plot matrix 16 plots , progress bar displayed automatically (interactive). Please look documentation ggmatrix_gtable details. ggmatrix legend legend may added legend parameter ggduo, ggpairs, ggmatrix May specify (length two) numeric plot coordinate May specify (length one) numeric plot position May specify legend object retrieved grab_legend ggnostic - New function! Produces ggmatrix diagnostic plots model object Uses broom retrieve model information column plot matrix predictor variable. rows can display response variables, fitted points, residuals, standardized residuals, leave one model sigma values, diagonals hat matrix, cook’s distance point. ggfacet - New function! Produces single ggplot2 object interface similar ggduo ggpairs fn_switch - New function! Provide many functions list call one function run time according mapping value Useful ggnostic different behavior depending y variable Allows ‘default’ value default switch case ggmatrix - allow custom labellers facet labels Added labeller parameter supplied ggplot2::facet_grid() Allows labels plotmath expressions ggmatrix ggplot2::last_plot() ggmatrix object printed, ggplot2::last_plot() return plot matrix ggmatrix ggplot2 labels ggplot2::labs +’ed ggmatrix object ggplot2::xlab ggplot2::ylab may +’ed ggmatrix object ggplot2::ggtitle +’ed ggmatrix object (anything returns class “labels” may added ggmatrix object) ggmatrix ggplot2::ggsave() ggsave now works ggmatrix objects ggpairs ggduo check cardinality (#197) creating ggmatrix object, check made character/factor columns 15 (default) unique combinations, error thrown. Setting cardinality_threshold parameter higher value can fix problem (knowing single cell plots may take time produce) Setting cardinality_threshold parameter NULL can stop check ggmatrix plot proportions ggmatrix can set plot proportions parameters xProportions yProportions change relative size plot panels produced. ggally_cor colour aesthetic color must non-numeric value ggsurv added boolean allow legend sorted fixed bug censored points custom color didn’t match properly (#185) Vignettes vignettes now displayed using packagedocs. info http://hafen.github.io/packagedocs/ ggally_box_no_facet ggally_dot_no_facet New methods added defaults pair new ggmatrix print method","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-1-5-0-4","dir":"Changelog","previous_headings":"","what":"GGally 1.2.0","title":"GGally 1.5.0","text":"install requirements relaxed install requirements grid (5d06dfc, d57469a, 933bb14, 73b314d) ggduo - New! plot two grouped data plot matrix (#173) helpful plotting two sets columns, multivariate analysis, canonical correlation analysis sure check examples! ggally_smooth_loess - New! uses loess method drawing line (1552f96) ggally_smooth_lm - New! uses lm method drawing line (1552f96) alias ggally_smooth ggmatrix.print fixed bug strips causing spacing issue printing axis labels (174630d) ggnetworkmap fixed bug checking package ‘intergraph’ couldn’t reached ggsurv changed default plotting multiple censored data color match survival line package testing added many tests!","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-1-5-0-5","dir":"Changelog","previous_headings":"","what":"GGally 1.1.0","title":"GGally 1.5.0","text":"ggcoef - New! plot model coefficients broom ggplot2 PR#162 Plotting model coefficients (http://www.r-statistics.com/2010/07/visualization--regression-coefficients--r/) gglegend - New! pull legend plot can also used ggpairs PR#155, PR#169 ggally_densityDiag fixed bug ‘…’ respected (d0fe633) ggally_smooth added ‘method’ parameter (411213c) ggally_ratio call ggfluctuation2 anymore. PR#165 ggcorr fixed issue unnamed correlation matrix used input PR#146 fixed issue undesired shifting layout.exp > 0 PR#171 ggfluctuation2 deprecated. Please use ggally_ratio instead PR#165 ggnetworkmap fixed issue overlaying network world map PR#157 ggparcoord Fixed odd bug list trying forced double PR#162 ggpairs Fixed improperly rotated axes ggally_ratio PR#165 ggscatmat added ‘corMethod’ parameter use upper triangle PR#145 ggsurv size.est size.ci parameters added PR#153 ordering changed reflect survival time PR#147 added vignette PR#154 wrap documentation updated PR#152 changes default behavior . argument supplied, argument take precedence github chat https://gitter.im/ggobi/ggally place visit general questions. travis-ci cache packages faster checking install covr lintr github testing purposes","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-1-5-0-6","dir":"Changelog","previous_headings":"","what":"GGally 1.0.1","title":"GGally 1.5.0","text":"ggparcoord fix handling factor group variable PR#131 ggscatmat force char columns factors PR#134 print.ggmatrix add boolean grid.newpage ggmatrix print method PR#126","code":""},{"path":"https://ggobi.github.io/ggally/news/index.html","id":"ggally-1-5-0-7","dir":"Changelog","previous_headings":"","what":"GGally 1.0.0","title":"GGally 1.5.0","text":"ggplot2 GGally upgraded run latest ggplot2 v1.1.0. PR#109 New functions ggmatrix. Make generic matrix ggplot2 plots ggnetworkmap. Plot network ggplot2 suitable overlay ggmap::map ggplot, ggplot ggnet2. Function plotting network objects using ggplot2, additional control graphical parameters supported ggnet function Vignettes glyph - new! ggmatrix - new! ggnetworkmap - new! ggpairs - new! ggscatmat - new! ggmatrix allows bracket notation getting setting plots. PR#61 full control axis labels axis text. PR#107, PR#111 ggpairs now wrapper ggmatrix takes ‘wrapped’ functions. better handles case many different parameters supplied different plot types. PR#90 dates better handled ggpairs. Still room improvement default behavior, cause errors. PR#58, PR#59 displays ‘NA’ plot combination data NA. PR#119 ggcorr legend title expressions may used. PR#55 handles objects may coerced data.frame PR#70 gglyph changed geom_line geom_path gglyph. Fixes ordering issue. PR#51 ggparcoord remaining columns passed aesthetics may added later. PR#54 fixed parcoord ordering issues odd names. PR#106 fixed scaling unique length equals 1. PR#122 ggsurv color censored marks color line. PR#74 allow different censored color marks. PR#113 ggally_density add fake data points extend limits stat_density2d. PR#114 ggally_na new plot type! Data removed cityServiceFirms added twitter_spambots","code":""}]
