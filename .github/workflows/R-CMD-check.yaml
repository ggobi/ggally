on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - rc-*

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macOS-latest,   r: 'devel',   force_suggests: "0" }
          - { os: windows-latest, r: 'devel',   force_suggests: "1" }
          - { os: macOS-latest,   r: 'release', force_suggests: "1" }
          - { os: windows-latest, r: 'release', force_suggests: "1" }
          - { os: ubuntu-16.04,   r: 'release', force_suggests: "1",  rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest" }
          - { os: macOS-latest,   r: 'oldrel',  force_suggests: "1" }
          - { os: windows-latest, r: 'oldrel',  force_suggests: "1" }
          - { os: ubuntu-16.04,   r: 'oldrel',  force_suggests: "1" , rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest" }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      _R_CHECK_FORCE_SUGGESTS_: ${{ matrix.config.force_suggests }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        if: runner.os != 'Windows' || matrix.config.r == 'devel'
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}
      - name: Install dependencies (Windows binary)
        if: runner.os == 'Windows' && matrix.config.r != 'devel'
        run: |
          remotes::install_deps(dependencies = TRUE, type = "binary")
          remotes::install_cran("rcmdcheck", type = "binary")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check with printing
        env:
          _R_CHECK_CRAN_INCOMING_: false
          CAN_PRINT: "TRUE"
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Check as CRAN
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "note", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
